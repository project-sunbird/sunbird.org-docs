version: 2
jobs:
  version-pr:
    working_directory: /project/workplace/
    docker:
      - image: lakhanmandloi/docker-ubuntu-ruby-python-npm:2.0
    steps:
    
      # Checkout
      - checkout
      
      # Get PR details
      - type: shell
        name: PR - Fetch details from API
        command: |
          prdata=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/project-sunbird/sunbird.org-docs/pulls/$CIRCLE_PR_NUMBER)
          branchname=$(echo "${prdata}" | jq '.base.ref')
          branch=${branchname//\"/}
          username=$(echo "${prdata}" | jq '.user.login')
          contributor=${username//\"/}
          
      # Run Build command & deploy to PR site
      - type: shell
        name: PR - Build & Deploy
        command: |
          prdata=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/project-sunbird/sunbird.org-docs/pulls/$CIRCLE_PR_NUMBER)
          branchname=$(echo "${prdata}" | jq '.base.ref')
          branch=${branchname//\"/}
          echo "buildNo: $CIRCLE_BUILD_NUM" >> _config.yml
          echo "docsBranch: $branch" >> _config.yml
          echo "docsVersion: $branch" >> _config.yml
          bundle exec jekyll build
          cd _site
          aws s3 sync --delete . s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/$branch/
          
      # Run Version TOC Build command & deploy PR site
      - type: shell
        name: Version PR (TOC) - Build & Deploy
        command: |
          cd ..
          rm -rf toc-build
          git clone -b toc $CIRCLE_REPOSITORY_URL toc-build
          cd toc-build
          echo "buildNo: $CIRCLE_BUILD_NUM" >> _config.yml
          bundle exec jekyll build
          cd _site
          aws s3 cp index.html                      s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/index.html
          aws s3 cp 404.html                        s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/404.html
          aws s3 cp robots.txt                      s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/robots.txt
          aws s3 cp sitemap.xml                     s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/sitemap.xml
          aws s3 sync --delete css/.                s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/css/
          aws s3 sync --delete js/.                 s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/js/
          aws s3 sync --delete img/.                s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/img/
          aws s3 sync --delete contributions/.      s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/contributions/
          #aws s3 cp CNAME                          s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/CNAME
          #aws s3 cp favicon.ico                    s3://sunbird-docs-qa/docs-pr/$CIRCLE_PR_NUMBER/favicon.ico
          
      # Comment on PR
      - type: shell
        name: PR - Add comment on PR with URL details
        command: |
         prdata=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/project-sunbird/sunbird.org-docs/pulls/$CIRCLE_PR_NUMBER)
         branchname=$(echo "${prdata}" | jq '.base.ref')
         branch=${branchname//\"/}
         username=$(echo "${prdata}" | jq '.user.login')
         contributor=${username//\"/}
         
         updatedfiles=$(curl -X GET -u $GITHUB_USER_TOKEN:x-oauth-basic https://api.github.com/repos/project-sunbird/sunbird.org-docs/pulls/$CIRCLE_PR_NUMBER/files)
         updatedfileslist=''
         updatedsectionslist=''
         for row in $(echo "${updatedfiles}" | jq -r '.[] | @base64')
         do  
          _jq() 
          {
           echo ${row} | base64 --decode | jq -r ${1}
          }
          file=$(_jq '.filename')
          echo $file
          if [[ "$file" == pages/* ]] && [[ "$file" == *.md ]]
          then
          filedocs=${file//\.md/}
          filedocs=${filedocs//index/}
          filedocs=${filedocs//.html/}
          filedocs=${filedocs//pages\//}
          url='- http://'$CIRCLE_PR_NUMBER'.qa.docs.sunbird.org/'$branch'/'$filedocs' <br /> '
          updatedfileslist=$updatedfileslist$url
          echo $url
          fi
          if [[ "$file" == apis/* ]]
          then
          fileremove=${file##*/}
          echo $fileremove
          fileapi=${file//$fileremove/}
          url='- http://'$CIRCLE_PR_NUMBER'.qa.docs.sunbird.org/'$branch'/'$fileapi' <br /> '
          updatedfileslist=$updatedfileslist$url
          echo $url
          fi
          if [[ "$file" == _includes/* ]]
          then
          sections=${file//.html/}
          sections=${sections//_includes\//}
          url='- '$sections' <br /> '
          updatedsectionslist=$updatedsectionslist$url
          fi
         done
         
         curl \
          -X POST \
          -u $GITHUB_USER_TOKEN:x-oauth-basic \
          -d '{"body": "Hello @'"$contributor"',<br/><br/> _This is a auto-generated response._ <br/><br/> Click the URL for review pull request - http://'"$CIRCLE_PR_NUMBER"'.qa.docs.sunbird.org/'"$branch"' .<br/> **Note:** Only _'"$branch"'_ version was generated for PR preview. <br/><br/> **Modified pages are -** <br />'"$updatedfileslist"' <br/> **Modified sections are -** <br />'"$updatedsectionslist"' "}' \
          https://api.github.com/repos/project-sunbird/sunbird.org-docs/issues/$CIRCLE_PR_NUMBER/comments
  
  version-staging:
    working_directory: /project/workplace/
    docker:
      - image: lakhanmandloi/docker-ubuntu-ruby-python-npm:2.0
    steps:
    
      # Checkout
      - checkout
      
      # Run Build command & Deploy to Staging site
      - type: shell
        name: Commit - Build & Deploy
        command: |
          echo "buildNo: $CIRCLE_BUILD_NUM" >> _config.yml
          echo "docsBranch: $CIRCLE_BRANCH" >> _config.yml
          echo "docsVersion: $CIRCLE_BRANCH" >> _config.yml
          bundle exec jekyll build
          cd _site
          aws s3 sync --delete . s3://sunbird-docs-qa/docs-staging/$CIRCLE_BRANCH/
          
      # Latest - Run Build command & Deploy to Staging site
      - type: shell
        name: Commit - Build & Deploy if version is latest
        command: |
          if [[ $LATEST_VERSION = $CIRCLE_BRANCH ]]
          then
          ls
          sed -i '$ d' _config.yml
          echo "docsVersion: latest" >> _config.yml
          bundle exec jekyll build
          cd _site
          aws s3 sync --delete . s3://sunbird-docs-qa/docs-staging/latest/
          fi
          
  version-prod:
    working_directory: /project/workspace/
    docker:
      - image: lakhanmandloi/docker-ubuntu-ruby-python-npm:2.0
    steps:
    
      # Checkout
      - checkout
          
      # Add SSH Key   
      - add_ssh_keys:
          fingerprints:
            - $GITHUB_SSH_FINGERPRINT
            
      # Configure Git 
      - type: shell
        name: Configure git
        command: |
          git config --global user.email $GITHUB_USER_EMAIL
          git config --global user.name $GITHUB_USER_NAME
      
      # Download code from staging
      - type: shell
        name: Download code from staging
        command: |
          cd ..
          rm -rf downloads
          mkdir downloads
          cd downloads
          aws s3 sync --delete s3://sunbird-docs-qa/docs-staging/$CIRCLE_BRANCH/ .
          ls -la
           
      # Deploy to Gitpages
      - type: shell
        name: Deploy code to gh-pages repo
        command: |
          cd ..
          rm -rf deploy
          mkdir deploy
          cd deploy
          git clone -b gh-pages $CIRCLE_REPOSITORY_URL cloned-repo
          rm -rf cloned-repo/$CIRCLE_BRANCH/
          mkdir cloned-repo/$CIRCLE_BRANCH/
          cd cloned-repo/
          rm latest
          ln -s $LATEST_VERSION'/' latest
          cd ..
          cp -R ../downloads/* cloned-repo/$CIRCLE_BRANCH/
          cd cloned-repo/
          git add -A
          git commit -m "Version deploy - $CIRCLE_BRANCH Version & Build No. $CIRCLE_BUILD_NUM"
          git push origin gh-pages
          
workflows:
  version: 2
  version-build-deploy:
    jobs:
      - version-pr:
          filters:
            branches:
              only:
                - /^pull.*/
              ignore:
                - master
                - gh-pages
                - toc
      - version-staging:
          filters:
            branches:
              ignore:
                - gh-pages
                - toc
                - /^pull.*/
      - version-hold:
          type: approval
          requires:
              - version-staging
          filters:
            branches:
              ignore:
                - gh-pages
                - toc
                - /^pull.*/
      - version-prod:
          requires:
              - version-hold
          filters:
            branches:
              ignore:
                - gh-pages
                - toc
                - /^pull.*/
 

