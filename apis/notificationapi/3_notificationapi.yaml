openapi: 3.0.1
info:
  title: Notification API(s)
  description: 'The Email resources provides the notification mechanism for all the
    users on Sunbird. The Resource notifies users officially about something on Sunbird. '
  termsOfService: https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE
  contact:
    email: info@sunbird.org
  version: "1.0"
servers:
- url: https://staging.open-sunbird.org/api
paths:
  '/user/v1/notification/email ':
    post:
      tags:
      - Notification APIs
      summary: ' Notifiying Users'
      description: |-
        This API is associated with notifying a user on the Sunbird Platform.if request will contain mode attribute with value sms ,then user will be notify via sms.During sms notification you can pass list of phone number or list of phone number and userid both.
           - The endpoint for **Notifying Users** is `/user/v1/notification/email`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: '{{host}}/user/v1/notification/email '
      parameters:
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          The body refers to the format of the request.
            - The body contains metadata about the notification to be sent.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/emailRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Notifying User" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateResponse'
        400:
          description: BAD REQUEST. The "Notifying User" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      x-codegen-request-body-name: Body
  /otp/v1/generate:
    post:
      tags:
      - Notification APIs
      summary: Generate OTP
      description: |-
        This API is associated with sending OTP to user on the Sunbird Platform.
           - The endpoint for **Generate OTP** is `otp/v1/generate`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: '{{host}}/otp/v1/generate'
      parameters:
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          The body refers to the format of the request.
            - The body contains metadata about the notification to be sent.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/generateOtpRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Notifying User" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateResponse'
        400:
          description: BAD REQUEST. The "Notifying User" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      x-codegen-request-body-name: Body
  /otp/v1/verify:
    post:
      tags:
      - Notification APIs
      summary: Verify OTP
      description: |-
        This API is associated with verifying OTP to user on the Sunbird Platform.
           - The endpoint for **Verifiy OTP** is `otp/v1/verify`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: '{{host}}/otp/v1/verify'
      parameters:
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: |-
          The body refers to the format of the request.
            - The body contains metadata about the notification to be sent.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verifyOtpRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Notifying User" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateResponse'
        400:
          description: BAD REQUEST. The "Notifying User" operation failed! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      x-codegen-request-body-name: Body
components:
  schemas:
    emailRequest:
      title: Request structure for sending email notification
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/Request'
      example:
        request:
          name: Amit
          subject: test email
          body: Hello Amit.
          downloadUrl: https://www.google.com/
          recipientEmails:
          - amit.kumar@tarento.com
          - amit1.kumar@tarento.com
          mode: sms
          recipientPhones:
          - valid phone number without country code
          recipientUserIds:
          - valid userId
          recipentSearchQuery:
            filters:
              channel: nameof channel
              rootOrgId: rootOrgIds
              organisations.roles:
              - valid roles
    Request:
      title: Request
      required:
      - body
      - downloadUrl
      - recipientEmails
      - recipientUserIds
      - subject
      type: object
      properties:
        name:
          type: string
          description: Recipient name to whom mail is sending
        subject:
          type: string
          description: Subject of mail
        body:
          type: string
          description: Contents of mail body
        mode:
          type: object
          description: supported value is sms, apart from sms all other values will
            be ignore.if value is sms then it will notify user via sms, and body will
            become sms text
        downloadUrl:
          type: string
          description: Download link of content
        recipientEmails:
          type: array
          description: List of recipient mail ids
          items:
            type: string
        recipientPhones:
          type: array
          description: List of valid phone numbers without country code
          items:
            type: string
        recipientUserIds:
          type: array
          description: List of recipient user ids. With help of user ids system fetches
            user email to send mail.
          items:
            type: string
        recipientSearchQuery:
          type: object
          properties:
            filters:
              type: object
              properties: {}
          description: 'Filter query to find user based on some criteria, Example:
            send all users with particular rootOrgId and having certain roles. among
            recipientEmails,recipientUserIds,recipientSearchQuery any one is mandatory.'
    generateOtpRequest:
      title: Request structure for sending OTP
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/genOtpRequest'
      example:
        request:
          userId: 372175df-7f44-48df-8aa5-4t6228996b06s
          key: amit@gmail.com
          type: email
    genOtpRequest:
      title: Request
      required:
      - key
      - type
      type: object
      properties:
        userId:
          type: string
          description: Recipient name to whom mail is sending
        key:
          type: string
          description: Subject of mail
        type:
          type: string
          description: Contents of mail body
    verifyOtpRequest:
      title: Request structure for verifying OTP
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/verOtpRequest'
      example:
        request:
          userId: 372175df-7f44-48df-8aa5-4t6228996b06s
          key: amit@gmail.com
          type: email
          otp: "79562"
    verOtpRequest:
      title: Request
      required:
      - key
      - otp
      - type
      type: object
      properties:
        userId:
          type: string
          description: Recipient name to whom mail is sending
        key:
          type: string
          description: Subject of mail
        type:
          type: string
          description: Contents of mail body
        otp:
          type: string
          description: OTP
    ContentCreateResponse:
      description: Create Content Response
      allOf:
      - $ref: '#/components/schemas/ResultWithNodeId'
      - $ref: '#/components/schemas/ResponseHeader'
    ResultWithNodeId:
      title: Result Body
      type: object
      properties:
        result:
          $ref: '#/components/schemas/SendNotificationMailResult'
    ResponseHeader:
      title: ResponseHeader
      type: object
      properties:
        id:
          type: string
          description: API Identifier
        ver:
          type: string
          description: API version information
        ts:
          type: string
          description: API execution timespan
        params:
          $ref: '#/components/schemas/ResponseParams'
        responseCode:
          type: object
          properties: {}
          description: 'API response code '
    SendNotificationMailResult:
      title: Send Notification Result
      type: object
      properties:
        response:
          type: string
          description: SUCCESS in case mail send successfully otherwise user id with
            reason of mailsending fail .
    ResponseParams:
      title: Response Parameter
      type: object
      properties:
        resmsgid:
          type: string
          description: Response Message Id
        msgid:
          type: string
          description: Message Id
        err:
          type: string
          description: Error Code
        status:
          type: string
          description: Response Status
        errmsg:
          type: string
          description: Error Message
    ContentCreateErrorResponse:
      title: Create Content Error Response
      allOf:
      - $ref: '#/components/schemas/EmptyResult'
      - $ref: '#/components/schemas/ResponseHeader'
    EmptyResult:
      title: Empty Result
      type: object
      properties:
        result:
          type: object
          properties: {}
          description: Empty Result
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
    userToken:
      type: apiKey
      name: x-authenticated-user-token
      in: header
