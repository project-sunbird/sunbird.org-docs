openapi: 3.0.1
info:
  title: Course Progress API(s)
  description: "- The Course Progress API resource is used to publish and update the\
    \ status of the course as consumed by a user. The operations include the basic\
    \ course status and the updated status.  \n- The URL for Course Progress API is\
    \ `/course/v1/user/content/state`."
  version: "1.0"
servers:
- url: https://staging.open-sunbird.org/api/course/v1/user/content/state/
paths:
  /read:
    post:
      tags:
      - Course Progress API(s)
      summary: Read Course State
      description: |-
        This API is used for reading the current progress of the course (content)consumed by a user. For example, the user can view and check the progress of a specific course or course(s)consumed.
           - The endpoint for **Read Course State** is `/read`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: StatePost
      parameters:
      - name: Accept
        in: header
        description: Represents the media types that are acceptable for the response
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource. Possible\
          \ media types are:- \n  - Application/json\n  - Multipart/form-data\n  -\
          \ Application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: ts
        in: header
        description: The time stamp at which the ** Read Course State** request was
          sent.
        required: true
        schema:
          type: string
      - name: X-msgid
        in: header
        description: This ID uniquely identifies a request incase the same API is
          executed multiple times
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: The registered user token/key to authenticate user and execute
          the API.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: '''Represents the body and formdata parameters of the course
          progress state API. Request example is'' "request":{ "userId":"id of the
          user","courseIds":["one courseId"],"contentIds":["list of content ids for
          particular course"],"batchId":"particulerBatchId" }'
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ApiRequest'
              - $ref: '#/components/schemas/GetContentStaterequest'
        required: true
      responses:
        200:
          description: SUCCESS. The "Read Course States" operation was successful!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentResponse'
        500:
          description: INTERNAL SERVER ERROR. We track these errors automatically
            and try to set it right at the earliest. Try refreshing the page. If the
            problem persists contact us at info@sunbird.org.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentErrorResponse'
      x-codegen-request-body-name: Body
  /update:
    patch:
      tags:
      - Course Progress API(s)
      summary: Update Course State
      description: "This API is used to update the Course(content) state as consumed\
        \ by a user. For example, when the user resumes a course or courses after\
        \ the point at which it was stopped, the status of the course is updated.\
        \ \n   - The endpoint for **Update Course State** is `/update`\n   - The fields\
        \ marked with an asterisk (*) are mandatory. They cannot be null or empty.\n\
        \   "
      operationId: UpdatePatch
      parameters:
      - name: Accept
        in: header
        description: Represents the media types which are acceptable for the response
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource. Possible\
          \ media types can be:- \n  - Application/json\n  - Multipart/form-data\n\
          \  - Application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: ts
        in: header
        description: The time stamp at which the **Update Course State** request was
          sent.
        required: true
        schema:
          type: string
      - name: X-msgid
        in: header
        description: This ID uniquely identifies a request incase the same API is
          executed multiple times
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: The registered user token/key to authenticate user and execute
          the API.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: Represents the body and formdata parameters of the course progress
          state API
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ApiRequest'
              - $ref: '#/components/schemas/UpdateContentStaterequest'
        required: true
      responses:
        200:
          description: SUCCESS. The "Update Course State" operation was successful!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateContentResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentErrorResponse'
      x-codegen-request-body-name: Body
components:
  schemas:
    GetContentStaterequest:
      title: get content stateRequest
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/Request'
    Request:
      title: Request
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: This identifier uniquely identifies a user
          example: Sam123
        courseIds:
          type: array
          description: This represents the list of course IDs.
          example:
          - some course ID
          items:
            type: string
        contentIds:
          type: array
          description: This represents the list of content IDs for that course and
            batch. Associate only one courseId and batchId to the list of all content
            IDs.
          items:
            type: string
        batchId:
          type: string
          description: The idenfier of the batch to which the course belongs.
    UpdateContentStaterequest:
      title: This represents the update content state request body
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/UpdateContentRequestBody'
    UpdateContentRequestBody:
      title: UpdateContentRequestBody
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: This ID uniquely identifies a user
          example: Sam123
        contents:
          type: array
          description: This represents the array of the contents which comprises of
            various parameters related to the content
          items:
            $ref: '#/components/schemas/Content'
        assessments:
          type: array
          description: This represents the array of the assessments which comprises
            of various parameters related to assessments
          items:
            $ref: '#/components/schemas/Assessment'
    Content:
      title: Content
      required:
      - batchId
      - contentId
      - courseId
      - status
      type: object
      properties:
        contentId:
          type: string
          description: This ID uniquely identifies the content
          example: contentId
        batchId:
          type: string
          description: This ID uniquely identifies a batch
          example: "115"
        status:
          type: integer
          description: 'This represents the user content consumption status. For reference:
            Example 0 - not started, 1- in progress, 2- completed'
          format: int32
          example: 2
        lastAccessTime:
          type: string
          description: Represents when was the the course content last accessed
          example: 2017-05-15 10:58:07:509+0530
        courseId:
          type: string
          description: This ID Uniquely identifies the course
          example: courseId
        result:
          type: string
          description: This represents the outcome on completing the course assessment
          example: pass
        score:
          type: string
          description: This represents the Final outcome after taking a course assessment
          example: "10"
        grade:
          type: string
          description: This represents the grade obtained by the user on completing
            the course assessment
          example: B
    Assessment:
      title: Assessment
      type: object
      properties:
        batchId:
          type: string
          description: This ID uniquely identifies a batch
          example: 1.2841690263683072E18
        courseId:
          type: string
          description: This ID uniquely identifies the course
          example: do_2128410273679114241112
        userId:
          type: string
          description: This ID uniquely identifies a user
          example: d0d8a341-9637-484c-b871-0c27015af238
        attemptId:
          type: string
          description: This ID uniquely identifies the attempt
          example: 90e1a0d12542806389a1a52aaf1fc622
        contentId:
          type: string
          description: This ID uniquely identifies the content
          example: do_2128373396098744321673
        events:
          type: array
          description: This will have the assess events of the telemetry
          example: []
          items:
            type: object
    GetContentResponse:
      description: Get Content Response
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResultWithEmptyBody'
    ResultWithEmptyBody:
      title: This is the result Containing empty body
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ResultStatus'
    ResultStatus:
      type: object
      properties:
        contentList:
          type: array
          items:
            type: object
            properties:
              contentId:
                type: string
                description: The ID uniquely represente the content
              lastAccessTime:
                type: string
                description: Represents when was the the course content last accessed
              batchId:
                type: string
                description: This represents the unique ID  of the batch to which
                  content belongs
              result:
                type: string
                description: This represents the outcome of course assessment
              viewCount:
                type: string
                description: This represents the total number of  times the content
                  is viewed by the user
              score:
                type: string
                description: The score received by the user on completing the course
                  assessment
              grade:
                type: string
                description: The grade obtained by the user on completing the course
                  assessment
              progress:
                type: string
                description: The users progress while doing the course
              contentVersion:
                type: string
                description: The version of the course content
              courseId:
                type: string
                description: The Course ID to which the content belongs
              lastCompletedTime:
                type: string
                description: The last time the user completed the course
              status:
                type: integer
                description: User content consumption status. Example 0 - not started,
                  1- in progress, 2- completed
              completedCount:
                type: string
                description: The represents the count of how many times the user has
                  taken a course
              id:
                type: string
                description: This is the unique ID to recognize the content that belongs
                  to particular user and particular course
    UpdateContentResponse:
      description: Update Content Response
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResultWithEmptyBody1'
    ResultWithEmptyBody1:
      title: Result Containing empty body
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UpdateContentResultStatus'
    UpdateContentResultStatus:
      type: object
      properties:
        contentId:
          type: string
          description: Response will contain the content ids along with status like
            SUCCESS or FAILURE in case content updation success or fail respectively
            .
    ContentErrorResponse:
      title: This is the response body of when Content creation error is encountered
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/EmptyResult'
    EmptyResult:
      title: Empty Result
      type: object
      properties:
        result:
          type: object
          properties: {}
    ApiRequest:
      type: object
      properties:
        id:
          type: string
          description: Represents an API uniquely
        ver:
          type: string
          description: Represents the version of the API which was used
        ets:
          type: integer
          description: Represents the EPOCH (UTC) timestamp in milliseconds since
            EPOCH
          format: int64
        params:
          type: object
          properties:
            msgid:
              type: string
              description: Represents the unique ID of the message being sent
            did:
              type: string
              description: Represents the device UUID from which API is called
    ApiResponse:
      required:
      - ets
      - id
      - params
      - ver
      type: object
      properties:
        id:
          type: string
          description: Represents the ID of the request which was made
        ver:
          type: string
          description: Represents the version of the API which was used
        ets:
          type: integer
          description: Represents the EPOCH (UTC) timestamp in milliseconds since
            EPOCH
          format: int64
        params:
          required:
          - msgid
          - resmsgid
          - status
          type: object
          properties:
            msgid:
              type: string
              description: Represents the ID of the message sent
            resmsgid:
              type: string
              description: Represents the ID of the response message
            status:
              type: string
              enum:
              - success
              - error
        responseCode:
          type: string
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
    userToken:
      type: apiKey
      name: x-authenticated-user-token
      in: header
