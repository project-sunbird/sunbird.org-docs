openapi: 3.0.1
info:
  title: Bulk Upload Service API(s)
  description: |-
    - The  Bulk Upload API resources perform operations related to uploads on the Sunbird Platform. The Bulk Upload API(s) operations include uploads and updates .
    - The URL for Bulk Upload Service API(s) is `/api`
  termsOfService: https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE
  contact:
    email: info@sunbird.org
  version: "1.0"
servers:
- url: https://staging.open-sunbird.org/api
paths:
  /user/v1/upload:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Users in Bulk
      description: |-
        This API is associated with upload users in bulk on the Sunbird Platform.
           - The endpoint for **Upload Users in Bulk** is `/user/v1/upload`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: bulk upload user req1
      parameters:
      - name: Authorization
        in: header
        description: 'Specify authorization key (format: Bearer api-key) received
          from administrator when performing given API request.'
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: Access token of registered user performing given API request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - user
              properties:
                user:
                  type: string
                  description: |-
                    This is a .csv file.
                      - Each line of the file is a data record. Each record consists of one or more user fields, separated by commas. Each successfully created user is associated with root org of uploader (org admin).

                    The CSV file format supported is mentioned below:
                      - NAME: Name of user(firstName)
                      - MOBILE PHONE: Phone number. Either phone or email is mandatory.
                      - EMAIL: Email. Either phone or email is mandatory.
                      - SCHOOL ID: Organisation ID to which user must be associated(orgId).
                      - USER_TYPE: Type of user. Supported user types are 'teacher' or 'other'.
                      - ROLES: List of valid roles for assignment to user on association to an organisation.roles must be in Capital letters
                      - USER ID: User ID. Required only in case of user update.
                      - External ID: External ID of user. Either, school ID or external ID is mandatory for user association to organisation.
                  format: binary
        required: true
      responses:
        200:
          description: OK ! Successful operation."bulk upload user" operation was
            successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
        400:
          description: BAD REQUEST. The "bulk upload user" operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
  /user/v2/bulk/upload:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Shadow Users in Bulk
      description: "This API allows you to upload users of an organization from a\
        \ shadow (temporary) database to a permanent database on the Sunbird platform.\
        \ Only the org administrator has permissions to upload users. A user becomes\
        \ eligible for migration from the temporary database to the permanent database,\
        \ if the user identifier (email,phone) of the temporary database matches the\
        \ user identifier of the permananent database. \n - The endpoint for **Upload\
        \ Users in Bulk** is `/user/v2/bulk/upload`\n - The fields marked with an\
        \ asterisk (*) are mandatory. They cannot be null or empty."
      operationId: bulk upload shadow user
      parameters:
      - name: Authorization
        in: header
        description: 'Specify authorization key (format: Bearer api-key) received
          from administrator when performing given API request.'
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: Access token of registered user performing given API request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - user
              properties:
                user:
                  type: string
                  description: "This is a .csv file.\n  - Each line of the file is\
                    \ a data record. Each record consists of one or more user fields,\
                    \ separated by commas. Each successfully created user is associated\
                    \ with the root organization of the org administrator.\nThe CSV\
                    \ file format supported is as follows:\n  - NAME: Name of user(firstName+lastName)\n\
                    \  - PHONE: Phone number. Either phone or email is mandatory.\n\
                    \  - EMAIL: Email. Either phone or email is mandatory.\n  - Ext\
                    \ Org id: The organisation ID to which the user must be associated(extOrgId).\
                    \ This is an optional field. If a value is is provided, the user\
                    \ is associated with that organisation, i.e. the sub-organization\
                    \ of the root organization. If not, the user is only associated\
                    \ to the root organization od the org administrator uploading\
                    \ the users.\n  - Input Status: This is a mandatory attribute.\
                    \ It indicates if the user is active or inactive in the organization.\n\
                    \  - Ext User ID: This is a mandatory field. It is the ID provided\
                    \ by the root or sub-organization to users to uniquely identify\
                    \ them. "
                  format: binary
        required: true
      responses:
        200:
          description: OK ! Successful operation. ** Bulk upload user** operation
            was successfully executed, with processId that can be used for further
            communication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
        400:
          description: BAD REQUEST. The **Bulk upload user** operation failed. You
            may have missed input for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR! Looks like something went wrong. We
            track these errors automatically. Try refreshing the page. If the problem
            persists,contact us at info@sunbird.org.
          content: {}
  /course/v1/batch/bulk/enrollment:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Batch Enrollments in Bulk
      description: |-
        This API is used for enrolling batches in bulk
           - The endpoint for **Upload Batch Enrollments in Bulk** is `/course/v1/batch/bulk/enrollment`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: bulk batch enrollment req
      parameters:
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: x-authenticated-user-token
        in: header
        description: It is a unique token/key to authenticate the user each time an
          API is called. For corresponding sessions this token is used, not your actual
          username/password
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - batch
              properties:
                batch:
                  type: string
                  description: |-
                    This is a .csv file.
                      - Each line of the file is a data record. Each record consists of one or more fields, separated by commas.
                     The format of this file is as :
                      - batchId,
                      - userIds
                  format: binary
        required: true
      responses:
        200:
          description: OK ! Successful operation."bulk batch enrollment " operation
            was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
        400:
          description: BAD REQUEST. The "bulk batch enrollment" operation failed !
            The possible reason for failure is that you may have missed providing
            input for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
  /course/v1/batch/bulk/unenrollment:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Batch Unenrollments in Bulk
      description: |-
        This API is used for enrolling batches in bulk
           - The endpoint for **Upload Batch Unenrollments in Bulk** is `course/v1/batch/bulk/unenrollment`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: bulk batch unenrollment req
      parameters:
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: x-authenticated-user-token
        in: header
        description: It is a unique token/key to authenticate the user each time an
          API is called. For corresponding sessions this token is used, not your actual
          username/password
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - batch
              properties:
                batch:
                  type: string
                  description: |-
                    This is a .csv file.
                      - Each line of the file is a data record. Each record consists of one or more fields, separated by commas.
                     The format of this file is as :
                      - batchId,
                      - userIds
                  format: binary
        required: true
      responses:
        200:
          description: OK ! Successful operation."bulk batch enrollment " operation
            was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
        400:
          description: BAD REQUEST. The "bulk batch enrollment" operation failed !
            The possible reason for failure is that you may have missed providing
            input for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
  /data/v1/upload/status/{processId}:
    get:
      tags:
      - Bulk Operation APIs
      summary: Check Upload Status
      description: |-
        This API is used to check the upload status
           - The endpoint for **Check Upload Status** is `/data/v1/upload/status/{processId}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: getStatus
      parameters:
      - name: processId
        in: path
        description: Please append a valid process id to the Request URL
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        description: '**Accept** relates to content-Type such as **"MIME"**, Its used
          in response body for executing different multi purpose operations.Therefore,
          its important that the server is correctly set up, so that the MIME types
          transmitted are recognised and correct to determine what action to do when
          a resource is fetched.'
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: |-
          The Content Type entity is the media type of the resource.Possible media types can be:-
            - Application/json
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require bearerorization. Raise a
          request to the administrator for the use of the API. You will receive the
          authorization key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: x-authenticated-user-token
        in: header
        description: It is a unique token/key to authenticate the user each time an
          API is called. For corresponding sessions this token is used, not your actual
          username/password
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK ! Successful operation." check upload status" operation
            was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadStatusResponse'
        400:
          description: BAD REQUEST. The "check upload status" operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
  /data/v1/upload/statusDownloadLink/{processId}:
    get:
      tags:
      - Bulk Operation APIs
      summary: Get Upload Status Download Link
      description: |-
        This API is used to get the upload status for a given request. For a completed upload request, it will provide a link to a file which has the upload status.
           - The endpoint for **Get Upload Status Download Link** is `/data/v1/upload/statusDownloadLink/{processId}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: getUploadStatusDownloadLink
      parameters:
      - name: processId
        in: path
        description: Valid bulk upload process ID
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: Type of the request data. Set as application/json.
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 'Specify authorization key (format: Bearer api-key) received
          from administrator when performing given API request.'
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: Access token of registered user performing given API request.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK. Successful operation. The requested operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatusDownloadLinkSuccessResponse'
        400:
          description: 'CLIENT_ERROR. The requested operation failed due to bad request
            from client. Possible reasons for failure: Invalid process ID.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: 'INTERNAL SERVER ERROR. The requested operation failed due
            to a server error. '
          content: {}
  /org/v1/upload:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Organisations in Bulk
      description: |-
        This API is associated with bulk uploading organisations on the Sunbird Platform.
           - The endpoint for **Upload Organisations in Bulk** is `/org/v1/upload`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: bulk org upload req
      parameters:
      - name: Authorization
        in: header
        description: 'Specify authorization key (format: Bearer api-key) received
          from administrator when performing given API request.'
        required: true
        schema:
          type: string
      - name: X-Authenticated-User-Token
        in: header
        description: Access token of registered user performing given API request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - org
              properties:
                org:
                  type: string
                  description: |-
                    This is a .csv file.
                      - Each line of the file is a data record. Each record consists of one or more organisation fields, separated by commas. Each successfully created organisation is associated with root org of uploader (org admin).

                    The CSV file format supported is mentioned below:
                      - SCHOOL NAME: Organisation name(orgName)
                      - BLOCK CODE: Location code (locationCode)
                      - SCHOOL ID: Organisation ID. Required only in case of organisation update(organisationId).
                      - EXTERNAL ID: External ID of organisation(externalId)
                      - STATUS: Status. Supported values are 'active' and 'inactive'(status) mandatory param.
                      - DESCRIPTION: Organisation description(description)
                  format: binary
        required: true
      responses:
        200:
          description: OK ! Successful operation."bulk org upload " operation was
            successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
        400:
          description: BAD REQUEST. The "bulk org upload " operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUploadErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
  /data/v1/bulk/location/upload:
    post:
      tags:
      - Bulk Operation APIs
      summary: Upload Location Data in Bulk
      description: |-
        This API is used to create a background job for bulk upload of location data into the platform. The upload data is provided in CSV format.
          - The endpoint for **Upload Location Data in Bulk** is `/data/v1/bulk/location/upload`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: Location Data Bulk Upload Request
      parameters:
      - name: Authorization
        in: header
        description: To make use of any Location API, you require authorization. Raise
          a request to the administrator for the use of the API. You will receive
          the authorization key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: x-authenticated-user-token
        in: header
        description: It is a unique token/key to authenticate the user each time an
          API is called. For corresponding sessions this token is used, not your actual
          username/password
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - csvFile
              - type
              properties:
                csvFile:
                  type: string
                  description: "CSV file which contains location data in following\
                    \ format:\n  - code: 'National level code for state'\n  - name:\
                    \ 'Name of entity e.g a state'\n  - parentCode: 'code of the parent'\n\
                    \  - parentId : 'ID of the parent (In a hierarchy),    \n\n  \
                    \  - if there exists a parent node either parentCode and parentID\
                    \ is required (in case of a child node) \n    - if it is highest\
                    \ (top) node in the hierarchy,then no parent details are required"
                  format: binary
                type:
                  type: string
                  description: 'Represents the information about the possible values
                    of location types state, district, block, cluster '
        required: true
      responses:
        200:
          description: OK. Successful operation. The data upload operation is accepted
            for further processing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDataBulkUploadCreateResponse'
        400:
          description: CLIENT_ERROR. The upload operation failed due to bad request
            from client. Possible reasons for failure, Mandatory parameter "csvFile"
            is missing. Maximum upload file size x MB is exceeded. CSV file content
            is improper.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonErrorResponse'
        500:
          description: INTERNAL SERVER ERROR. The upload operation failed due to a
            server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonErrorResponse'
components:
  schemas:
    BulkUploadStatusResponse:
      type: object
      properties:
        objectType:
          type: string
          description: Type of object in bulk upload request. Supported types are
            user, organisation, location, batch enrollment
        processId:
          type: string
          description: ID that uniquely identifies the bulk upload request.
        status:
          type: string
          description: Specifies current status of bulk upload request. Supported
            values are {"NOT STARTED", "IN PROGRESS" and "COMPLETED"}.
        message:
          type: string
          description: Descriptive message for current status of bulk upload request.
        successResult:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the entity
              operation:
                type: string
                description: Indicates whether a create or update operation is performed
            description: Represents each row (e.g. user) in the bulk upload request
              CSV file that is successfully created or updated in Sunbird.
        failureResult:
          type: array
          items:
            type: object
            properties:
              err_msg:
                type: string
                description: Represents the error message that occurred while processing
                  given row.
            description: Represents each row (e.g. user) in the bulk upload request
              CSV file that failed during creation or updation in Sunbird.
      description: Bulk upload status response
    BulkUploadResponse:
      description: Bulk Upload Response
      allOf:
      - $ref: '#/components/schemas/ResultWithProcessId'
      - $ref: '#/components/schemas/ResponseHeader'
    ResultWithProcessId:
      title: Result Containing upload process Id
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ProcessId'
    ResponseHeader:
      title: ResponseHeader
      type: object
      properties:
        id:
          type: string
          description: Represents the API uniquely
        ver:
          type: string
          description: Represents the API version information
        ts:
          type: string
          description: Represents the API execution timespan
        params:
          $ref: '#/components/schemas/ResponseParams'
        responseCode:
          type: object
          properties: {}
          description: 'API response code '
    ProcessId:
      title: processId
      type: object
      properties:
        processId:
          type: string
          description: Process id of bulk upload request
    ResponseParams:
      title: Response Parameter
      type: object
      properties:
        resmsgid:
          type: string
          description: Represesnts the response identifier of the message
        msgid:
          type: string
          description: Represents a message uniquely
        err:
          type: string
          description: Represents the Error Code
        status:
          type: string
          description: Represents the response Status
        errmsg:
          type: string
          description: Represents the Error Message
    BulkUploadErrorResponse:
      title: Bulk Upload Error Response
      allOf:
      - $ref: '#/components/schemas/EmptyResult'
      - $ref: '#/components/schemas/ResponseHeader'
    GetStatusDownloadLinkSuccessResponse:
      title: Get Status Download Link Success Response
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - type: object
        properties:
          result:
            type: object
            properties:
              processId:
                type: string
                description: ID that uniquely identifies the bulk upload request.
              objectType:
                type: string
                description: Type of object in bulk upload request. Supported types
                  are user, organisation, location, batch enrollment
              status:
                type: string
                description: Specifies current status of bulk upload request. Supported
                  values are {"NOT STARTED", "IN PROGRESS" and "COMPLETED"}.
              message:
                type: string
                description: Descriptive message for current status of bulk upload
                  request.
              signedUrl:
                type: string
                description: ID of the newly created organisation
    EmptyResult:
      title: Empty Result
      type: object
      properties:
        result:
          type: object
          properties: {}
          description: Empty Result
    LocationDataBulkUploadCreateResponse:
      title: Response body for successful location  bulk data upload
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - type: object
        properties:
          result:
            type: object
            properties:
              processId:
                type: string
                description: ID which can be used to query status of a background
                  process created by location data bulk upload API
              response:
                type: string
                description: Response message for successful request
    CommonErrorResponse:
      title: Error response body for location bulk data upload API request
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - type: object
        properties:
          result:
            type: object
            properties: {}
            description: Error message for failed location data bulk upload API request
    ApiResponse:
      required:
      - ets
      - id
      - params
      - ver
      type: object
      properties:
        id:
          type: string
          description: Represents the ID of the request which was made
        ver:
          type: string
          description: Represents the version of the API which was used
        ets:
          type: integer
          description: Represents the EPOCH (UTC) timestamp in milliseconds since
            EPOCH
          format: int64
        params:
          required:
          - msgid
          - resmsgid
          - status
          type: object
          properties:
            msgid:
              type: string
              description: Represents the ID of the message sent
            resmsgid:
              type: string
              description: Represents the ID of the response message
            status:
              type: string
              enum:
              - success
              - error
        responseCode:
          type: string
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
    userToken:
      type: apiKey
      name: x-authenticated-user-token
      in: header
