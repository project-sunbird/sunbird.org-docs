openapi: 3.0.0
info:
  title: Program Api's
  termsOfService: "https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE"
  description: Program construct enable to contribution program on sunbird for content creation and content contribution by individual and organisation.

  contact:
    email: info@sunbird.org
  version: "1.0"
servers:
  - url: https://dock.sunbirded.org/api
externalDocs:
  description: "Testcases"
  url: "https://www.getpostman.com/collections/d70b1f821d5abd92fec1"
paths:
  /program/v1/list/download:
    post:
      tags:
        - Program CRUD
      summary: Program List Download
      description: |-
        This API downloads the generated Details of the Program.
            - The **_list/download_** endpoint downloads the generated details of the program.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/list/download
      operationId: ListDownload200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "fetch program generated/Program List Download Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programListDownload200SuccessRequest"
            example:
              request:
                filters:
                  program_id:
                    - afdfa9a0-1dbc-11eb-81b1-659ec274e395
        required: true
      responses:
        200:
          description: "ListDownload200SuccessResponse"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programListDownload200SuccessResponse"
              example:
                id: api.list.download
                ver: 1.0
                ts: 2021-01-07T06:52:58.03Z
                params:
                  resmsgid: f9ce14e0-50b4-11eb-a115-db22788c28aa
                  msgid: f95402e0-50b4-11eb-a115-db22788c28aa
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  tableData:
                    - program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
                      values:
                        - Digital Textbook Name: Learning_Outcome_Book
                          Medium:
                            - English
                          Class: Class 7
                          Subject:
                            - English
                          Number of Chapters: 5
                          Nominations Received: 2
                          Samples Received: 0
                          Nominations Accepted: 2
                          Contributions Received: 6
                          Contributions Accepted: 5
                          Contributions Rejected: 0
                          Contributions Pending: 1
                          Contributions corrections pending: 0
        400:
          description: ListDownload400BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programListDownload400BadRequest"
              example:
                id: api.list.download
                ver: 1.0
                ts: 2021-01-07T08:02:37.384Z
                params:
                  resmsgid: b4e4e482-50be-11eb-a115-db22788c28aa
                  msgid:
                  status: failed
                  err: ERR_GENERATING_PROGRAM_DATA
                  errmsg: Required fields like program_id<Array>, is missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/configuration/search:
    post:
      tags:
        - Configuration
      summary: Configuration Search
      description: |-
        This API searches the Program Configuration Based on Key provided to it.
            - The **_configuration/search_** endpoint fetch the program configuration for the key provided.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/configuration/search
      operationId: ConfigurationSearch200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Configuration Search Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programConfigurationSearch200SuccessRequest"
            example:
              request:
                key: overrideMetaData
                status: active
        required: true
      responses:
        200:
          description: "Successful Program Configuration Search Response"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programConfigurationSearch400BadRequest"
              example:
                id: api.configuration.search
                ver: 1.0
                ts: 2020-12-02T11:03:07.275Z
                params:
                  resmsgid: f5241db0-348d-11eb-9c32-15914148e3ce
                  msgid: f80986af-e190-f6a4-04c4-c1b984e056e4
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  configuration:
                    id: 9
                    key: overrideMetaData
                    value: '[{"code":"name","dataType":"text","editable":true},{"code":"learningOutcome","dataType":"list","editable":true},{"code":"attributions","dataType":"list","editable":false},{"code":"copyright","dataType":"text","editable":false},{"code":"creator","dataType":"text","editable":false},{"code":"license","dataType":"list","editable":false},{"code":"contentPolicyCheck","dataType":"boolean","editable":false}]'
                    status: active
                    createdby:
                    updatedby:
                    createdon: 2020-09-03T11:24:42.13Z
                    updatedon: 2020-09-03T11:24:42.13Z
        401:
          description: "Unauthorized, Failure Program Configuration Search Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.error
                ver: 1.0
                ts: 2020-12-03 07:50:55:637+0000
                params:
                  resmsgid: 46298c50-353c-11eb-ada5-dde7a2458a3f
                  msgid:
                  status: failed
                  err: INVALID_TOKEN
                  errmsg: INVALID_TOKEN
                responseCode: UNAUTHORIZED_ACCESS
                result: {}
      deprecated: false
  /program/v1/nomination/update:
    post:
      tags:
        - Nomination
      summary: Nomination Update
      description: |-
        This API updates the Nomination for the respective program Id .
            - The **_nomination/update_** endpoint successfully updates the nomination for a particular program.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/nomination/update
      operationId: NominationUpdate200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Nomination Update Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programNominationUpdate200SuccessRequest"
            example:
              request:
                program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
                status: Initiated
                content_types:
                  - Teacher Resource
                user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
                updatedby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
        required: true
      responses:
        200:
          description: "Successful Program Nomination Update Request Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programNominationUpdate200Success"
              example:
                id: api.nomination.update
                ts: 2021-01-08T12:03:50.823Z
                params:
                  resmsgid: 92262b71-51a9-11eb-9ecd-69fe79984d78
                  msgid: 92262b70-51a9-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
                  user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
        400:
          description: "Bad Request, Failure Program Nomination Update Request Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programnominationupdate400BadRequest"
        401:
          description: "Unauthorized, Failure Program Nomination Update Request response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.error
                ver: 1.0
                ts: 2020-12-03 07:55:28:459+0000
                params:
                  resmsgid: e8c6e1b0-353c-11eb-ada5-dde7a2458a3f
                  msgid:
                  status: failed
                  err: INVALID_TOKEN
                  errmsg: INVALID_TOKEN
                responseCode: UNAUTHORIZED_ACCESS
                result: {}
        404:
          description: "Not Found, Failure Program Nomination Update Request Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program404NotFound"
              example:
                request_path: /program/nomination/update
                message: API not found with these values
                request_host:
                  - kong
      deprecated: false
  /program/v1/nomination/list/download:
    post:
      tags:
        - Nomination
      summary:  Nomination List Download
      description: |-
        This API downloads the nomination list for the provided program Id/User Id .
            - The **_list/download_** will successfully download the nomination list for the Program Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/nomination/list/download
      operationId: NominationListDownload200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Nomination List Download Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programNominationListDownload200SuccessRequest"
            example:
              request:
                filters:
                  program_name: allTypeContent
                  program_id: d16524d0-348a-11eb-9c32-15914148e3ce
                  status:
                    - Pending
                    - Approved
                    - Rejected
        required: true
      responses:
        200:
          description: "Successful Downloading nomination List Data Request"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programNominationListDownload200Success"
              example:
                id: api.list.download
                ver: 1.0
                ts: 2021-01-08T12:14:36.345Z
                params:
                  resmsgid: 12e90290-51ab-11eb-9ecd-69fe79984d78
                  msgid: 12e8b470-51ab-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  stats:
                    - programName: allTypeContent
                      name: Vidya2
                      type: Organisation
                      textbooks: 1
                      sample: 0
                      createdon: December 2, 2020
                      status: Approved
                    - programName: allTypeContent
                      name: "anusha "
                      type: Individual
                      textbooks: 1
                      sample: 0
                      createdon: December 2, 2020
                      status: Approved
        400:
          description: "Bad Request, Program nomination List Download Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.list.download
                ver: 1.0
                ts: 2020-12-02T18:12:26.673Z
                params:
                  resmsgid: eef05210-34c9-11eb-9c32-15914148e3ce
                  msgid:
                  status: failed
                  err: ERR_DOWNLOADING_NOMINATION_DATA
                  errmsg: Required fields like program_id, program_name, status while getting nomination data are missing
                responseCode: CLIENT_ERROR
                result: {}
        404:
          description: "Not Found, Program Nomination List Download request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program404NotFound"
              example:
                request_path: /program/nomination/list/download
                message: API not found with these values
                request_host:
                  - kong
      deprecated: false
  /program/v1/nomination/list:
    post:
      tags:
        - Nomination
      summary: Nomination List
      description: |-
        This API provides the Nomination List for the respective program Id .
            - The **_nomination/list_** endpoint successfully provides the nomination list for a particular program/User Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/nomination/list
      operationId: NominationList200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Nomination Read/List Request body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programNominationList200SuccessRequest"
            example:
              request:
                filters: {}
        required: true
      responses:
        200:
          description: "Successful, Fetch Program Nomination List/Read Request"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programNominationList200Success"
              example:
                id: api.nomination.list
                ts: 2021-01-11T04:43:33.952Z
                params:
                  resmsgid: 8fb4cc01-53c7-11eb-9ecd-69fe79984d78
                  msgid: 8fb4cc00-53c7-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  - id: 14258
                    program_id: d4688e90-50ca-11eb-a115-db22788c28aa
                    user_id: 5a587cc1-e018-4859-a0a8-e842650b9d64
                    organisation_id: e7328d77-42a7-44c8-84f4-8cfea235f07d
                    status: Approved
                    content_types:
                      - Course Assessment
                      - eTextbook
                      - Explanation Content
                      - Learning Resource
                      - Practice Question Set
                      - Teacher Resource
                    collection_ids:
                      - do_11318921666818048011613
                    feedback:
                    rolemapping:
                    createdby:
                    updatedby:
                    createdon: 2021-01-07T09:30:00.506Z
                    updatedon:
                    userData:
                      osUpdatedAt: 2020-10-15T18:45:31.316Z
                      lastName: ""
                      firstName: N11
                      gradeLevel: []
                      osCreatedAt: 2020-10-15T18:45:31.316Z
                      enrolledDate: 2020-08-24T11:24:10.893Z
                      "@type": User
                      subject: []
                      channel: 01309282781705830427
                      osid: 179b8dcd-ad56-42fd-83d1-9459bb8e4489
                      medium: []
                      userId: 5a587cc1-e018-4859-a0a8-e842650b9d64
                    orgData:
                      osUpdatedAt: 2020-08-24T11:23:53.873Z
                      code: NIT
                      osCreatedAt: 2020-08-24T11:23:53.873Z
                      createdBy: 9e41deb1-daf3-4e0d-b45d-cfcad7291af9
                      "@type": Org
                      name: NIT
                      description: NIT
                      osid: e7328d77-42a7-44c8-84f4-8cfea235f07d
                      type:
                        - contribute
                        - sourcing
                      orgId: 01309282781705830427
        401:
          description: "Unauthorized,Nomination List/Read Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.error
                ver: 1.0
                ts: 2020-12-03 07:52:57:567+0000
                params:
                  resmsgid: 8ed696f0-353c-11eb-ada5-dde7a2458a3f
                  msgid:
                  status: failed
                  err: INVALID_TOKEN
                  errmsg: INVALID_TOKEN
                responseCode: UNAUTHORIZED_ACCESS
                result: {}
      deprecated: false
  /program/v1/preference/create:
    post:
      tags:
        - Preference
      summary: Preference Create
      description: |-
        This API adds the user preferences based on program Id/user Id .
            - The **_preference/create_** endpoint successfully add the preferences for a particular program/User Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/preference/create
      operationId: Preference-create200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Preference Create Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programPreference-create200SuccessRequest"
            example:
              request:
                user_id: 48dc0e70-2775-474b-9b78-def27d047836
                program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
                preference:
                  medium:
                    - English
                  subject:
                    - ""
                  gradeLevel:
                    - Class 7
                type: sourcing
        required: true
      responses:
        200:
          description: "Preference-create200Success"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programPreference-create200Success"
              example:
                id: api.preference.create
                ver: 1.0
                ts: 2021-01-11T06:37:52.627Z
                params:
                  resmsgid: 87cb8c30-53d7-11eb-9ecd-69fe79984d78
                  msgid: 87cb6520-53d7-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  user_id: 48dc0e70-2775-474b-9b78-def27d047836
                  program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
                  type: sourcing
                  sourcing_preference:
                    medium:
                      - English
                    subject:
                      - ""
                    gradeLevel:
                      - Class 7
                  contributor_preference: {}
        400:
          description: Preference400BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programPreference400BadRequest"
              example:
                id: api.preference.create
                ver: 1.0
                ts: 2021-01-11T06:41:19.145Z
                params:
                  resmsgid: 02e3b190-53d8-11eb-a43e-7fcb93a469e2
                  msgid:
                  status: failed
                  err: ERR_CREATE_USER_PREFERENCE
                  errmsg: Required fields like user_id, program_id for adding user preferences are missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/preference/read:
    post:
      tags:
        - Preference
      summary: Preference Read
      description: |-
        This API provides the user preferences based on user Id.
            - The **_preference/read_** endpoint successfully fetch the user preferences for a particular User Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/preference/read
      operationId: Preference-read200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Preference Read Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programPreference-read200SuccessRequest"
            example:
              request:
                user_id: 48dc0e70-2775-474b-9b78-def27d047836
                program_id: ef3ecc80-3553-11eb-84ed-692ec8c8dbe9
        required: true
      responses:
        200:
          description: "Preference-read200Success"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programPreference-read200Success"
              example:
                id: api.preference.read
                ver: 1.0
                ts: 2021-01-11T06:46:03.524Z
                params:
                  resmsgid: ac647c40-53d8-11eb-9ecd-69fe79984d78
                  msgid: ac642e20-53d8-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  contributor_preference: {}
                  sourcing_preference: {}
                  synced: true
                  timestamp: 2020-12-03T10:42:58.288Z
        400:
          description: Preference read 400 BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programPreference400BadRequest"
              example:
                id: api.preference.read
                ver: 1.0
                ts: 2021-01-11T06:46:24.378Z
                params:
                  resmsgid: b8d28da0-53d8-11eb-a43e-7fcb93a469e2
                  msgid:
                  status: failed
                  err: ERR_GET_USER_PREFERENCE
                  errmsg: Required fields like user_id to get preference are missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/preference/update:
    post:
      tags:
        - Preference
      summary: Preference Update
      description: |-
        This API updates the user preferences based on user Id.
            - The **_preference/update_** endpoint successfully updates the user preferences for a particular User Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/preference/update
      operationId: Preference-update200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Preference Update Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programPreference-update200SuccessRequest"
            example:
              request:
                user_id: 48dc0e70-2775-474b-9b78-def27d047836
                program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
                preference:
                  medium:
                    - English
                  subject:
                    - ""
                  gradeLevel:
                    - ""
                type: sourcing
        required: true
      responses:
        200:
          description: ""
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programPreference-update200Success"
              example:
                id: api.preference.create
                ver: 1.0
                ts: 2021-01-11T06:46:58.423Z
                params:
                  resmsgid: cd1d6870-53d8-11eb-9ecd-69fe79984d78
                  msgid: cd1d1a50-53d8-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  user_id: 48dc0e70-2775-474b-9b78-def27d047836
                  program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
                  type: sourcing
                  sourcing_preference:
                    medium:
                      - English
                    subject:
                      - ""
                    gradeLevel:
                      - ""
                  contributor_preference: {}
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programPreference400BadRequest"
              example:
                id: api.preference.create
                ver: 1.0
                ts: 2021-01-11T06:47:17.091Z
                params:
                  resmsgid: d83deb31-53d8-11eb-a43e-7fcb93a469e2
                  msgid:
                  status: failed
                  err: ERR_CREATE_USER_PREFERENCE
                  errmsg: Required fields like user_id, program_id for adding user preferences are missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/update:
    post:
      tags:
        - Program CRUD
      summary: Program Update
      description: |-
        This API updates the Program Data based on Program Id.
            - The **_v1/update_** endpoint successfully Updates the Program Data for a particular Program Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/update
      operationId: ProgramUpdate200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program update Request Body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programProgramUpdate200SuccessRequest"
        required: true
      responses:
        200:
          description: "Successful Program Update Response"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programProgramUpdate200Successfull"
              example:
                id: api.program.update
                ts: 2020-12-03T08:38:21.34Z
                params:
                  resmsgid: e6555dc1-3542-11eb-84ed-692ec8c8dbe9
                  msgid: e6555dc0-3542-11eb-84ed-692ec8c8dbe9
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  program_id: a043dc40-3497-11eb-9c32-15914148e3ce
        400:
          description: "Bad Request, Program Update Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.v1.update
                ver: 1.0
                ts: 2020-12-03T08:53:26.127Z
                params:
                  resmsgid: 01a0e7f0-3545-11eb-84ed-692ec8c8dbe9
                  msgid:
                  status: failed
                  err: ERR_UPDATE_PROGRAM_DATA
                  errmsg: Required fields while updating program data are missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/create:
    post:
      tags:
        - Program CRUD
      summary: Program Create
      description: |-
        This API creates the program data for root Org Id or request type.
            - The **_v1/create_** endpoint successfully creates the Program Data for a particular Root Org Id or request type.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/create
      operationId: CreateProgram200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Program Create Request body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programCreateProgram200SuccessRequest"
        required: true
      responses:
        200:
          description: "Program Create Successful Response"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programCreateProgram200success"
              example:
                id: api.program.create
                ts: 2020-12-03T08:25:51.2Z
                params:
                  resmsgid: 27371601-3541-11eb-a10c-1da50649277e
                  msgid: 27371600-3541-11eb-a10c-1da50649277e
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  program_id: 26be3c80-3541-11eb-a10c-1da50649277e
        400:
          description: "Bad Request, Nomination Update Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programnominationupdate400BadRequest"
      deprecated: false
  /program/v1/publish:
    post:
      tags:
        - Program CRUD
      summary: Program Publish
      description: |-
        This API publishes the program data for program Id or channel.
            - The **_v1/publish_** endpoint successfully publishes the Program Data for a particular Program Id or channel.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/publish
      operationId: Program-Publish200Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Successful Program publish Request body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programProgram-Publish200SuccessRequest"
            example:
              request:
                program_id: a043dc40-3497-11eb-9c32-15914148e3ce
                channel: sunbird
        required: true
      responses:
        200:
          description: "Successful Program Publish Request Response"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programProgram-Publish200Success"
              example:
                id: api.program.publish
                ts: 2020-12-03T08:14:32.077Z
                params:
                  resmsgid: 926d23d1-353f-11eb-86c8-875983bcd642
                  msgid: 926d23d0-353f-11eb-86c8-875983bcd642
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  program_id: a043dc40-3497-11eb-9c32-15914148e3ce
                  afterPublishResponse:
                    nomination:
                      error:
                      result:
                        program_id: a043dc40-3497-11eb-9c32-15914148e3ce
                        user_id: 48dc0e70-2775-474b-9b78-def27d047836
                        organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
                        status: Approved
                        content_types:
                          - Course Assessment
                          - eTextbook
                          - Explanation Content
                          - Learning Resource
                          - Practice Question Set
                          - Teacher Resource
                        collection_ids:
                          - do_1131644069627576321824
                          - do_1131644069627740161825
                          - do_1131644069627330561823
                    userMapping: {}
        400:
          description: "Program Publish Bad Request without channel"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program400badRequestwithoutchannel"
              example:
                id: api.v1.publish
                ver: 1.0
                ts: 2020-12-02T18:28:15.284Z
                params:
                  resmsgid: 245adf40-34cc-11eb-9c32-15914148e3ce
                  msgid:
                  status: failed
                  err: ERR_PUBLISH_PROGRAM_DATA
                  errmsg: Required fields while publishing program data are missing
                responseCode: CLIENT_ERROR
                result: {}
        404:
          description: "Program Publish Not Found Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/program404NotFound"
              example:
                request_path: /v1/publish
                message: API not found with these values
                request_host:
                  - kong
      deprecated: false
  /program/v1/feed/search:
    post:
      tags:
        - Feed Search
      summary: Program-Feed-Search
      description: |-
        This API search for program latest Updates.
            - The **_feed/search_** endpoint successfully loads the latest Updates on program data .
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/feed/search
      operationId: Program-Feed-Search200success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Successful Program feed latest data RequestBody"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programProgram-Feed-Search200successRequest"
            example:
              request:
                nomination:
                  programId:
                    - a549ffa0-3553-11eb-84ed-692ec8c8dbe9
                    - ef3ecc80-3553-11eb-84ed-692ec8c8dbe9

                  status:
                    - Pending
                contribution:
                  programId:
                    - f2c1d380-389a-11eb-af92-c5fb4afce83e
                    - a043dc40-3497-11eb-9c32-15914148e3ce

                  status:
                    - Live
                channel: 012983850117177344161
        required: true
      responses:
        200:
          description: ""
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programProgram-Feed-Search200success"
              example:
                id: api.feed.search
                ver: 1.0
                ts: 2021-01-11T08:51:23.467Z
                params:
                  resmsgid: 2ea0b9b0-53ea-11eb-9ecd-69fe79984d78
                  msgid: 2e3f11b0-53ea-11eb-9ecd-69fe79984d78
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
        400:
          description: Program-Feed-Search Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programProgram-Feed-SearchBadRequest"
              example:
                id: api.feed.search
                ver: 1.0
                ts: 2021-01-11T08:54:00.664Z
                params:
                  resmsgid: 8c531580-53ea-11eb-9ecd-69fe79984d78
                  msgid:
                  status: failed
                  err: ERR_SEARCHING_PROGRAM_FEED
                  errmsg: '[{"request.nomination.programId":"programId should not be empty"}]'
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/read/c43f7790-0a2a-11eb-a2e9-4fe29a51bb70:
    get:
      tags:
        - Program CRUD
      summary: Program Read
      description: |-
        This API get the program Data for program Id.
            - The **_v1/read_** endpoint successfully loads the program data for provided Program Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/read
      operationId: Read-Program-200-Success
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Read-Program"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programRead-Program-200-Success"
      deprecated: false
  /program/v1/unlist/publish:
    post:
      tags:
        - Program CRUD
      summary: Program Unlist Publish
      description: |-
        This API unlist the Published content based on request program Id/ channel.
            - The **_unlist/publish_** endpoint successfully unlist the content published for the provided program Id.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/unlist/publish
      operationId: Unlist-Publish400BadRequest
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Failure Program Unlist Publish Request, invalid request body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programUnlist-Publish400BadRequestRequest"
            example:
              request:
                program_id: ""
                channel: sunbird
        required: true
      responses:
        200:
          description: "Successful Unlist-Publish Program Content"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/programresultProgram'
              example:
                id: api.program.publish
                ts: 2021-01-12T10:57:24.721Z
                params:
                  resmsgid: f3e64611-54c4-11eb-8795-e372ee0a4d37
                  msgid: f3e64610-54c4-11eb-8795-e372ee0a4d37
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
                  afterPublishResponse:
                    nomination:
                      error:
                      result:
                        program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
                        user_id: c5bbabfc-7f2b-4d2e-bdc4-64b0db810817
                        organisation_id: 32625405-bc59-4622-89bb-d06934d690ef
                        status: Approved
                        content_types:
                        - Course Assessment
                        collection_ids:
                        - do_21319279857165107214382
                    userMapping: {}
        400:
          description: Unlist-Publish Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programUnlist-Publish400Success"
              example:
                id: api.unlist.publish
                ver: 1.0
                ts: 2021-01-11T13:03:17.396Z
                params:
                  resmsgid: 5f3b4541-540d-11eb-99da-e37131bdf7ab
                  msgid:
                  status: failed
                  err: ERR_PUBLISH_PROGRAM_DATA
                  errmsg: Required fields while publishing program data are missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/list:
    post:
      tags:
        - Program CRUD
      summary: Program List
      description: |-
        This API fetches the program data for the provided request filters.
            - The **_v1/list_** endpoint successfully loads the program data for the request or request filters.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/list
      operationId: ProgramListsuccess-200
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programProgramListsuccess-200Request"
            example:
              request:
                filters:
                  enrolled_id:
                    user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
                  status:
                    - Live
                    - Unlisted
        required: true
      responses:
        200:
          description: "Program List success"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programProgramListsuccess-200"
              example:
                id: api.program.list
                ts: 2021-01-07T08:22:19.773Z
                params:
                  resmsgid: 75a722d1-50c1-11eb-a115-db22788c28aa
                  msgid: 75a722d0-50c1-11eb-a115-db22788c28aa
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  count: 1
                  programs:
                    - id: 13936
                      program_id: 8d25f050-8df1-11ea-a3b1-3fc837314429
                      user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
                      organisation_id:
                      status: Initiated
                      content_types:
                        - Teacher Resource
                      collection_ids:
                      feedback:
                      rolemapping:
                      createdby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
                      updatedby:
                      createdon: 2020-11-24T07:57:48.365Z
                      updatedon:
                      program:
                        program_id: 8d25f050-8df1-11ea-a3b1-3fc837314429
                        name: TN tenant Test project
                        type: public
                        collection_ids:
                          - do_11301367038142054411248
                          - do_11301367120541286411551
                        content_types:
                          - Teacher Resource
                        target_collection_category:
                        startdate: 2020-05-04T10:25:18.092Z
                        enddate: 2021-06-18T18:30:00Z
                        nomination_enddate: 2021-03-27T18:30:00Z
                        shortlisting_enddate: 2021-05-01T18:30:00Z
                        content_submission_enddate: 2021-05-01T18:30:00Z
                        image:
                        status: Live
                        slug: sunbird
                        rolemapping:
                          REVIEWER:
                            - 6d9f0332-3662-497d-a8ff-ede453e557e4
                        createdby: 90ffbea3-2f41-4404-868e-2dfbe2ed3656
                        updatedby:
                        createdon: 2020-05-04T10:25:18.092Z
                        updatedon: 2020-10-23T10:18:31.295Z
                        rootorg_id: 013013662290239488220
                        sourcing_org_name: Tamilnadu_Tenant
                        channel: DIKSHA
                        template_id: template1
                        guidelines_url: ""
                        subject: '["Tamil"]'
                        defaultContributeOrgReview:
                        framework: tn_k-12
                        board: State (Tamil Nadu)
                        gradeLevel: '["Class 7"]'
                        medium: '["English", "Tamil"]'
          headers: {}
        400:
          description: ProgramList400BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programProgramList400BadRequest"
              example:
                id: api.list.download
                ver: 1.0
                ts: 2021-01-08T11:38:10.738Z
                params:
                  resmsgid: fc2fd921-51a5-11eb-9ecd-69fe79984d78
                  msgid:
                  status: failed
                  err: ERR_GENERATING_PROGRAM_DATA
                  errmsg: Required fields like program_id<Array>, is missing
                responseCode: CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/report:
    post:
      tags:
        - Report
      summary: Program Report
      description: |-
        This API generate the approved content report for request filters/programs Id's/filter report.
            - The **_v1/report_** endpoint successfully loads the approved content report for program Id's(array).
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/report
      operationId: Report-success-200
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Successful Approved content report Request body"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programReport-success-200-Request"
            example:
              request:
                filters:
                  program_id:
                    - 95d604b0-2af4-11eb-9bed-c53bebe417b7
                  openForContribution: true
                  report: textbookLevelReport
        required: true
      responses:
        200:
          description: "Report-success"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programReport-success-200"
              example:
                id: api.v1.report
                ver: 1.0
                ts: 2021-01-11T11:23:09.881Z
                params:
                  resmsgid: 62793a90-53ff-11eb-9c52-f5f4fb791715
                  msgid: 62082940-53ff-11eb-9c52-f5f4fb791715
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  tableData:
                    - - Medium: English
                        Grade: Class 1, Class 2, Class 3, Class 9, Class 10, Class 8, Class 5, Class 7, Class 6, Class 4
                        Subject: Mathematics
                        undefined Name: Math-Magic
                        Total Number of Chapters: 2
                        Total Contents Contributed: 0
                        Total Contents Reviewed: 0
                        Chapters with atleast one approved in each contentType: 0
                        Chapters with atleast one approved: 0
                        Total number of Approved Contents: 0
                        Digital Textbook: 0
        400:
          description: "Report-Error-400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programReport-Error-400"
              example:
                id: api.v1.report
                ver: 1.0
                ts: 2021-01-11T11:23:38.453Z
                params:
                  resmsgid: 7380f850-53ff-11eb-9c52-f5f4fb791715
                  msgid:
                  status: failed
                  err: ERR_GENERATING_CONTENT_REPORT
                  errmsg: Required fields like program_id<Array>,report is missing
                responseCode: PRG_RPT01_CLIENT_ERROR
                result: {}
      deprecated: false
  /program/v1/tenant/list:
    post:
      tags:
        - Tenant list
      summary: Tenant
      description: |-
        This API gives the list of all the tenants.
            - The **_tenant/list_** endpoint successfully gives the list of all the tenants.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/tenant/list
      operationId: Tenant-success-200
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: "Successful Tenant Read/List Request"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/programTenant-success-200-Request"
            example:
              request:
                filters:
                  status: Live
        required: true
      responses:
        200:
          description: "Tenant-success"
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/programTenant-success-200"
              example:
                id: api.tenant.list
                ver: 1.0
                ts: 2021-01-11T11:53:41.373Z
                params:
                  resmsgid: a620bad0-5403-11eb-9c52-f5f4fb791715
                  msgid: a5ba57e0-5403-11eb-9c52-f5f4fb791715
                  status: successful
                  err:
                  errmsg:
                responseCode: OK
                result:
                  count: 1
                  content:
                    - imgUrl:
                      orgName: Tamilnadu_Tenant
                      orgCode:
                      id: 013013662290239488220
                      slug: tn_tenant
                      program_count: 32
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/programTenant-error-400"
              example:
                id: api.tenant.list
                ver: 1.0
                ts: 2021-01-11T11:43:18.952Z
                params:
                  resmsgid: 3322d280-5402-11eb-8dd7-51aa5ed27ae5
                  msgid:
                  status: failed
                  err: ERR_GET_PROGRAMCOUNTS_FAILED
                  errmsg: Error while fetching program count group by facets
                responseCode: SERVER_ERROR
                result: {}
      deprecated: false
  /program/v1/contributor/search:
    post:
      tags:
        - Contributor Search
      summary: Contributor Search
      description: |-
        This API gives the list of all the contributors.
            - The **_contributor/search_** endpoint successfully gives the list of all contributors.
            - All fields marked with an * are mandatory
            - Required fields cannot be null or empty
            - Backend Route: http://program-service:6000/program/v1/contributor/search
      operationId: Contributor-search
      parameters:
        - name: Content-Type
          in: header
          description: The Content Type entity is the media type of the resource
          required: true
          style: simple
          schema:
            type: string
            example: application/json
        - name: Authorization
          in: header
          description:
            To make use of the API, you require authorization. Raise a request
            to the administrator for the use of the API. You will receive the authorization
            key. Specify the key received, here.
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contributorsearch200Request'
            example:
              request:
                filters:
                  user_org:
                    orgId:
                      eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
                    roles:
                    - sourcing_reviewer
                    - sourcing_admin
                fields: []
                limit: 1
                offset: 0
        required: true
      responses:
        '200':
          description: Contributor search 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contributorsearch200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contributorsearch4001'
      deprecated: false
components:
  schemas:
    programListDownload200SuccessRequest:
      title: ListDownload200SuccessRequest
      description: "Successful Program List Download generated from DB"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programListDownloadRequest"
      example:
        request:
          filters:
            program_id:
              - afdfa9a0-1dbc-11eb-81b1-659ec274e395
    programListDownloadRequest:
      title: ListDownloadRequest
      description: "Program list/data Download request/generate program List Data"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programListDownloadFilters"
      example:
        filters:
          program_id:
            - afdfa9a0-1dbc-11eb-81b1-659ec274e395
    programListDownloadFilters:
      title: Filters
      description: "Program list/data download filters Request"
      required:
        - program_id
      type: object
      properties:
        program_id:
          type: array
          items:
            type: string
          description: "list of unique program ids"
      example:
        program_id:
          - afdfa9a0-1dbc-11eb-81b1-659ec274e395
    programListDownload400BadRequestRequest:
      title: ListDownload400BadRequestRequest
      description: "Failure List/data Download Request, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programListNominationDownloadRequest1"
      example:
        request:
          filters: {}
    programListNominationDownloadRequest1:
      title: ListNominationDownloadRequest1
      description: "Nomination List/data Download Request"
      required:
        - filters
      type: object
      properties:
        filters:
          type: object
          description: This represents the filter data
      example:
        filters: {}
    programListDownload404NotFoundRequest:
      title: ListDownload404NotFoundRequest
      description: "Failure Program list/data Download Request, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programListDownloadRequest"
      example:
        request:
          filters:
            program_id:
              - afdfa9a0-1dbc-11eb-81b1-659ec274e395
    programProgramListsuccess-200Request:
      title: ProgramListsuccess-200Request
      description: "Successful Program Read Request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgramListRequest"
      example:
        request:
          filters:
            enrolled_id:
              user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
            status:
              - Live
              - Unlisted
    programProgramListRequest:
      title: ProgramListRequest
      description: "Program Read Request/Fetch Program data Request"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programProgramListFilters"
      example:
        filters:
          enrolled_id:
            user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
          status:
            - Live
            - Unlisted
    programProgramListFilters:
      title: ProgramListFilters
      description: "Program list/option filters,required enrolled_id and status"
      required:
        - enrolled_id
        - status
      type: object
      properties:
        enrolled_id:
          $ref: "#/components/schemas/programEnrolledId"
        status:
          type: array
          items:
            type: string
          description: "list/options key value status of program"
      example:
        enrolled_id:
          user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
        status:
          - Live
          - Unlisted
    programEnrolledId:
      title: EnrolledId
      description: "User id"
      required:
        - user_id
      type: object
      properties:
        user_id:
          type: string
          description: "unique id identifying specific user"
      example:
        user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
    programProgramList400-errorRequest:
      title: ProgramList400-errorRequest
      description: "Failure Program Read/list Request, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgramList400Request"
      example:
        request:
          filter:
            status:
              - Live
              - Unlisted
            role:
              - REVIEWER
            user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
    programProgramList400Request:
      title: ProgramList400Request
      description: "Failure Program List Request"
      required:
        - filter
      type: object
      properties:
        filter:
          $ref: "#/components/schemas/programProgramListFilter"
      example:
        filter:
          status:
            - Live
            - Unlisted
          role:
            - REVIEWER
          user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
    programProgramListFilter:
      title: ProgramListFilter
      description: "Program List/read filter Request, required status, role, user_id"
      required:
        - status
        - role
        - user_id
      type: object
      properties:
        status:
          type: array
          items:
            type: string
          description: "list/options key value status of program"
        role:
          type: array
          items:
            type: string
          description: "list roles supported by program"
        user_id:
          type: string
          description: "unique id identifying specific user"
      example:
        status:
          - Live
          - Unlisted
        role:
          - REVIEWER
        user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
    programProgramList500-errorRequest:
      title: ProgramList500-errorRequest
      description: "Failure Program Read Request, invalid url/request mode"
      required:
        - requests
      type: object
      properties:
        requests:
          $ref: "#/components/schemas/programProgramList500Requests"
      example:
        requests:
          filters:
            status:
              - Live
              - Unlisted
            role:
              - REVIEWER
            user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
            medium:
              - English
            gradeLevel:
              - Class 1
    programProgramList500Requests:
      title: ProgramList500Requests
      description: "Failure Program Read Request, required filter"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programProgramList500Filters"
      example:
        filters:
          status:
            - Live
            - Unlisted
          role:
            - REVIEWER
          user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
          medium:
            - English
          gradeLevel:
            - Class 1
    programProgramList500Filters:
      title: ProgramList500Filters
      description: "Failure Program Read/List Filters, required status, role, user_id, medium, gradelevel"
      required:
        - status
        - role
        - user_id
        - medium
        - gradeLevel
      type: object
      properties:
        status:
          type: array
          items:
            type: string
          description: "list/options key value status of program"
        role:
          type: array
          items:
            type: string
          description: "list/options roles supported by program"
        user_id:
          type: string
          description: "Unique id identifies specific user"
        medium:
          type: array
          items:
            type: string
          description: "list of medium supported by program"
        gradeLevel:
          type: array
          items:
            type: string
          description: "grade level list supported by program"
      example:
        status:
          - Live
          - Unlisted
        role:
          - REVIEWER
        user_id: d63056e0-c58d-4724-aa84-285a68ea24fb
        medium:
          - English
        gradeLevel:
          - Class 1
    programConfigurationSearch400BadRequestRequest:
      title: ConfigurationSearch400BadRequestRequest
      description: "Failure configuring Search Request, missing key or status"
      required:
        - request
      type: object
      properties:
        request:
          type: object
      example:
        request: {}
    programConfigurationSearch200SuccessRequest:
      title: ConfigurationSearch200SuccessRequest
      description: "Successful Configuration Search Request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programConfigurationSearch200Request"
      example:
        request:
          key: overrideMetaData
          status: active
    programConfigurationSearch200Request:
      title: ConfigurationSearch200Request
      description: "Successful Configuration Search Request,required key or status"
      required:
        - key
        - status
      type: object
      properties:
        key:
          type: string
          description: "Unique key for configuration Search"
        status:
          type: string
          description: "program status for configuration Search"
      example:
        key: overrideMetaData
        status: active
    programConfigurationSearch400BadRequest:
      title: ConfigurationSearch400BadRequest
      description: "Failure Configuring Search Request, invalid request body/missing required fields"
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique id identifies particular program"
        ver:
          type: string
          description: version
        ts:
          type: string
          description: "timestamp"
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: "response code/status"
        result:
          $ref: "#/components/schemas/programConfigurationSearchResult"
      example:
        id: api.configuration.search
        ver: 1.0
        ts: 2020-12-02T11:03:07.275Z
        params:
          resmsgid: f5241db0-348d-11eb-9c32-15914148e3ce
          msgid: f80986af-e190-f6a4-04c4-c1b984e056e4
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          configuration:
            id: 9
            key: overrideMetaData
            value: '[{"code":"name","dataType":"text","editable":true},{"code":"learningOutcome","dataType":"list","editable":true},{"code":"attributions","dataType":"list","editable":false},{"code":"copyright","dataType":"text","editable":false},{"code":"creator","dataType":"text","editable":false},{"code":"license","dataType":"list","editable":false},{"code":"contentPolicyCheck","dataType":"boolean","editable":false}]'
            status: active
            createdby:
            updatedby:
            createdon: 2020-09-03T11:24:42.13Z
            updatedon: 2020-09-03T11:24:42.13Z
    programProgramParams:
      title: Program Params
      description: "Required Program list/parameters"
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: "unique response message id"
        msgid:
          type: string
          description: "unique message id"
        status:
          type: string
          description: "program status"
        err:
          type: string
          nullable: true
          description: "detailed object of error occurred"
        errmsg:
          type: string
          nullable: true
          description: "error message/error description"
      example:
        resmsgid: f5241db0-348d-11eb-9c32-15914148e3ce
        msgid: f80986af-e190-f6a4-04c4-c1b984e056e4
        status: successful
        err:
        errmsg:
    programConfigurationSearchResult:
      title: ConfigurationSearchResult
      description: "Result object/data for configuration search"
      required:
        - configuration
      type: object
      properties:
        configuration:
          $ref: "#/components/schemas/programConfiguration"
      example:
        configuration:
          id: 9
          key: overrideMetaData
          value: '[{"code":"name","dataType":"text","editable":true},{"code":"learningOutcome","dataType":"list","editable":true},{"code":"attributions","dataType":"list","editable":false},{"code":"copyright","dataType":"text","editable":false},{"code":"creator","dataType":"text","editable":false},{"code":"license","dataType":"list","editable":false},{"code":"contentPolicyCheck","dataType":"boolean","editable":false}]'
          status: active
          createdby:
          updatedby:
          createdon: 2020-09-03T11:24:42.13Z
          updatedon: 2020-09-03T11:24:42.13Z
    programConfiguration:
      title: Configuration
      description: "Configuration Parameters"
      required:
        - id
        - key
        - value
        - status
        - createdby
        - updatedby
        - createdon
        - updatedon
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: "Unique configuration id"
        key:
          type: string
          description: "Unique Configuration key"
        value:
          type: string
          description: "value/data of the respective key"
        status:
          type: string
          description: "Configuration Status"
        createdby:
          type: string
          nullable: true
          description: "program configuration created by"
        updatedby:
          type: string
          nullable: true
          description: "program configuration updated by"
        createdon:
          type: string
          description: "program configuration created on"
        updatedon:
          type: string
          description: "program configuration updated on"
      example:
        id: 9
        key: overrideMetaData
        value: '[{"code":"name","dataType":"text","editable":true},{"code":"learningOutcome","dataType":"list","editable":true},{"code":"attributions","dataType":"list","editable":false},{"code":"copyright","dataType":"text","editable":false},{"code":"creator","dataType":"text","editable":false},{"code":"license","dataType":"list","editable":false},{"code":"contentPolicyCheck","dataType":"boolean","editable":false}]'
        status: active
        createdby:
        updatedby:
        createdon: 2020-09-03T11:24:42.13Z
        updatedon: 2020-09-03T11:24:42.13Z
    programProgram-PublishParams:
      title: Program-PublishParams
      description: "Parameters/list of program publish"
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: "Unique response message id"
        msgid:
          type: string
          nullable: true
          description: "Unique message id"
        status:
          type: string
          description: "status of the response"
        err:
          type: string
          description: "data/details on error occurred"
        errmsg:
          type: string
          description: "error message"
      example:
        resmsgid: 46298c50-353c-11eb-ada5-dde7a2458a3f
        msgid:
        status: failed
        err: INVALID_TOKEN
        errmsg: INVALID_TOKEN
    programNominationUpdate200SuccessRequest:
      title: NominationUpdate200SuccessRequest
      description: "Successfull Request to update Nomination Data"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationUpdateRequest"
      example:
        request:
          program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
          status: Initiated
          content_types:
            - Teacher Resource
          user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
          updatedby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
    programNominationUpdateRequest:
      title: NominationUpdateRequest
      description: "Request/list for Update Nomination"
      required:
        - program_id
        - status
        - content_types
        - user_id
        - updatedby
      type: object
      properties:
        program_id:
          type: string
          description: "unique id identifies particular program"
        status:
          type: string
          description: "Status/state of nomination"
        content_types:
          type: array
          items:
            type: string
          description: "contenttypes list for nomination update"
        user_id:
          type: string
          description: "unique id specifies a user"
        updatedby:
          type: string
          description: "credential of user updated nomination"
      example:
        program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
        status: Initiated
        content_types:
          - Teacher Resource
        user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
        updatedby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
    programnominationupdate400BadRequest:
      title: nominationupdate400BadRequest
      description: "Failure in updating nomination data, invalid request body"
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique id of particular user"
        ts:
          type: string
          description: Represents the EPOCH epoch time in milliseconds
        params:
          $ref: "#/components/schemas/programNominationUpdateParams"
        responseCode:
          type: string
          description: "Code/status of response of the nomination update request"
        result:
          $ref: "#/components/schemas/programNominationUpdateResult"
    programNominationUpdateParams:
      title: NominationUpdateParams
      description: "Parameters/list for update Nomination"
      required:
        - resmsgid
        - msgid
        - status
      type: object
      properties:
        resmsgid:
          type: string
          description: "response message id"
        msgid:
          type: string
          nullable: true
          description: "unique message id required for update nomination"
        status:
          type: string
          description: "status/state of the nomination"
      example:
        resmsgid: 776d9731-34c3-11eb-9c32-15914148e3ce
        msgid:
        status: failed
    programNominationUpdateResult:
      title: NominationUpdateResult
      description: "Object data/Result of Nomination Update"
      required:
        - name
        - parent
        - original
        - sql
        - parameters
      type: object
      properties:
        name:
          type: string
          description: "Name of the program"
        parent:
          $ref: "#/components/schemas/programNominationUpdatParent"
        original:
          $ref: "#/components/schemas/programNominationUpdateOriginal"
        sql:
          type: string
          description: "sql statement"
        parameters:
          type: array
          description: "parameter/object for nomination update"
          items:
            type: array
            items:
              type: string
    programNominationUpdatParent:
      title: NominationUpdatParent
      description: "Update nomination Parent parameters"
      required:
        - name
        - length
        - severity
        - code
        - file
        - line
        - routine
        - sql
        - parameters
      type: object
      properties:
        name:
          type: string
          description: "name of the program"
        length:
          type: integer
          format: int32
          description: "length of the data params"
        severity:
          type: string
          description: "severity level"
        code:
          type: string
          description: "unique code for status of nomination"
        file:
          type: string
          description: "file path/name for update nomination"
        line:
          type: string
          description: "line"
        routine:
          type: string
          description: "set of routine for update sql statement"
        sql:
          type: string
          description: "sql statement"
        parameters:
          type: array
          description: This represents the list of parameters for nomination update
          items:
            type: array
            items:
              type: string
    programNominationUpdateOriginal:
      title: NominationUpdateOriginal
      description: "Nomination Update Parameters"
      required:
        - name
        - length
        - severity
        - code
        - file
        - line
        - routine
        - sql
        - parameters
      type: object
      properties:
        name:
          type: string
          description: "name of the program"
        length:
          type: integer
          format: int32
          description: "length of the data params"
        severity:
          type: string
          description: "severity level"
        code:
          type: string
          description: "unique code status of nomination"
        file:
          type: string
          description: "file path/name nomination update"
        line:
          type: string
          description: "line"
        routine:
          type: string
          description: "routine set of sql statements"
        sql:
          type: string
          description: "sql statement for update nomination"
        parameters:
          type: array
          description: This represents the list of parameters for nomination update
          items:
            type: array
            items:
              type: string
    programNominationUpdate400BadRequestRequest:
      title: NominationUpdate400BadRequestRequest
      description: "Failure in Updating Nomination Request, invalid body request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationUpdateRequest"
      example:
        request:
          program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
          status: ""
          content_types:
            - Teacher Resource
          user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
          updatedby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
    programNominationUpdate404NotFoundRequest:
      title: NominationUpdate404NotFoundRequest
      description: "Failure Nomination Update Request, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationUpdateRequest"
      example:
        request:
          program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
          status: Initiated
          content_types:
            - Teacher Resource
          user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
          updatedby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
    programNominationListDownload200SuccessRequest:
      title: NominationListDownload200SuccessRequest
      description: "Successful Download Nomination List Data Request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationListDownloadRequest"
      example:
        request:
          filters:
            program_name: allTypeContent
            program_id: d16524d0-348a-11eb-9c32-15914148e3ce
            status:
              - Pending
              - Approved
              - Rejected
    programNominationListDownloadRequest:
      title: NominationListDownloadRequest
      description: "List/options for Download Nomination List Request"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programNominationListDownloadRequestFilters"
      example:
        filters:
          program_name: allTypeContent
          program_id: d16524d0-348a-11eb-9c32-15914148e3ce
          status:
            - Pending
            - Approved
            - Rejected
    programNominationListDownloadRequestFilters:
      title: NominationListDownloadRequestFilters
      description: "Request Filters for Nomination Download List"
      required:
        - program_name
        - program_id
        - status
      type: object
      properties:
        program_name:
          type: string
          description: "name of the program"
        program_id:
          type: string
          description: "unique id for identifying a specific program"
        status:
          type: array
          items:
            type: string
          description: "state/status list of Nomination Download"
      example:
        program_name: allTypeContent
        program_id: d16524d0-348a-11eb-9c32-15914148e3ce
        status:
          - Pending
          - Approved
          - Rejected
    programNominationListDownload400BadRequestwithoutProgram-idRequest:
      title: NominationListDownload400BadRequestwithoutProgram-idRequest
      description: "Failure in Downloading Nomination List request, missing program_id"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationListDownloadRequest"
      example:
        request:
          filters:
            program_name: allTypeContent
            program_id: ""
            status:
              - Pending
              - Approved
              - Rejected
    programNominationListDownload404NotFoundRequest:
      title: NominationListDownload404NotFoundRequest
      description: "Failure on Downloading Nomination List request, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programNominationListDownloadRequest"
      example:
        request:
          filters:
            program_name: allTypeContent
            program_id: d16524d0-348a-11eb-9c32-15914148e3ce
            status:
              - Pending
              - Approved
              - Rejected
    programNominationList200SuccessRequest:
      title: NominationList200SuccessRequest
      description: "Successful in fetching nomination list"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programListNominationDownloadRequest1"
      example:
        request:
          filters: {}
    programNominationList404NotFoundRequest:
      title: NominationList404NotFoundRequest
      description: "Failure in fetching Nomination List, invalid request body/url"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programListNominationDownloadRequest1"
      example:
        request:
          filters: {}
    programPreference-create200SuccessRequest:
      title: Preference-create200SuccessRequest
      description: "Successful Create program User Preference based on user_id or program_id"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - Class 7
          type: sourcing
    programPreference-Request:
      title: Preference-Request
      description: "List/request object for create program preference"
      required:
        - user_id
        - program_id
        - preference
        - type
      type: object
      properties:
        user_id:
          type: string
          description: "unique id for identifying a particular user"
        program_id:
          type: string
          description: "unique id for identifies a particular program"
        preference:
          $ref: "#/components/schemas/programPreference"
        type:
          type: string
          description: "preference type"
      example:
        user_id: 48dc0e70-2775-474b-9b78-def27d047836
        program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
        preference:
          medium:
            - English
          subject:
            - ""
          gradeLevel:
            - Class 7
        type: sourcing
    programPreference:
      title: Preference
      description: "preference list of a program"
      required:
        - medium
        - subject
        - gradeLevel
      type: object
      properties:
        medium:
          type: array
          items:
            type: string
          description: "medium list/options of a program preference"
        subject:
          type: array
          items:
            type: string
          description: "subject list/options of a program preference"
        gradeLevel:
          type: array
          items:
            type: string
          description: "grade level list/options of a program preference"
      example:
        medium:
          - English
        subject:
          - ""
        gradeLevel:
          - Class 7
    programPreference-create400BadRequestRequest:
      title: Preference-create400BadRequestRequest
      description: "Failure Create Preference, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: ""
          preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - Class 7
          type: sourcing
    programPreference-create404NotFoundRequest:
      title: Preference-create404NotFoundRequest
      description: "Failure Create Preference, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          preference:
            medium:
              - ""
            subject:
              - ""
            gradeLevel:
              - " "
          type: sourcing
    programPreference-read200SuccessRequest:
      title: Preference-read200SuccessRequest
      description: "Successful Read Preference Request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-readRequest"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: ef3ecc80-3553-11eb-84ed-692ec8c8dbe9
    programPreference-readRequest:
      title: Preference-readRequest
      description: "fetch the user preferences request based on user_id"
      required:
        - user_id
        - program_id
      type: object
      properties:
        user_id:
          type: string
          description: "Unique id for identifying user"
        program_id:
          type: string
          description: "Unique id for identifying specific program"
      example:
        user_id: 48dc0e70-2775-474b-9b78-def27d047836
        program_id: ef3ecc80-3553-11eb-84ed-692ec8c8dbe9
    programPreference-read400BadRequestRequest:
      title: Preference-read400BadRequestRequest
      description: "Failure in fetch user Read preference, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-readRequest"
      example:
        request:
          user_id: ""
          program_id: ef3ecc80-3553-11eb-84ed-692ec8c8dbe9
    programPreference-update200SuccessRequest:
      title: Preference-update200SuccessRequest
      description: "Successful user preference update Request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - ""
          type: sourcing
    programPreference-update400BadRequestRequest:
      title: Preference-update400BadRequestRequest
      description: "Failure in update user preference, invalid body request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: ""
          preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - ""
          type: sourcing
    programPreference-update404NotFoundRequest:
      title: Preference-update404NotFoundRequest
      description: "Failure in update user preference, invalid url/body request"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programPreference-Request"
      example:
        request:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - ""
          type: sourcing
    programProgramUpdate200SuccessRequest:
      title: ProgramUpdate200SuccessRequest
      description: "Successful Program Update"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgramUpdateRequest"
    programProgramUpdateRequest:
      title: ProgramUpdateRequest
      description: "List Request for program update"
      required:
        - name
        - description
        - nomination_enddate
        - shortlisting_enddate
        - content_submission_enddate
        - rewards
        - content_types
        - target_collection_category
        - sourcing_org_name
        - rootorg_id
        - createdby
        - createdon
        - startdate
        - slug
        - type
        - default_roles
        - enddate
        - status
        - program_id
        - collection_ids
        - config
      type: object
      properties:
        name:
          type: string
          description: "Name of the program"
        description:
          type: string
          description: "Details info about the program"
        nomination_enddate:
          type: string
          description: "End date for nomination data"
        shortlisting_enddate:
          type: string
          description: "End date for nomination Shortlisting"
        content_submission_enddate:
          type: string
          description: "End date for content submission"
        rewards:
          type: string
          description: "rewards details of the program"
        content_types:
          type: array
          description: "list of content types supported in a program"
          items:
            type: string
        target_collection_category:
          type: array
          items:
            type: string
          description: "list of collection category target of a program"
        sourcing_org_name:
          type: string
          description: "name of sourcing organization"
        rootorg_id:
          type: string
          description: "unique id of root organization name"
        createdby:
          type: string
          description: "details on program created by"
        createdon:
          type: string
          description: "creation date of program"
        startdate:
          type: string
          description: "starting date of the program"
        slug:
          type: string
          description: "slug details of the program"
        type:
          type: string
          description: "type of the program"
        default_roles:
          type: array
          items:
            type: string
          description: "default roles supported by the program"
        enddate:
          type: string
          description: "End date of the program"
        status:
          type: string
          description: "status code/state of the program"
        program_id:
          type: string
          description: "unique string for identifying a particular program"
        collection_ids:
          type: array
          items:
            type: string
          description: "list of collection supported by the program"
        config:
          $ref: "#/components/schemas/programProgramUpdateConfig"
    programProgramUpdateConfig:
      title: ProgramUpdateConfig
      description: "Configuration/list for program update"
      required:
        - defaultContributeOrgReview
        - _comments
        - loginReqired
        - framework
        - board
        - gradeLevel
        - medium
        - subject
        - roles
        - header
        - components
        - sharedContext
        - collections
      type: object
      properties:
        defaultContributeOrgReview:
          type: boolean
          description: "default review enabled for contribute org"
        _comments:
          type: string
          description: "Info/details in program update"
        loginReqired:
          type: boolean
          description: "status if login required on program update"
        framework:
          type: array
          items:
            type: string
          description: "framework list on program update"
        board:
          type: array
          items:
            type: string
          description: "list of board on program update"
        gradeLevel:
          type: array
          items:
            type: string
          description: "grade level list on program update"
        medium:
          type: array
          items:
            type: string
          description: "list of medium supported by a program"
        subject:
          type: array
          items:
            type: string
          description: "subject list supported  by a program"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/programProgramUpdateRole"
          description: "list roles supported by the program"
        header:
          $ref: "#/components/schemas/programHeader"
        components:
          type: array
          items:
            $ref: "#/components/schemas/programComponent"
          description: "component list of a program"
        sharedContext:
          type: array
          items:
            type: string
          description: "shared context list supported by a program"
        collections:
          type: array
          items:
            $ref: "#/components/schemas/programCollection"
          description: "collection list of a program"
    programProgramUpdateRole:
      title: ProgramUpdate Role
      description: "Update program role"
      required:
        - id
        - name
        - defaultTab
        - tabs
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: "Unique id for identifying specific program"
        name:
          type: string
          description: "name of the program"
        default:
          type: boolean
        defaultTab:
          type: integer
          format: int32
          description: "default tab on program update role"
        tabs:
          type: array
          items:
            type: integer
            format: int32
          description: "tab list on program update role"
      example:
        id: 1
        name: CONTRIBUTOR
        default: true
        defaultTab: 1
        tabs:
          - 1
    programHeader:
      title: Header
      description: "program update configuration Header"
      required:
        - id
        - ver
        - compId
        - author
        - description
        - publishedDate
        - data
        - config
      type: object
      properties:
        id:
          type: string
          description: "unique identification for program"
        ver:
          type: string
          description: "version"
        compId:
          type: string
          description: "Comparision Id for program update conf"
        author:
          type: string
          description: "author required for the program update conf"
        description:
          type: string
          description: "description/details for the program conf update"
        publishedDate:
          type: string
          description: "published date for the program conf update"
        data:
          type: object
          description: "data/object for the program update conf"
        config:
          $ref: "#/components/schemas/programProgramUpdateRoleConfig"
      example:
        id: ng.sunbird.header
        ver: 1.0
        compId: headerComp
        author: Venkat
        description: ""
        publishedDate: ""
        data: {}
        config:
          tabs:
            - index: 1
              label: Contribute
              onClick: collectionComponent
            - index: 2
              label: Review
              onClick: collectionComponent
            - index: 3
              label: Dashboard
              onClick: dashboardComponent
    programProgramUpdateRoleConfig:
      title: ProgramUpdateRoleConfig
      description: "configuration for Update Program role"
      required:
        - tabs
      type: object
      properties:
        tabs:
          type: array
          items:
            $ref: "#/components/schemas/programTab"
          description: "list of tabs/object for program update role"
      example:
        tabs:
          - index: 1
            label: Contribute
            onClick: collectionComponent
          - index: 2
            label: Review
            onClick: collectionComponent
          - index: 3
            label: Dashboard
            onClick: dashboardComponent
    programTab:
      title: Tab
      required:
        - index
        - label
        - onClick
      type: object
      properties:
        index:
          type: integer
          format: int32
          description: "index of the tab on program update conf"
        label:
          type: string
          description: "label of the component"
        onClick:
          type: string
          description: "Name of the component"
      example:
        index: 1
        label: Contribute
        onClick: collectionComponent
    programComponent:
      title: Component
      description: "Component required for program update conf"
      required:
        - id
        - ver
        - compId
        - author
        - description
        - publishedDate
        - data
        - config
      type: object
      properties:
        id:
          type: string
          description: "unique id for identifying a program"
        ver:
          type: string
          description: "version"
        compId:
          type: string
          description: "Comparison Id in program update conf"
        author:
          type: string
          description: "author of the program"
        description:
          type: string
          description: "details/info about a program on update conf"
        publishedDate:
          type: string
          description: "published date of a program"
        data:
          type: object
          description: "data/object of program on update conf"
        config:
          $ref: "#/components/schemas/programProgramUpdateRoleConfig2"
    programProgramUpdateRoleConfig2:
      title: ProgramUpdateRoleConfig2
      description: "Configuration2 Program Update Role"
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programProgramUpdateFilters"
        groupBy:
          $ref: "#/components/schemas/programGroupBy"
        collectionType:
          type: string
          description: "Configuration collection type of a program"
        collectionList:
          type: array
          items:
            type: string
          description: "list of collection on program update conf"
        status:
          type: array
          items:
            type: string
          description: "state/list on program update conf"
        contentTypes:
          $ref: "#/components/schemas/programContentTypes"
        filesConfig:
          $ref: "#/components/schemas/programFilesConfig"
        formConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/programFormConfiguration"
          description: "Form Configuration program update"
        resourceTitleLength:
          type: string
          description: "resource title length of a program on update conf"
        tenantName:
          type: string
          description: "name of tenant"
        No of options:
          type: integer
          format: int32
          description: "list/options"
        solutionType:
          type: array
          items:
            type: string
          description: "Solution type of a program on update"
        questionCategory:
          type: array
          items:
            type: string
          description: "list of question category on program update conf"
        assetConfig:
          $ref: "#/components/schemas/programAssetConfig"
    programProgramUpdateFilters:
      title: ProgramUpdateFilters
      description: "Update Program filters configuration"
      required:
        - implicit
        - explicit
      type: object
      properties:
        implicit:
          type: array
          items:
            $ref: "#/components/schemas/programImplicit"
          description: "Implicit filters on program update conf"
        explicit:
          type: array
          items:
            $ref: "#/components/schemas/programExplicit"
          description: "Explicit filters on program update conf"
    programImplicit:
      title: Implicit
      description: "Implicit filters program update configuration"
      required:
        - code
        - defaultValue
        - label
      type: object
      properties:
        code:
          type: string
          description: "Implicit filter code"
        defaultValue:
          type: array
          items:
            type: string
          description: "default values/list implicit filter configuration"
        label:
          type: string
          description: "label implicit filter configuration"
    programExplicit:
      title: Explicit
      description: "Explicit filters on program update configuration"
      required:
        - code
        - range
        - label
        - multiselect
        - defaultValue
        - visibility
      type: object
      properties:
        code:
          type: string
          description: "Explicit filter code"
        range:
          type: array
          items:
            type: string
          description: "list/range of explicit filter configuration"
        label:
          type: string
          description: "label Explicit filter Conf"
        multiselect:
          type: boolean
          description: "multi select filter explicit configuration"
        defaultValue:
          type: array
          items:
            type: string
          description: "Default values/list for Explicit filter configuration"
        visibility:
          type: boolean
          description: "visibility on explicit filter configuration of a program"
      example:
        code: gradeLevel
        range:
          - Kindergarten
          - Grade 1
          - Grade 2
          - Grade 3
        label: Class
        multiselect: false
        defaultValue:
          - Kindergarten
          - Grade 1
        visibility: true
    programGroupBy:
      title: GroupBy
      required:
        - value
        - defaultValue
      type: object
      properties:
        value:
          type: string
        defaultValue:
          type: string
      example:
        value: subject
        defaultValue: subject
    programContentTypes:
      title: ContentTypes
      required:
        - value
        - defaultValue
      type: object
      properties:
        value:
          type: array
          items:
            $ref: "#/components/schemas/programValue"
          description: ""
        defaultValue:
          type: array
          items:
            $ref: "#/components/schemas/programDefaultValue"
          description: ""
      example:
        value:
          - id: explanationContent
            label: Explanation
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - video/mp4
              - video/webm
              - application/epub
            metadata:
              name: Explanation Resource
              description: ExplanationResource
              resourceType: Read
              contentType: ExplanationResource
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553051403878414/artifact/explanation.thumb_1576602846206.png
              marks: 5
            filesConfig:
              accepted: pdf, mp4, webm, epub
              size: 50
          - id: learningActivity
            label: Activity for Learning
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - video/mp4
              - video/webm
              - application/epub
              - application/vnd.ekstep.h5p-archive
            metadata:
              name: Activity for Learning
              description: LearningActivity
              resourceType: Read
              contentType: LearningActivity
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: pdf, mp4, webm, epub, h5p
              size: 50
          - id: experientialContent
            label: Experiential
            onClick: uploadComponent
            mimeType:
              - video/mp4
              - video/webm
            metadata:
              name: Experiential Resource
              description: ExperientialResource
              resourceType: Read
              contentType: ExperientialResource
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553051403878414/artifact/explanation.thumb_1576602846206.png
              marks: 5
            filesConfig:
              accepted: mp4, webm
              size: 50
          - id: classroomTeachingVideo
            label: Classroom Teaching Video
            onClick: uploadComponent
            mimeType:
              - video/mp4
              - video/webm
            metadata:
              name: Classroom Teaching Video
              description: ClassroomTeachingVideo
              resourceType: Read
              contentType: ClassroomTeachingVideo
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: mp4, webm
              size: 50
          - id: explanationVideo
            label: Explanation Video
            onClick: uploadComponent
            mimeType:
              - video/mp4
              - video/webm
            metadata:
              name: Explanation Video
              description: ExplanationVideo
              resourceType: Read
              contentType: ExplanationVideo
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: mp4, webm
              size: 50
          - id: explanationReadingMaterial
            label: Explanation Reading Material
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Explanation Reading Material
              description: ExplanationReadingMaterial
              resourceType: Read
              contentType: ExplanationReadingMaterial
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: previousBoardExamPapers
            label: Previous Board Exam Papers
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Previous Board Exam Papers
              description: PreviousBoardExamPapers
              resourceType: Read
              contentType: PreviousBoardExamPapers
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: lessonPlanResource
            label: Lesson Plan
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Lesson Plan
              description: LessonPlanResource
              resourceType: Read
              contentType: LessonPlanResource
              audience:
                - Learner
              appIcon: ""
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: focusSpotContent
            label: FocusSpot
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: FocusSpot Resource
              description: FocusSpot
              resourceType: Read
              contentType: FocusSpot
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: TeachingMethod
            label: Teaching Method
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Teaching Method
              description: TeachingMethod
              resourceType: Read
              contentType: TeachingMethod
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: PedagogyFlow
            label: Pedagogy Flow
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Pedagogy Flow
              description: PedagogyFlow
              resourceType: Read
              contentType: PedagogyFlow
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: LearningOutcomeDefinition
            label: Learning Outcome Definition
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Learning Outcome Definition
              description: LearningOutcomeDefinition
              resourceType: Read
              contentType: LearningOutcomeDefinition
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: MarkingSchemeRubric
            label: Marking Scheme Rubric
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Marking Scheme Rubric
              description: MarkingSchemeRubric
              resourceType: Read
              contentType: MarkingSchemeRubric
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: ConceptMap
            label: Concept Map
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Concept Map
              description: ConceptMap
              resourceType: Read
              contentType: ConceptMap
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: SelfAssess
            label: Self Assess
            onClick: uploadComponent
            mimeType:
              - application/pdf
              - application/epub
            metadata:
              name: Self Assess
              description: SelfAssess
              resourceType: Read
              contentType: SelfAssess
              audience:
                - Learner
              appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553100098764812/artifact/focus-spot_1561727473311.thumb_1576602905573.png
              marks: 5
            filesConfig:
              accepted: pdf, epub
              size: 50
          - id: vsaPracticeQuestionContent
            label: VSA - Practice Sets
            onClick: questionSetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Practice QuestionSet
              description: Practice QuestionSet
              resourceType: Learn
              contentType: PracticeQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - vsa
          - id: saPracticeQuestionContent
            label: SA - Practice Sets
            onClick: questionSetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Practice QuestionSet
              description: Practice QuestionSet
              resourceType: Learn
              contentType: PracticeQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - sa
          - id: laPracticeQuestionContent
            label: LA - Practice Sets
            onClick: questionSetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Practice QuestionSet
              description: Practice QuestionSet
              resourceType: Learn
              contentType: PracticeQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - la
          - id: mcqPracticeQuestionContent
            label: MCQ - Practice Sets
            onClick: questionSetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Practice QuestionSet
              description: Practice QuestionSet
              resourceType: Learn
              contentType: PracticeQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - mcq
          - id: curiositySetContent
            label: Curiosity Sets
            onClick: curiositySetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Curiosity QuestionSet
              description: Curiosity QuestionSet
              resourceType: Learn
              contentType: CuriosityQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - curiosity
        defaultValue:
          - id: vsaPracticeQuestionContent
            label: Practice Sets
            onClick: questionSetComponent
            mimeType:
              - application/vnd.ekstep.ecml-archive
            metadata:
              name: Practice QuestionSet
              description: Practice QuestionSet
              resourceType: Learn
              contentType: PracticeQuestionSet
              audience:
                - Learner
              appIcon: ""
              marks: 5
            questionCategories:
              - vsa
    programValue:
      title: Value
      required:
        - id
        - label
        - onClick
        - mimeType
        - metadata
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        onClick:
          type: string
        mimeType:
          type: array
          items:
            type: string
          description: ""
        metadata:
          $ref: "#/components/schemas/programMetadata"
        filesConfig:
          $ref: "#/components/schemas/programFilesConfig"
        questionCategories:
          type: array
          items:
            type: string
          description: ""
      example:
        id: explanationContent
        label: Explanation
        onClick: uploadComponent
        mimeType:
          - application/pdf
          - video/mp4
          - video/webm
          - application/epub
        metadata:
          name: Explanation Resource
          description: ExplanationResource
          resourceType: Read
          contentType: ExplanationResource
          audience:
            - Learner
          appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553051403878414/artifact/explanation.thumb_1576602846206.png
          marks: 5
        filesConfig:
          accepted: pdf, mp4, webm, epub
          size: 50
    programMetadata:
      title: Metadata
      required:
        - name
        - description
        - resourceType
        - contentType
        - audience
        - appIcon
        - marks
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        resourceType:
          type: string
        contentType:
          type: string
        audience:
          type: array
          items:
            type: string
          description: ""
        appIcon:
          type: string
        marks:
          type: integer
          format: int32
      example:
        name: Explanation Resource
        description: ExplanationResource
        resourceType: Read
        contentType: ExplanationResource
        audience:
          - Learner
        appIcon: https://ntpstagingall.blob.core.windows.net/ntp-content-staging/content/do_21291553051403878414/artifact/explanation.thumb_1576602846206.png
        marks: 5
    programFilesConfig:
      title: FilesConfig
      required:
        - accepted
        - size
      type: object
      properties:
        accepted:
          type: string
        size:
          type: string
      example:
        accepted: pdf, mp4, webm, epub
        size: 50
    programDefaultValue:
      title: DefaultValue
      required:
        - id
        - label
        - onClick
        - mimeType
        - metadata
        - questionCategories
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        onClick:
          type: string
        mimeType:
          type: array
          items:
            type: string
          description: ""
        metadata:
          $ref: "#/components/schemas/programMetadata"
        questionCategories:
          type: array
          items:
            type: string
          description: ""
      example:
        id: vsaPracticeQuestionContent
        label: Practice Sets
        onClick: questionSetComponent
        mimeType:
          - application/vnd.ekstep.ecml-archive
        metadata:
          name: Practice QuestionSet
          description: Practice QuestionSet
          resourceType: Learn
          contentType: PracticeQuestionSet
          audience:
            - Learner
          appIcon: ""
          marks: 5
        questionCategories:
          - vsa
    programFormConfiguration:
      title: FormConfiguration
      required:
        - code
        - dataType
        - editable
        - inputType
        - name
        - required
        - visible
      type: object
      properties:
        code:
          type: string
        dataType:
          type: string
        description:
          type: string
        editable:
          type: boolean
        inputType:
          type: string
        label:
          type: string
        name:
          type: string
        placeholder:
          type: string
        required:
          type: boolean
        visible:
          type: boolean
        helpText:
          type: string
      example:
        code: learningOutcome
        dataType: list
        description: Learning Outcomes For The Content
        editable: true
        inputType: multiselect
        label: Learning Outcome
        name: LearningOutcome
        placeholder: Select Learning Outcomes
        required: false
        visible: true
    programAssetConfig:
      title: AssetConfig
      required:
        - image
        - video
      type: object
      properties:
        image:
          $ref: "#/components/schemas/programImage"
        video:
          $ref: "#/components/schemas/programVideo"
      example:
        image:
          size: 50
          accepted: jpeg, png, jpg
        video:
          size: 50
          accepted: pdf, mp4, webm, youtube
    programImage:
      title: Image
      required:
        - size
        - accepted
      type: object
      properties:
        size:
          type: string
        accepted:
          type: string
      example:
        size: 50
        accepted: jpeg, png, jpg
    programVideo:
      title: Video
      required:
        - size
        - accepted
      type: object
      properties:
        size:
          type: string
        accepted:
          type: string
      example:
        size: 50
        accepted: pdf, mp4, webm, youtube
    programCollection:
      title: Collection
      required:
        - id
        - allowed_content_types
        - children
      type: object
      properties:
        id:
          type: string
          description: This represents the unique id the result
        allowed_content_types:
          type: array
          items:
            type: string
          description: "This represents the allowed_content_types"
        children:
          type: array
          items:
            type: string
          description: "This represents the children's array"
      example:
        id: do_113133960314445824150
        allowed_content_types: []
        children: []
    programProgramUpdate200Successfull:
      title: ProgramUpdate200Successfull
      description: "Successful program update"
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique string for identifying a program"
        ts:
          type: string
          description: "timestamp"
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: "status code of program update response"
        result:
          $ref: "#/components/schemas/programProgramResult"
      example:
        id: api.program.update
        ts: 2020-12-03T08:38:21.34Z
        params:
          resmsgid: e6555dc1-3542-11eb-84ed-692ec8c8dbe9
          msgid: e6555dc0-3542-11eb-84ed-692ec8c8dbe9
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
    programProgramResult:
      title: ProgramResult
      description: "Program Update Result"
      required:
        - program_id
      type: object
      properties:
        program_id:
          type: string
          description: This represents the unique program id
      example:
        program_id: a043dc40-3497-11eb-9c32-15914148e3ce
    programProgramUpdate404NotFoundRequest:
      title: ProgramUpdate404NotFoundRequest
      description: "Failure Program Update, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgramUpdateRequest"
    programCreateProgram200SuccessRequest:
      title: CreateProgram200SuccessRequest
      description: "Request for create a new program"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programCreateProgramRequest"
    programCreateProgramRequest:
      title: CreateProgramRequest
      description: "request list for create a new program"
      required:
        - name
        - description
        - nomination_enddate
        - shortlisting_enddate
        - content_submission_enddate
        - rewards
        - content_types
        - target_collection_category
        - sourcing_org_name
        - rootorg_id
        - createdby
        - createdon
        - startdate
        - slug
        - type
        - default_roles
        - enddate
        - status
        - program_id
        - config
      type: object
      properties:
        name:
          type: string
          description: "name of a program"
        description:
          type: string
          description: "description details about a program"
        nomination_enddate:
          type: string
          description: "Nomination end date for a program"
        shortlisting_enddate:
          type: string
          description: "shortlisting end date for a program"
        content_submission_enddate:
          type: string
          description: "content submission End date for a program "
        rewards:
          type: string
          description: "information details in rewards"
        content_types:
          type: array
          description: "list of content types to be supported for a program"
          items:
            type: string
        target_collection_category:
          type: array
          items:
            type: string
          description: "list of target collection category for a program"
        sourcing_org_name:
          type: string
          description: "name of a sourcing organization"
        rootorg_id:
          type: string
          description: "unique id of a root organization"
        createdby:
          type: string
          description: "credentials of program created by"
        createdon:
          type: string
          description: "details when program is created on"
        startdate:
          type: string
          description: "date specified program start date"
        slug:
          type: string
          description: "details of request slug"
        type:
          type: string
          description: "defines the type of a program"
        default_roles:
          type: array
          items:
            type: string
          description: "list of roles defined for a program"
        enddate:
          type: string
          description: "program end date"
        status:
          type: string
          description: "program status"
        program_id:
          type: string
          description: "unique string for specifying a particular program"
        config:
          $ref: "#/components/schemas/programCreateProgramConfig"
    programCreateProgramConfig:
      title: CreateProgramConfig
      description: "Configuration for create a program"
      required:
        - defaultContributeOrgReview
        - _comments
        - loginReqired
        - framework
        - board
        - gradeLevel
        - medium
        - subject
        - roles
        - header
        - components
        - sharedContext
      type: object
      properties:
        defaultContributeOrgReview:
          type: boolean
          description: "status of default review contribute organization"
        _comments:
          type: string
          description: "any detailing or information"
        loginReqired:
          type: boolean
          description: "status if login required incase"
        framework:
          type: string
          description: "framework id/name"
        board:
          type: array
          items:
            type: string
          description: "list of board supported in a program"
        gradeLevel:
          type: array
          items:
            type: string
          description: "grade level list supported in a program"
        medium:
          type: array
          items:
            type: string
          description: "list specifies medium supported in a program"
        subject:
          type: array
          items:
            type: string
          description: "list of subjects supported in a program"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/programProgramUpdateRole"
          description: "list of roles allowed in a program"
        header:
          $ref: "#/components/schemas/programHeader"
        components:
          type: array
          items:
            $ref: "#/components/schemas/programComponent"
          description: "component list for a program"
        sharedContext:
          type: array
          items:
            type: string
          description: "list of shared context of a program"
    programCreateProgram200success:
      title: CreateProgram200success
      description: "Successfully Create program"
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique string to identify a program"
        ts:
          type: string
          description: "timestamp"
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: "code signifies response status"
        result:
          $ref: "#/components/schemas/programProgramResult"
      example:
        id: api.program.create
        ts: 2020-12-03T08:25:51.2Z
        params:
          resmsgid: 27371601-3541-11eb-a10c-1da50649277e
          msgid: 27371600-3541-11eb-a10c-1da50649277e
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          program_id: 26be3c80-3541-11eb-a10c-1da50649277e
    programCreateProgram404NotFoundRequest:
      title: CreateProgram404NotFoundRequest
      description: "Failure in creating a program, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programCreateProgramRequest"
    programProgram-Publish200SuccessRequest:
      title: Program-Publish200SuccessRequest
      description: "Request for Publishing program data"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
          channel: sunbird
    programProgram-PublishRequest:
      title: Program-PublishRequest
      description: "Request Data for Publishing the program based on program_id or channel"
      required:
        - program_id
        - channel
      type: object
      properties:
        program_id:
          type: string
          description: "Unique string to identify a specific program"
        channel:
          type: string
          description: "Unique string for identifying channel"
      example:
        program_id: a043dc40-3497-11eb-9c32-15914148e3ce
        channel: sunbird
    programProgram-Publish200Success:
      title: Program-Publish200Success
      description: "Successfully Update the program data for specific program or channel"
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique string for specifying a particular program"
        ts:
          type: string
          description: "string signifies timestamp"
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programProgram-Publish-Result"
      example:
        id: api.program.publish
        ts: 2020-12-03T08:14:32.077Z
        params:
          resmsgid: 926d23d1-353f-11eb-86c8-875983bcd642
          msgid: 926d23d0-353f-11eb-86c8-875983bcd642
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
          afterPublishResponse:
            nomination:
              error:
              result:
                program_id: a043dc40-3497-11eb-9c32-15914148e3ce
                user_id: 48dc0e70-2775-474b-9b78-def27d047836
                organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
                status: Approved
                content_types:
                  - Course Assessment
                  - eTextbook
                  - Explanation Content
                  - Learning Resource
                  - Practice Question Set
                  - Teacher Resource
                collection_ids:
                  - do_1131644069627576321824
                  - do_1131644069627740161825
                  - do_1131644069627330561823
            userMapping: {}
    programProgram-Publish-Result:
      title: Program-Publish-Result
      description: "response for publishing program latest data for specific program_id"
      required:
        - program_id
        - afterPublishResponse
      type: object
      properties:
        program_id:
          type: string
          description: "unique string for identifying particular program"
        afterPublishResponse:
          $ref: "#/components/schemas/programAfterPublishResponse"
      example:
        program_id: a043dc40-3497-11eb-9c32-15914148e3ce
        afterPublishResponse:
          nomination:
            error:
            result:
              program_id: a043dc40-3497-11eb-9c32-15914148e3ce
              user_id: 48dc0e70-2775-474b-9b78-def27d047836
              organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
              status: Approved
              content_types:
                - Course Assessment
                - eTextbook
                - Explanation Content
                - Learning Resource
                - Practice Question Set
                - Teacher Resource
              collection_ids:
                - do_1131644069627576321824
                - do_1131644069627740161825
                - do_1131644069627330561823
          userMapping: {}
    programAfterPublishResponse:
      title: AfterPublishResponse
      description: "response data after publishing latest program data for nomination or usermapping"
      required:
        - nomination
        - userMapping
      type: object
      properties:
        nomination:
          $ref: "#/components/schemas/programNomination"
        userMapping:
          type: object
      example:
        nomination:
          error:
          result:
            program_id: a043dc40-3497-11eb-9c32-15914148e3ce
            user_id: 48dc0e70-2775-474b-9b78-def27d047836
            organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
            status: Approved
            content_types:
              - Course Assessment
              - eTextbook
              - Explanation Content
              - Learning Resource
              - Practice Question Set
              - Teacher Resource
            collection_ids:
              - do_1131644069627576321824
              - do_1131644069627740161825
              - do_1131644069627330561823
        userMapping: {}
    programNomination:
      title: Nomination
      description: "nomination data for publishing latest program"
      required:
        - error
        - result
      type: object
      properties:
        error:
          type: string
          nullable: true
        result:
          $ref: "#/components/schemas/programProgram-Publish-Nomination"
      example:
        error:
        result:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
          status: Approved
          content_types:
            - Course Assessment
            - eTextbook
            - Explanation Content
            - Learning Resource
            - Practice Question Set
            - Teacher Resource
          collection_ids:
            - do_1131644069627576321824
            - do_1131644069627740161825
            - do_1131644069627330561823
    programProgram-Publish-Nomination:
      title: Program-Publish-Nomination
      description: "Publishing program based on nomination data for a specific program/user/status/organization/contenttypes"
      required:
        - program_id
        - user_id
        - organisation_id
        - status
        - content_types
        - collection_ids
      type: object
      properties:
        program_id:
          type: string
          description: "unique string for identifying specific program"
        user_id:
          type: string
          description: "unique string for specific user"
        organisation_id:
          type: string
          description: "unique string for identifying specific organization"
        status:
          type: string
          description: "status defining nomination update"
        content_types:
          type: array
          items:
            type: string
          description: "list all the content type supported for the program"
        collection_ids:
          type: array
          items:
            type: string
          description: "list all the collection id supported for the program"
      example:
        program_id: a043dc40-3497-11eb-9c32-15914148e3ce
        user_id: 48dc0e70-2775-474b-9b78-def27d047836
        organisation_id: e0ab89f4-0fcb-47ea-9b70-3ed0f12b1b7a
        status: Approved
        content_types:
          - Course Assessment
          - eTextbook
          - Explanation Content
          - Learning Resource
          - Practice Question Set
          - Teacher Resource
        collection_ids:
          - do_1131644069627576321824
          - do_1131644069627740161825
          - do_1131644069627330561823
    program400badRequestwithoutchannel:
      title: 400badRequestwithoutchannel
      description: "Failure in publishing the program data missing channel in request"
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "unique string for identifying program"
        ver:
          type: string
          description: "defines version"
        ts:
          type: string
          description: "defines timestamp"
        params:
          $ref: "#/components/schemas/programProgram-PublishParams"
        responseCode:
          type: string
          description: "defines response status code"
        result:
          type: object
          description: "Object defines response for failure in publish the program data"
      example:
        id: api.v1.publish
        ver: 1.0
        ts: 2020-12-02T18:28:15.284Z
        params:
          resmsgid: 245adf40-34cc-11eb-9c32-15914148e3ce
          msgid:
          status: failed
          err: ERR_PUBLISH_PROGRAM_DATA
          errmsg: Required fields while publishing program data are missing
        responseCode: CLIENT_ERROR
        result: {}
    program404NotFound:
      title: 404NotFound
      description: "Failure in publishing the program, invalid request body"
      required:
        - request_path
        - message
        - request_host
      type: object
      properties:
        request_path:
          type: string
          description: "request path for publishing the program"
        message:
          type: string
          description: "details for failure in publish the program"
        request_host:
          type: array
          items:
            type: string
          description: "lists request host"
      example:
        request_path: /v1/publish
        message: API not found with these values
        request_host:
          - kong
    programProgram-Publish400BadRequestRequest:
      title: Program-Publish400BadRequestRequest
      description: "Failure in publishing the program, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
          channel: ""
    programProgram-Publish404NotFoundRequest:
      title: Program-Publish404NotFoundRequest
      description: "Failure publishing the program, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: a043dc40-3497-11eb-9c32-15914148e3ce
          channel: sunbird
    programUnlist-Publish200SuccessRequest:
      title: Unlist-Publish200SuccessRequest
      description: "Successfully unlisted the program from the publish list "
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: f2c1d380-389a-11eb-af92-c5fb4afce83e
          channel: sunbird
    programUnlist-Publish400BadRequestRequest:
      title: Unlist-Publish400BadRequestRequest
      description: "Failure in attempt to unlist the content, invalid request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: ""
          channel: sunbird
    programUnlist-Publish404NotFoundRequest:
      title: Unlist-Publish404NotFoundRequest
      description: "Failure in attempt to unlist the content, invalid url/request body"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-PublishRequest"
      example:
        request:
          program_id: f2c1d380-389a-11eb-af92-c5fb4afce83e
          channel: sunbird
    programProgram-Feed-Search200successRequest:
      title: Program-Feed-Search200successRequest
      description: "Search latest program updates"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-Feed-SearchRequest"
      example:
        request:
          nomination:
            programId:
              - a549ffa0-3553-11eb-84ed-692ec8c8dbe9
              - ef3ecc80-3553-11eb-84ed-692ec8c8dbe9

            status:
              - Pending
          contribution:
            programId:
              - f2c1d380-389a-11eb-af92-c5fb4afce83e
              - a043dc40-3497-11eb-9c32-15914148e3ce

            status:
              - Live
          channel: 012983850117177344161
    programProgram-Feed-SearchRequest:
      title: Program-Feed-Search200Request
      description: "Successfully fetch the latest updates on program"
      required:
        - nomination
        - contribution
        - channel
      type: object
      properties:
        nomination:
          $ref: "#/components/schemas/programProgram-Feed-Nomination"
        contribution:
          $ref: "#/components/schemas/programContribution"
        channel:
          type: string
          description: This represents the channel data
      example:
        nomination:
          programId:
            - a549ffa0-3553-11eb-84ed-692ec8c8dbe9
            - ef3ecc80-3553-11eb-84ed-692ec8c8dbe9

          status:
            - Pending
        contribution:
          programId:
            - f2c1d380-389a-11eb-af92-c5fb4afce83e
            - a043dc40-3497-11eb-9c32-15914148e3ce

          status:
            - Live
        channel: 012983850117177344161
    programProgram-Feed-Nomination:
      title: Program-Feed-Nomination
      description: "Search Program on nomination updates"
      required:
        - programId
        - status
      type: object
      properties:
        programId:
          type: array

          items:
            type: string
          description: "This represents the program id"
        status:
          type: array
          items:
            type: string
          description: "This represents the status"
      example:
        programId:
          - a549ffa0-3553-11eb-84ed-692ec8c8dbe9
          - ef3ecc80-3553-11eb-84ed-692ec8c8dbe9

        status:
          - Pending
    programContribution:
      title: Contribution
      required:
        - programId
        - status
      type: object
      properties:
        programId:
          type: array
          items:
            type: string
          description: "Unique string to identify a specific program"
        status:
          type: array
          items:
            type: string
          description: "string for nomination request updates"
      example:
        programId:
          - f2c1d380-389a-11eb-af92-c5fb4afce83e
          - a043dc40-3497-11eb-9c32-15914148e3ce

        status:
          - Live
    programProgram-Feed-SearchBadRequestRequest:
      title: Program-Feed-SearchBadRequestRequest
      description: "Failure in fetching search on program latest updates missing fields"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-Feed-SearchRequest"
      example:
        request:
          nomination:
            programId: []
            status:
              - Pending
          contribution:
            programId:
              - f2c1d380-389a-11eb-af92-c5fb4afce83e
              - a043dc40-3497-11eb-9c32-15914148e3ce

            status:
              - Live
          channel: 012983850117177344161
    programProgram-Feed-Search400BadRequestonChannelIdAsEmptyRequest:
      title: Program-Feed-Search400BadRequestonChannelIdAsEmptyRequest
      description: "Failure in search for latest program updates missing Channel Id"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programProgram-Feed-SearchRequest"
      example:
        request:
          nomination:
            programId:
              - a549ffa0-3553-11eb-84ed-692ec8c8dbe9
              - ef3ecc80-3553-11eb-84ed-692ec8c8dbe9

            status:
              - Pending
          contribution:
            programId:
              - f2c1d380-389a-11eb-af92-c5fb4afce83e
              - a043dc40-3497-11eb-9c32-15914148e3ce
            status:
              - Live
          channel: ""
    programReport-success-200-Request:
      title: Report-success-200-Request
      description: "Generate Content Report for specific program_id"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programReport-success-200-Request-body"
      example:
        request:
          filters:
            program_id:
              - 95d604b0-2af4-11eb-9bed-c53bebe417b7
            openForContribution: true
            report: textbookLevelReport
    programReport-success-200-Request-body:
      title: Report-success-200-Request-body
      description: "Successfully Generate content report for program_id"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programReport-success-200-Request-Filters"
      example:
        filters:
          program_id:
            - 95d604b0-2af4-11eb-9bed-c53bebe417b7
          openForContribution: true
          report: textbookLevelReport
    programReport-success-200-Request-Filters:
      title: Report-success-200-Request-Filters
      description: "Successfully Generate Content Report Request filters"
      required:
        - program_id
        - openForContribution
        - report
      type: object
      properties:
        program_id:
          type: array
          items:
            type: string
          description: "Unique string identifies a particular program"
        openForContribution:
          type: boolean
          description: This represents the state of contribution
        report:
          type: string
          description: This represents the generated content report
      example:
        program_id:
          - 95d604b0-2af4-11eb-9bed-c53bebe417b7
        openForContribution: true
        report: textbookLevelReport
    programReport-Error-400Request:
      title: Report-Error-400Request
      description: "Failure in generate content report missing request parameters"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programReport-Error-400Request-body"
      example:
        request:
          filters:
            program:
              - 95d604b0-2af4-11eb-9bed-c53bebe417b7
            openForContribution: true
            report: textbookLevelReport
    programReport-Error-400Request-body:
      title: Report-Error-400Request-body
      description: "Failure in generate content report error in request body"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programReport-Error-400Request-bodyFilters"
      example:
        filters:
          program:
            - 95d604b0-2af4-11eb-9bed-c53bebe417b7
          openForContribution: true
          report: textbookLevelReport
    programReport-Error-400Request-bodyFilters:
      title: Report-Error-400Request-bodyFilters
      description: "Failure in generate Content Report missing body filters"
      required:
        - program
        - openForContribution
        - report
      type: object
      properties:
        program:
          type: array
          items:
            type: string
          description: "unique string identifies particular program_id"
        openForContribution:
          type: boolean
          description: This represents the state of contribution
        report:
          type: string
          description: This represents the generated content report
      example:
        program:
          - 95d604b0-2af4-11eb-9bed-c53bebe417b7
        openForContribution: true
        report: textbookLevelReport
    programTenant-success-200-Request:
      title: Tenant-success-200-Request
      description: "Successfully fetch the requested tenant details"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programTenant-success-200-Request-body"
      example:
        request:
          filters:
            status: Live
    programTenant-success-200-Request-body:
      title: Tenant-success-200-Request-body
      description: "Request body for fetching tenant details"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programTenant-success-200-Request-bodyFilters"
      example:
        filters:
          status: Live
    programTenant-success-200-Request-bodyFilters:
      title: Tenant-success-200-Request-bodyFilters
      description: "Tenant success request body filters"
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: This represents the status of org like live
      example:
        status: Live
    programTenant-error-400-Request:
      title: Tenant-error-400-Request
      description: "Failure in fetching tenant details"
      required:
        - request
      type: object
      properties:
        request:
          $ref: "#/components/schemas/programTenant-error-400-Request-body"
      example:
        request:
          filters:
            statu: Live
    programTenant-error-400-Request-body:
      title: Tenant-error-400-Request-body
      description: "Failure fetching tenant request body"
      required:
        - filters
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/programTenant-error-400-RequestFilters"
      example:
        filters:
          statu: Live
    programTenant-error-400-RequestFilters:
      title: Tenant-error-400-RequestFilters
      description: "Failure in fetching tenant filters option"
      required:
        - statu
      type: object
      properties:
        statu:
          type: string
      example:
        statu: Live
    programListDownload200SuccessResponse:
      title: This represents the List Download 200 Success
      description: This represents the List Download 200 Success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programListDownloadResult"
      example:
        id: api.list.download
        ver: 1.0
        ts: 2021-01-07T06:52:58.03Z
        params:
          resmsgid: f9ce14e0-50b4-11eb-a115-db22788c28aa
          msgid: f95402e0-50b4-11eb-a115-db22788c28aa
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          tableData:
            - program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
              values:
                - Digital Textbook Name: Learning_Outcome_Book
                  Medium:
                    - English
                  Class: Class 7
                  Subject:
                    - English
                  Number of Chapters: 5
                  Nominations Received: 2
                  Samples Received: 0
                  Nominations Accepted: 2
                  Contributions Received: 6
                  Contributions Accepted: 5
                  Contributions Rejected: 0
                  Contributions Pending: 1
                  Contributions corrections pending: 0
    programListDownloadResult:
      title: ListDownloadResult
      description: Represents the result of the list download api response
      required:
        - tableData
      type: object
      properties:
        tableData:
          type: array
          items:
            $ref: "#/components/schemas/programTableDatum"
      example:
        tableData:
          - program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
            values:
              - Digital Textbook Name: Learning_Outcome_Book
                Medium:
                  - English
                Class: Class 7
                Subject:
                  - English
                Number of Chapters: 5
                Nominations Received: 2
                Samples Received: 0
                Nominations Accepted: 2
                Contributions Received: 6
                Contributions Accepted: 5
                Contributions Rejected: 0
                Contributions Pending: 1
                Contributions corrections pending: 0
    programTableDatum:
      title: TableDatum
      required:
        - program_id
        - values
      type: object
      description: This represents the TableDatum
      properties:
        program_id:
          type: string
          description: This represents the unique program id
        values:
          type: array
          items:
            $ref: "#/components/schemas/programTableDatumValue"
          description: "This represents the TableDatumValue"
      example:
        program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
        values:
          - Digital Textbook Name: Learning_Outcome_Book
            Medium:
              - English
            Class: Class 7
            Subject:
              - English
            Number of Chapters: 5
            Nominations Received: 2
            Samples Received: 0
            Nominations Accepted: 2
            Contributions Received: 6
            Contributions Accepted: 5
            Contributions Rejected: 0
            Contributions Pending: 1
            Contributions corrections pending: 0
    programTableDatumValue:
      title: TableDatumValue
      required:
        - Digital Textbook Name
        - Medium
        - Class
        - Subject
        - Number of Chapters
        - Nominations Received
        - Samples Received
        - Nominations Accepted
        - Contributions Received
        - Contributions Accepted
        - Contributions Rejected
        - Contributions Pending
        - Contributions corrections pending
      type: object
      properties:
        Digital Textbook Name:
          type: string
        Medium:
          type: array
          items:
            type: string
          description: "These represents the mediums value"
        Class:
          type: string
          description: "These represents the class value"
        Subject:
          type: array
          items:
            type: string
          description: "These represents the subject value"
        Number of Chapters:
          type: integer
          format: int32
          description: "These represents the Number of Number of Chapters"
        Nominations Received:
          type: integer
          format: int32
          description: "These represents the Number of Nominations Received"
        Samples Received:
          type: integer
          format: int32
          description: "These represents the Number of Samples Received"
        Nominations Accepted:
          type: integer
          format: int32
          description: "These represents the Number of Nominations Accepted"
        Contributions Received:
          type: integer
          format: int32
          description: "These represents the Number of Chapters"
        Contributions Accepted:
          type: integer
          format: int32
          description: "These represents the Number of Contributions Accepted"
        Contributions Rejected:
          type: integer
          format: int32
          description: "These represents the Number of Contributions Rejected"
        Contributions Pending:
          type: integer
          format: int32
          description: "These represents the Number of Contributions Pending"
        Contributions corrections pending:
          type: integer
          format: int32
          description: "These represents the Number of Contributions corrections pending"
      example:
        Digital Textbook Name: Learning_Outcome_Book
        Medium:
          - English
        Class: Class 7
        Subject:
          - English
        Number of Chapters: 5
        Nominations Received: 2
        Samples Received: 0
        Nominations Accepted: 2
        Contributions Received: 6
        Contributions Accepted: 5
        Contributions Rejected: 0
        Contributions Pending: 1
        Contributions corrections pending: 0
    programListDownload400BadRequest:
      title: ListDownload400BadRequest
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          type: object
          description: Represents the result of the api response
      example:
        id: api.list.download
        ver: 1.0
        ts: 2021-01-07T08:02:37.384Z
        params:
          resmsgid: b4e4e482-50be-11eb-a115-db22788c28aa
          msgid:
          status: failed
          err: ERR_GENERATING_PROGRAM_DATA
          errmsg: Required fields like program_id<Array>, is missing
        responseCode: CLIENT_ERROR
        result: {}

    programProgramListsuccess-200:
      title: ProgramListsuccess-200
      description: This represents the Program List success
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programProgramListsuccessResult"
      example:
        id: api.program.list
        ts: 2021-01-07T08:22:19.773Z
        params:
          resmsgid: 75a722d1-50c1-11eb-a115-db22788c28aa
          msgid: 75a722d0-50c1-11eb-a115-db22788c28aa
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          count: 1
          programs:
            - id: 13936
              program_id: 8d25f050-8df1-11ea-a3b1-3fc837314429
              user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
              organisation_id:
              status: Initiated
              content_types:
                - Teacher Resource
              collection_ids:
              feedback:
              rolemapping:
              createdby: bcc23eec-5290-4ca2-8f3e-144a24f03b6d
              updatedby:
              createdon: 2020-11-24T07:57:48.365Z
              updatedon:
              program:
                program_id: 8d25f050-8df1-11ea-a3b1-3fc837314429
                name: TN tenant Test project
                type: public
                collection_ids:
                  - do_11301367038142054411248
                  - do_11301367120541286411551
                content_types:
                  - Teacher Resource
                target_collection_category:
                startdate: 2020-05-04T10:25:18.092Z
                enddate: 2021-06-18T18:30:00Z
                nomination_enddate: 2021-03-27T18:30:00Z
                shortlisting_enddate: 2021-05-01T18:30:00Z
                content_submission_enddate: 2021-05-01T18:30:00Z
                image:
                status: Live
                slug: sunbird
                rolemapping:
                  REVIEWER:
                    - 6d9f0332-3662-497d-a8ff-ede453e557e4
                createdby: 90ffbea3-2f41-4404-868e-2dfbe2ed3656
                updatedby:
                createdon: 2020-05-04T10:25:18.092Z
                updatedon: 2020-10-23T10:18:31.295Z
                rootorg_id: 013013662290239488220
                sourcing_org_name: Tamilnadu_Tenant
                channel: DIKSHA
                template_id: template1
                guidelines_url: ""
                subject: '["Tamil"]'
                defaultContributeOrgReview:
                framework: tn_k-12
                board: State (Tamil Nadu)
                gradeLevel: '["Class 7"]'
                medium: '["English", "Tamil"]'
    programProgramListsuccessResult:
      title: ProgramListsuccessResult
      description: This represents the Program List success Result
      required:
        - count
        - programs
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Represents the number of programs
        programs:
          type: array
          description: Represents the array of programs
          items:
            $ref: "#/components/schemas/programProgram"
    programProgram:
      title: Program
      description: Represents the program details
      required:
        - id
        - program_id
        - user_id
        - organisation_id
        - status
        - content_types
        - collection_ids
        - feedback
        - rolemapping
        - createdby
        - updatedby
        - createdon
        - updatedon
        - program
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: Represents the unique id table
        program_id:
          type: string
          description: Represents the unique id of the program
        user_id:
          type: string
          description: Represents the unique id of the user
        organisation_id:
          type: string
          nullable: true
          description: Represents the unique id of the organisation
        status:
          type: string
          description: Represents the status
        content_types:
          type: array
          items:
            type: string
          description: "Represents the content types"
        collection_ids:
          type: string
          nullable: true
          description: Represents the collection_ids id
        feedback:
          type: string
          nullable: true
          description: Represents the feedback details
        rolemapping:
          type: string
          nullable: true
          description: Represents the rolemapping details
        createdby:
          type: string
          description: Represents the user who createdby
        updatedby:
          type: string
          nullable: true
          description: Represents the last updatedby
        createdon:
          type: string
          description: Represents the last createdon
        updatedon:
          type: string
          nullable: true
          description: Represents the last updatedon
        program:
          $ref: "#/components/schemas/programProgram1"
    programProgram1:
      title: Program1
      required:
        - program_id
        - name
        - type
        - collection_ids
        - content_types
        - target_collection_category
        - startdate
        - enddate
        - nomination_enddate
        - shortlisting_enddate
        - content_submission_enddate
        - image
        - status
        - slug
        - rolemapping
        - createdby
        - updatedby
        - createdon
        - updatedon
        - rootorg_id
        - sourcing_org_name
        - channel
        - template_id
        - guidelines_url
        - subject
        - defaultContributeOrgReview
        - framework
        - board
        - gradeLevel
        - medium
      type: object
      properties:
        program_id:
          type: string
          description: Represents the unique program id
        name:
          type: string
          description: Represents the name
        type:
          type: string
        collection_ids:
          type: array
          items:
            type: string
          description: "Represents the array of collection ids"
        content_types:
          type: array
          items:
            type: string
          description: "Represents the array of content types"
        target_collection_category:
          type: string
          nullable: true
          description: Represents the target_collection_category
        startdate:
          type: string
          description: Represents the startdate
        enddate:
          type: string
          description: Represents the enddate
        nomination_enddate:
          type: string
          description: Represents the nomination_enddate
        shortlisting_enddate:
          type: string
          description: Represents the shortlisting_enddate
        content_submission_enddate:
          type: string
          description: Represents the content_submission_enddate
        image:
          type: string
          description: Represents the image
          nullable: true
        status:
          type: string
          description: Represents the status
        slug:
          type: string
          description: Represents the slug
        rolemapping:
          $ref: "#/components/schemas/programRolemapping"
        createdby:
          type: string
          description: Represents the createdby
        updatedby:
          type: string
          nullable: true
          description: Represents the updatedby
        createdon:
          type: string
          description: Represents the createdon
        updatedon:
          type: string
          description: Represents the updatedon
        rootorg_id:
          type: string
          description: Represents the rootorg_id
        sourcing_org_name:
          type: string
          description: Represents the sourcing_org_name
        channel:
          type: string
          description: Represents the channel
        template_id:
          type: string
          description: Represents the template_id
        guidelines_url:
          type: string
          description: Represents the guidelines_url
        subject:
          type: string
          description: Represents the subject
        defaultContributeOrgReview:
          type: string
          description: Represents the defaultContributeOrgReview
          nullable: true
        framework:
          type: string
          description: Represents the framework
        board:
          type: string
          description: Represents the board board
        gradeLevel:
          type: string
          description: Represents the gradeLevel
        medium:
          type: string
          description: Represents the medium
    programRolemapping:
      title: Rolemapping
      description: Represents the Role Mapping
      required:
        - REVIEWER
      type: object
      properties:
        REVIEWER:
          type: array
          items:
            type: string
          description: "this is represents the type of reviewer"
      example:
        REVIEWER:
          - 6d9f0332-3662-497d-a8ff-ede453e557e4
    programProgramList400BadRequest:
      title: ProgramList400BadRequest
      description: ProgramList400BadRequest
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramList400BadRequestParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          type: object
          description: Represents the result of the api response
      example:
        id: api.list.download
        ver: 1.0
        ts: 2021-01-08T11:38:10.738Z
        params:
          resmsgid: fc2fd921-51a5-11eb-9ecd-69fe79984d78
          msgid:
          status: failed
          err: ERR_GENERATING_PROGRAM_DATA
          errmsg: Required fields like program_id<Array>, is missing
        responseCode: CLIENT_ERROR
        result: {}
    programProgramList400BadRequestParams:
      title: ProgramList400BadRequestParams
      description: ProgramList400BadRequestParams
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: This represents res msgid
        msgid:
          type: string
          nullable: true
          description: This represents msgid
        status:
          type: string
          description: This represents status
        err:
          type: string
          description: This represents err
        errmsg:
          type: string
          description: This represents errmsg
      example:
        resmsgid: fc2fd921-51a5-11eb-9ecd-69fe79984d78
        msgid:
        status: failed
        err: ERR_GENERATING_PROGRAM_DATA
        errmsg: Required fields like program_id<Array>, is missing
    programNominationUpdate200Success:
      title: NominationUpdate200Success
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programNominationUpdate200SuccessResult"
      example:
        id: api.nomination.update
        ts: 2021-01-08T12:03:50.823Z
        params:
          resmsgid: 92262b71-51a9-11eb-9ecd-69fe79984d78
          msgid: 92262b70-51a9-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
          user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
    programNominationUpdate200SuccessResult:
      title: NominationUpdate200SuccessResult
      description: NominationUpdate200SuccessResult
      required:
        - program_id
        - user_id
      type: object
      properties:
        program_id:
          type: string
          description: Represents the unique program id
        user_id:
          type: string
          description: Represents the unique user id
      example:
        program_id: c43f7790-0a2a-11eb-a2e9-4fe29a51bb70
        user_id: 19ba0e4e-9285-4335-8dd0-f674bf03fa4d
    programNominationListDownload200Success:
      title: NominationListDownload200Success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programNominationListDownload200SuccessResult"
      example:
        id: api.list.download
        ver: 1.0
        ts: 2021-01-08T12:14:36.345Z
        params:
          resmsgid: 12e90290-51ab-11eb-9ecd-69fe79984d78
          msgid: 12e8b470-51ab-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          stats:
            - programName: allTypeContent
              name: Vidya2
              type: Organisation
              textbooks: 1
              sample: 0
              createdon: December 2, 2020
              status: Approved
            - programName: allTypeContent
              name: "anusha "
              type: Individual
              textbooks: 1
              sample: 0
              createdon: December 2, 2020
              status: Approved
    programNominationListDownload200SuccessResult:
      title: NominationListDownload200SuccessResult
      description: Represents the NominationListDownload200SuccessResult
      required:
        - stats
      type: object
      properties:
        stats:
          type: array
          items:
            $ref: "#/components/schemas/programStat"
          description: "Represents the stats array"
      example:
        stats:
          - programName: allTypeContent
            name: Vidya2
            type: Organisation
            textbooks: 1
            sample: 0
            createdon: December 2, 2020
            status: Approved
          - programName: allTypeContent
            name: "anusha "
            type: Individual
            textbooks: 1
            sample: 0
            createdon: December 2, 2020
            status: Approved
    programStat:
      title: Stat
      description: Stat
      required:
        - programName
        - name
        - type
        - textbooks
        - sample
        - createdon
        - status
      type: object
      properties:
        programName:
          type: string
          description: Represents the programName
        name:
          type: string
          description: Represents the name
        type:
          type: string
          description: Represents the type
        textbooks:
          type: integer
          format: int32
          description: Represents the textbooks
        sample:
          type: integer
          format: int32
          description: Represents the sample
        createdon:
          type: string
          description: Represents the createdon
        status:
          type: string
          description: Represents the status
      example:
        programName: allTypeContent
        name: Vidya2
        type: Organisation
        textbooks: 1
        sample: 0
        createdon: December 2, 2020
        status: Approved

    programNominationList200Success:
      title: NominationList200Success
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          type: array
          items:
            $ref: "#/components/schemas/programNominationListResult"
      example:
        id: api.nomination.list
        ts: 2021-01-11T04:43:33.952Z
        params:
          resmsgid: 8fb4cc01-53c7-11eb-9ecd-69fe79984d78
          msgid: 8fb4cc00-53c7-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          - id: 14258
            program_id: d4688e90-50ca-11eb-a115-db22788c28aa
            user_id: 5a587cc1-e018-4859-a0a8-e842650b9d64
            organisation_id: e7328d77-42a7-44c8-84f4-8cfea235f07d
            status: Approved
            content_types:
              - Course Assessment
              - eTextbook
              - Explanation Content
              - Learning Resource
              - Practice Question Set
              - Teacher Resource
            collection_ids:
              - do_11318921666818048011613
            feedback:
            rolemapping:
            createdby:
            updatedby:
            createdon: 2021-01-07T09:30:00.506Z
            updatedon:
            userData:
              osUpdatedAt: 2020-10-15T18:45:31.316Z
              lastName: ""
              firstName: N11
              gradeLevel: []
              osCreatedAt: 2020-10-15T18:45:31.316Z
              enrolledDate: 2020-08-24T11:24:10.893Z
              "@type": User
              subject: []
              channel: 01309282781705830427
              osid: 179b8dcd-ad56-42fd-83d1-9459bb8e4489
              medium: []
              userId: 5a587cc1-e018-4859-a0a8-e842650b9d64
            orgData:
              osUpdatedAt: 2020-08-24T11:23:53.873Z
              code: NIT
              osCreatedAt: 2020-08-24T11:23:53.873Z
              createdBy: 9e41deb1-daf3-4e0d-b45d-cfcad7291af9
              "@type": Org
              name: NIT
              description: NIT
              osid: e7328d77-42a7-44c8-84f4-8cfea235f07d
              type:
                - contribute
                - sourcing
              orgId: 01309282781705830427
    programNominationListResult:
      title: NominationListResult
      description: This represents Nomination List Result
      required:
        - id
        - program_id
        - user_id
        - organisation_id
        - status
        - content_types
        - collection_ids
        - feedback
        - rolemapping
        - createdby
        - updatedby
        - createdon
        - updatedon
        - userData
        - orgData
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: This represents id of the result
        program_id:
          type: string
          description: This represents unique program id
        user_id:
          type: string
          description: This represents unique user id
        organisation_id:
          type: string
          description: This represents unique organisation id
        status:
          type: string
          description: This represents status
        content_types:
          type: array
          items:
            type: string
          description: "This represents the content types"
        collection_ids:
          type: array
          items:
            type: string
          description: "This represents unique collections ids"
        feedback:
          type: string
          nullable: true
          description: This represents feedback
        rolemapping:
          type: string
          nullable: true
          description: This represents role mapping details
        createdby:
          type: string
          nullable: true
          description: This represents user createdby
        updatedby:
          type: string
          nullable: true
          description: This represents user updatedby
        createdon:
          type: string
          description: This represents date on which it is created
        updatedon:
          type: string
          nullable: true
          description: This represents last updated date
        userData:
          $ref: "#/components/schemas/programUserData"
        orgData:
          $ref: "#/components/schemas/programOrgData"
      example:
        id: 14258
        program_id: d4688e90-50ca-11eb-a115-db22788c28aa
        user_id: 5a587cc1-e018-4859-a0a8-e842650b9d64
        organisation_id: e7328d77-42a7-44c8-84f4-8cfea235f07d
        status: Approved
        content_types:
          - Course Assessment
          - eTextbook
          - Explanation Content
          - Learning Resource
          - Practice Question Set
          - Teacher Resource
        collection_ids:
          - do_11318921666818048011613
        feedback:
        rolemapping:
        createdby:
        updatedby:
        createdon: 2021-01-07T09:30:00.506Z
        updatedon:
        userData:
          osUpdatedAt: 2020-10-15T18:45:31.316Z
          lastName: ""
          firstName: N11
          gradeLevel: []
          osCreatedAt: 2020-10-15T18:45:31.316Z
          enrolledDate: 2020-08-24T11:24:10.893Z
          "@type": User
          subject: []
          channel: 01309282781705830427
          osid: 179b8dcd-ad56-42fd-83d1-9459bb8e4489
          medium: []
          userId: 5a587cc1-e018-4859-a0a8-e842650b9d64
        orgData:
          osUpdatedAt: 2020-08-24T11:23:53.873Z
          code: NIT
          osCreatedAt: 2020-08-24T11:23:53.873Z
          createdBy: 9e41deb1-daf3-4e0d-b45d-cfcad7291af9
          "@type": Org
          name: NIT
          description: NIT
          osid: e7328d77-42a7-44c8-84f4-8cfea235f07d
          type:
            - contribute
            - sourcing
          orgId: 01309282781705830427
    programUserData:
      title: UserData
      description: This represents the user data
      required:
        - osUpdatedAt
        - lastName
        - firstName
        - gradeLevel
        - osCreatedAt
        - enrolledDate
        - "@type"
        - subject
        - channel
        - osid
        - medium
        - userId
      type: object
      properties:
        osUpdatedAt:
          type: string
          description: This represents the osUpdatedAt
        lastName:
          type: string
          description: This represents the lastName
        firstName:
          type: string
          description: This represents the firstName
        gradeLevel:
          type: array
          items:
            type: string
          description: "This represents the unique gradeLevel "
        osCreatedAt:
          type: string
          description: This represents the osCreatedAt
        enrolledDate:
          type: string
          description: This represents the enrolledDate
        "@type":
          type: string
          description: This represents the type
        subject:
          type: array
          items:
            type: string
          description: "This represents the unique subject"
        channel:
          type: string
          description: This represents the unique channel id
        osid:
          type: string
          description: This represents the osid
        medium:
          type: array
          items:
            type: string
          description: "This represents the unique medium"
        userId:
          type: string
          description: This represents the unique user id
      example:
        osUpdatedAt: 2020-10-15T18:45:31.316Z
        lastName: ""
        firstName: N11
        gradeLevel: []
        osCreatedAt: 2020-10-15T18:45:31.316Z
        enrolledDate: 2020-08-24T11:24:10.893Z
        "@type": User
        subject: []
        channel: 01309282781705830427
        osid: 179b8dcd-ad56-42fd-83d1-9459bb8e4489
        medium: []
        userId: 5a587cc1-e018-4859-a0a8-e842650b9d64
    programOrgData:
      title: OrgData
      description: This represents the OrgData
      required:
        - osUpdatedAt
        - code
        - osCreatedAt
        - createdBy
        - "@type"
        - name
        - description
        - osid
        - type
        - orgId
      type: object
      properties:
        osUpdatedAt:
          type: string
          description: This represents the osUpdatedAt
        code:
          type: string
          description: This represents the code
        osCreatedAt:
          type: string
          description: This represents the osCreatedAt
        createdBy:
          type: string
          description: This represents the created by
        "@type":
          type: string
          description: This represents the type
        name:
          type: string
          description: This represents the name
        description:
          type: string
          description: This represents the description
        osid:
          type: string
          description: This represents the osid
        type:
          type: array
          items:
            type: string
          description: "This represents the types like sourcing and contribute"
        orgId:
          type: string
          description: This represents the orgId
      example:
        osUpdatedAt: 2020-08-24T11:23:53.873Z
        code: NIT
        osCreatedAt: 2020-08-24T11:23:53.873Z
        createdBy: 9e41deb1-daf3-4e0d-b45d-cfcad7291af9
        "@type": Org
        name: NIT
        description: NIT
        osid: e7328d77-42a7-44c8-84f4-8cfea235f07d
        type:
          - contribute
          - sourcing
        orgId: 01309282781705830427

    programPreference-create200Success:
      title: Preference-create 200 Success
      description:  This represents the Preference-create 200 Success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programPreferenceResult"
      example:
        id: api.preference.create
        ver: 1.0
        ts: 2021-01-11T06:37:52.627Z
        params:
          resmsgid: 87cb8c30-53d7-11eb-9ecd-69fe79984d78
          msgid: 87cb6520-53d7-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          type: sourcing
          sourcing_preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - Class 7
          contributor_preference: {}
    programPreferenceResult:
      title: PreferenceResult
      description: Preference Result
      required:
        - user_id
        - program_id
        - type
        - sourcing_preference
        - contributor_preference
      type: object
      properties:
        user_id:
          type: string
          description: This represents the unique user id
        program_id:
          type: string
          description: This represents the unique program id
        type:
          type: string
          description: This represents the type
        sourcing_preference:
          $ref: "#/components/schemas/programSourcingPreference"
        contributor_preference:
          type: object
          description: This represents the contributor preference
      example:
        user_id: 48dc0e70-2775-474b-9b78-def27d047836
        program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
        type: sourcing
        sourcing_preference:
          medium:
            - English
          subject:
            - ""
          gradeLevel:
            - Class 7
        contributor_preference: {}
    programSourcingPreference:
      title: SourcingPreference
      description: This represents Sourcing Preference
      required:
        - medium
        - subject
        - gradeLevel
      type: object
      properties:
        medium:
          type: array
          items:
            type: string
          description: "This represents the medium"
        subject:
          type: array
          items:
            type: string
          description: "This represents the subject"
        gradeLevel:
          type: array
          items:
            type: string
          description: "This represents the gradeLevel"
      example:
        medium:
          - English
        subject:
          - ""
        gradeLevel:
          - Class 7

    programPreference-read200Success:
      title: Preference-read 200 Success
      description: Represents the Preference-read 200 Success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programPreference-readResult"
      example:
        id: api.preference.read
        ver: 1.0
        ts: 2021-01-11T06:46:03.524Z
        params:
          resmsgid: ac647c40-53d8-11eb-9ecd-69fe79984d78
          msgid: ac642e20-53d8-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          contributor_preference: {}
          sourcing_preference: {}
          synced: true
          timestamp: 2020-12-03T10:42:58.288Z
    programPreference-readResult:
      title: Preference-readResult
      description: This represents Preference-read Result
      required:
        - contributor_preference
        - sourcing_preference
        - synced
        - timestamp
      type: object
      properties:
        contributor_preference:
          type: object
          description: This represents the contributor_preference
        sourcing_preference:
          type: object
          description: This represents the sourcing_preference
        synced:
          type: boolean
          description: This represents the synced
        timestamp:
          type: string
          description: This represents the timestamp
      example:
        contributor_preference: {}
        sourcing_preference: {}
        synced: true
        timestamp: 2020-12-03T10:42:58.288Z

    programPreference-update200Success:
      title: Preference-update 200 Success
      description: This represents the Preference-update 200 Success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programPreferenceResult"
      example:
        id: api.preference.create
        ver: 1.0
        ts: 2021-01-11T06:46:58.423Z
        params:
          resmsgid: cd1d6870-53d8-11eb-9ecd-69fe79984d78
          msgid: cd1d1a50-53d8-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          user_id: 48dc0e70-2775-474b-9b78-def27d047836
          program_id: afdfa9a0-1dbc-11eb-81b1-659ec274e395
          type: sourcing
          sourcing_preference:
            medium:
              - English
            subject:
              - ""
            gradeLevel:
              - ""
          contributor_preference: {}

    programPreference400BadRequest:
      title: Preference400BadRequest
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          type: object
          description: Represents the results
      example:
        id: api.preference.create
        ver: 1.0
        ts: 2021-01-11T06:47:17.091Z
        params:
          resmsgid: d83deb31-53d8-11eb-a43e-7fcb93a469e2
          msgid:
          status: failed
          err: ERR_CREATE_USER_PREFERENCE
          errmsg: Required fields like user_id, program_id for adding user preferences are missing
        responseCode: CLIENT_ERROR
        result: {}

    programProgram-Feed-Search200success:
      title: Program-Feed-Search200success
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          type: object
          description: Represents the results
      example:
        id: api.feed.search
        ver: 1.0
        ts: 2021-01-11T08:51:23.467Z
        params:
          resmsgid: 2ea0b9b0-53ea-11eb-9ecd-69fe79984d78
          msgid: 2e3f11b0-53ea-11eb-9ecd-69fe79984d78
          status: successful
          err:
          errmsg:
        responseCode: OK
        result: {}

    programProgram-Feed-SearchBadRequest:
      title: Program-Feed-SearchBadRequest
      description: Failure, loading latest update of Program Data
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: ‘Signifies Unique Program Id’
        ver:
          type: string
          description: ’Version’
        ts:
          type: string
          description: ‘Timestamp’
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: ‘Status/code for response data’
        result:
          type: object
      example:
        id: api.feed.search
        ver: 1.0
        ts: 2021-01-11T08:54:00.664Z
        params:
          resmsgid: 8c531580-53ea-11eb-9ecd-69fe79984d78
          msgid:
          status: failed
          err: ERR_SEARCHING_PROGRAM_FEED
          errmsg: '[{"request.nomination.programId":"programId should not be empty"}]'
        responseCode: CLIENT_ERROR
        result: {}

    programReport-success-200:
      title: Report-success-200
      description: "Successful generation of content Report"
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "Unique Program id"
        ver:
          type: string
          description: "version"
        ts:
          type: string
          description: "timestamp"
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: "Status/code for the response request"
        result:
          $ref: "#/components/schemas/programReportResult"
          description: "data for the content generation report"
      example:
        id: api.v1.report
        ver: 1.0
        ts: 2021-01-11T11:23:09.881Z
        params:
          resmsgid: 62793a90-53ff-11eb-9c52-f5f4fb791715
          msgid: 62082940-53ff-11eb-9c52-f5f4fb791715
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          tableData:
            - - Medium: English
                Grade: Class 1, Class 2, Class 3, Class 9, Class 10, Class 8, Class 5, Class 7, Class 6, Class 4
                Subject: Mathematics
                undefined Name: Math-Magic
                Total Number of Chapters: 2
                Total Contents Contributed: 0
                Total Contents Reviewed: 0
                Chapters with at least one approved in each contentType: 0
                Chapters with at least one approved: 0
                Total number of Approved Contents: 0
                Digital Textbook: 0
    programReportResult:
      title: Result
      description: "Data/Object of the response request "
      required:
        - tableData
      type: object
      properties:
        tableData:
          type: array
          description: "data/details of program such as medium,grade,subject supported by the program"
          items:
            type: array
            items:
              $ref: "#/components/schemas/programReportTableDatum"
      example:
        tableData:
          - - Medium: English
              Grade: Class 1, Class 2, Class 3, Class 9, Class 10, Class 8, Class 5, Class 7, Class 6, Class 4
              Subject: Mathematics
              undefined Name: Math-Magic
              Total Number of Chapters: 2
              Total Contents Contributed: 0
              Total Contents Reviewed: 0
              Chapters with at least one approved in each contentType: 0
              Chapters with at least one approved: 0
              Total number of Approved Contents: 0
              Digital Textbook: 0
    programReportTableDatum:
      title: TableDatum
      description: "List of report table data of the content"
      required:
        - Medium
        - Grade
        - Subject
        - undefined Name
        - Total Number of Chapters
        - Total Contents Contributed
        - Total Contents Reviewed
        - Chapters with at least one approved in each contentType
        - Chapters with at least one approved
        - Total number of Approved Contents
        - Digital Textbook
      type: object
      properties:
        Medium:
          type: string
          description: "Medium of the content"
        Grade:
          type: string
          description: "list of grade supported by the content"
        Subject:
          type: string
          description: "list of subjects supported by the content"
        undefined Name:
          type: string
          description: "Name of the content"
        Total Number of Chapters:
          type: integer
          format: int32
          description: "signifies total number of chapters in the content"
        Total Contents Contributed:
          type: integer
          format: int32
          description: "signifies total content contributed in the content"
        Total Contents Reviewed:
          type: integer
          format: int32
          description: "signifies total contents to be reviewed "
        Chapters with at least one approved in each contentType:
          type: integer
          format: int32
          description: "Number of chapters at least one approved content Type"
        Chapters with at least one approved:
          type: integer
          format: int32
          description: "Number of chapters with at least one approved chapter"
        Total number of Approved Contents:
          type: integer
          format: int32
          description: "total number of content approved"
        Digital Textbook:
          type: integer
          format: int32
          description: "total number of digital textbooks"
      example:
        Medium: English
        Grade: Class 1, Class 2, Class 3, Class 9, Class 10, Class 8, Class 5, Class 7, Class 6, Class 4
        Subject: Mathematics
        undefined Name: Math-Magic
        Total Number of Chapters: 2
        Total Contents Contributed: 0
        Total Contents Reviewed: 0
        Chapters with atleast one approved in each contentType: 0
        Chapters with atleast one approved: 0
        Total number of Approved Contents: 0
        Digital Textbook: 0
    programReport-Error-400:
      title: Report-Error-400
      description: "Failure, Not able to generate content report"
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: "Unique id for particular program"
        ver:
          type: string
          description: "version"
        ts:
          type: string
          description: "timestamp"
        params:
          $ref: "#/components/schemas/programReportParams"
        responseCode:
          type: string
          description: "code/status of requested response"
        result:
          type: object
          description: "data/object signifies result of the request"
      example:
        id: api.v1.report
        ver: 1.0
        ts: 2021-01-11T11:23:38.453Z
        params:
          resmsgid: 7380f850-53ff-11eb-9c52-f5f4fb791715
          msgid:
          status: failed
          err: ERR_GENERATING_CONTENT_REPORT
          errmsg: Required fields like program_id<Array>,report is missing
        responseCode: PRG_RPT01_CLIENT_ERROR
        result: {}
    programReportParams:
      title: Params
      description: "list of Parameters for content report generation"
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: "unique response message id"
        msgid:
          type: string
          nullable: true
          description: "unique message id"
        status:
          type: string
          description: "Status/code for the report request"
        err:
          type: string
          description: "error code/status"
        errmsg:
          type: string
          description: "error response/message detail"
      example:
        resmsgid: 7380f850-53ff-11eb-9c52-f5f4fb791715
        msgid:
        status: failed
        err: ERR_GENERATING_CONTENT_REPORT
        errmsg: Required fields like program_id<Array>,report is missing
    programTenant-error-400:
      title: Tenant-error-400
      description: Tenant-error-400
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programTenantParams"
        responseCode:
          type: string
          description: Represents the response code
        result:
          type: object
          description: Represents the results
      example:
        id: api.tenant.list
        ver: 1.0
        ts: 2021-01-11T11:43:18.952Z
        params:
          resmsgid: 3322d280-5402-11eb-8dd7-51aa5ed27ae5
          msgid:
          status: failed
          err: ERR_GET_PROGRAMCOUNTS_FAILED
          errmsg: Error while fetching program count group by facets
        responseCode: SERVER_ERROR
        result: {}
    programTenantParams:
      title: TenantParams
      description: TenantParams
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: "Unique response message id"
        msgid:
          type: string
          nullable: true
          description: "Unique message id"
        status:
          type: string
          description: "status of the response"
        err:
          type: string
          description: "data/details on error occurred"
        errmsg:
          type: string
          description: "error message"
      example:
        resmsgid: 3322d280-5402-11eb-8dd7-51aa5ed27ae5
        msgid:
        status: failed
        err: ERR_GET_PROGRAMCOUNTS_FAILED
        errmsg: Error while fetching program count group by facets

    programTenant-success-200:
      title: Tenant-success-200
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: "#/components/schemas/programTenantSuccessResult"
      example:
        id: api.tenant.list
        ver: 1.0
        ts: 2021-01-11T11:53:41.373Z
        params:
          resmsgid: a620bad0-5403-11eb-9c52-f5f4fb791715
          msgid: a5ba57e0-5403-11eb-9c52-f5f4fb791715
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          count: 1
          content:
            - imgUrl:
              orgName: Tamilnadu_Tenant
              orgCode:
              id: 013013662290239488220
              slug: tn_tenant
              program_count: 1
    programTenantSuccessResult:
      title: Result
      required:
        - count
        - content
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: This represents the programs count
        content:
          type: array
          items:
            $ref: "#/components/schemas/programContent"
          description: "This represents the list details"
      example:
        count: 1
        content:
          - imgUrl:
            orgName: Tamilnadu_Tenant
            orgCode:
            id: 013013662290239488220
            slug: tn_tenant
            program_count: 1
    programContent:
      title: Content
      required:
        - imgUrl
        - orgName
        - orgCode
        - id
        - slug
        - program_count
      type: object
      properties:
        imgUrl:
          type: string
          nullable: true
          description: This represents the img url
        orgName:
          type: string
          description: This represents the org name
        orgCode:
          type: string
          nullable: true
          description: This represents the org code
        id:
          type: string
          description: This represents the unique id
        slug:
          type: string
          description: This represents the slug value
        program_count:
          type: string
          description: This represents the programs count
      example:
        imgUrl:
        orgName: Tamilnadu_Tenant
        orgCode:
        id: 013013662290239488220
        slug: tn_tenant
        program_count: 1

    programRead-Program-200-Success:
      title: Read-Program-200-Success
      description: This represents the Read-Program-200-Success
      required:
        - id
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          type: string
          description: This represents the unique id of the result
        ts:
          type: string
          description: Represents the EPOCH epoch time in milliseconds
        params:
          $ref: "#/components/schemas/programProgramParams"
        responseCode:
          type: string
          description: this represents the response code
        result:
          $ref: "#/components/schemas/programReadResult"
    programReadResult:
      title: Result
      required:
        - program_id
        - name
        - description
        - type
        - collection_ids
        - content_types
        - target_collection_category
        - startdate
        - enddate
        - nomination_enddate
        - shortlisting_enddate
        - content_submission_enddate
        - image
        - status
        - slug
        - config
        - rolemapping
        - createdby
        - updatedby
        - createdon
        - updatedon
        - rootorg_id
        - sourcing_org_name
        - channel
        - template_id
        - guidelines_url
      type: object
      properties:
        program_id:
          type: string
          description: Signifies Unique Program Id
        name:
          type: string
          description: Name of the program
        description:
          type: string
          description: Details/info of the program
        type:
          type: string
          description: Details/info of the program type
        collection_ids:
          type: array
          items:
            type: string
          description: List/options of collections supported by program
        content_types:
          type: array
          items:
            type: string
          description: List/options of content types supported by program
        target_collection_category:
          type: string
          nullable: true
          description: Signifies target collection category
        startdate:
          type: string
          description: Start date of the program
        enddate:
          type: string
          description: End date of the program
        nomination_enddate:
          type: string
          description: End date of the nomination program
        shortlisting_enddate:
          type: string
          description: End date of the shortlisting program
        content_submission_enddate:
          type: string
          description: End date for the program content submission
        image:
          type: string
          nullable: true
          description: This Represents the  image
        status:
          type: string
          description: This Represents the status
        slug:
          type: string
          description: This Represents the slug
        config:
          $ref: "#/components/schemas/programConfig"
        rolemapping:
          type: string
          nullable: true
          description: This Represents the role mapping
        createdby:
          type: string
          description: This Represents the createdby
        updatedby:
          type: string
          description: This Represents the updatedby
          nullable: true
        createdon:
          type: string
          description: This Represents the createdon
        updatedon:
          type: string
          description: This Represents the updatedon
        rootorg_id:
          type: string
          description: This Represents the rootorg_id
        sourcing_org_name:
          type: string
          description: This Represents the sourcing_org_name
        channel:
          type: string
          description: This Represents the channel
        template_id:
          type: string
          description: This Represents the template_id
        guidelines_url:
          type: string
          nullable: true
          description: This Represents the guidelines_url
    programConfig:
      title: Config
      description: "Configuration"
      required:
        - board
        - roles
        - header
        - medium
        - actions
        - subject
        - _comments
        - framework
        - components
        - gradeLevel
        - collections
        - loginReqired
        - sharedContext
        - defaultContributeOrgReview
      type: object
      properties:
        board:
          type: string
          description: "Signifies the list of board added for the program"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/programRole"
          description: "List/options of roles supported by the program"
        header:
          $ref: "#/components/schemas/programReadHeader"
        medium:
          type: array
          items:
            type: string
          description: "List/options of medium supported by the program"
        actions:
          $ref: "#/components/schemas/programActions"
        subject:
          type: array
          items:
            type: string
          description: "List/options of subjects supported in the program"
        _comments:
          type: string
          description: "Details/data if any"
        framework:
          type: string
          description: "Framework supported by the program"
        components:
          type: array
          items:
            $ref: "#/components/schemas/programReadComponent"
          description: "list of components in the program"
        gradeLevel:
          type: array
          items:
            type: string
          description: "list of grade level data supported in the program"
        collections:
          type: array
          items:
            $ref: "#/components/schemas/programReadCollection"
          description: "signifies collection list in the program"
        loginReqired:
          type: boolean
          description: "signifies a status/state in case login is required or not"
        sharedContext:
          type: array
          items:
            type: string
          description: "list of shared context supported by  the program"
        defaultContributeOrgReview:
          type: boolean
          description: "default review enabled for contribute org"
    programRole:
      title: Role
      description: "Roles supported in the program, required id,name,tabs,default tab"
      required:
        - id
        - name
        - tabs
        - defaultTab
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: "Unique program Id"
        name:
          type: string
          description: "name of the role"
        tabs:
          type: array
          items:
            type: integer
            format: int32
          description: "list/options of tab supported by the role"
        default:
          type: boolean
          description: "default option"
        defaultTab:
          type: integer
          format: int32
          description: "signifies default tab for the role"
      example:
        id: 1
        name: CONTRIBUTOR
        tabs:
          - 1
        default: true
        defaultTab: 1
    programConfig1:
      title: Config1
      description: "Configuration required tabs"
      required:
        - tabs
      type: object
      properties:
        tabs:
          type: array
          items:
            $ref: "#/components/schemas/programReadProgramTab"
          description: "Configuration required tabs List"
      example:
        tabs:
          - index: 1
            label: Contribute
            onClick: collectionComponent
          - index: 2
            label: Review
            onClick: collectionComponent
          - index: 3
            label: Dashboard
            onClick: dashboardComponent
    programActions:
      title: Actions
      description: "Actions on the program respective to the roles supported such as showcert(displayCertificates),showEdit(DisplayEdit), showSave(DisplaySave), showSubmit(DisplaySubmit), ShowSubmit(DisplaySubmit),showfilter(DisplayFilters),ShowPublish(DisplayPublish),ShowRejected(DisplayRejected),ShowDashBoard(DisplayDashBoard) etc"
      required:
        - showCert
        - showEdit
        - showSave
        - showSubmit
        - showFilters
        - showPublish
        - showRejected
        - showDashboard
        - showChangeFile
        - showCountPanel
        - showAddResource
        - showCreatorView
        - showUnderReview
        - showUpforReview
        - showContribution
        - showEditResource
        - showMoveResource
        - showReviewerView
        - showCreateQuestion
        - showDeleteQuestion
        - showDeleteResource
        - showMyContribution
        - showRequestChanges
        - showAawaitingReview
        - showPreviewResource
        - showTotalUnderReview
        - showTotalContribution
      type: object
      properties:
        showCert:
          $ref: "#/components/schemas/programShowCert"
        showEdit:
          $ref: "#/components/schemas/programShowEdit"
        showSave:
          $ref: "#/components/schemas/programShowSave"
        showSubmit:
          $ref: "#/components/schemas/programShowSubmit"
        showFilters:
          $ref: "#/components/schemas/programShowFilters"
        showPublish:
          $ref: "#/components/schemas/programShowPublish"
        showRejected:
          $ref: "#/components/schemas/programShowRejected"
        showDashboard:
          $ref: "#/components/schemas/programShowDashboard"
        showChangeFile:
          $ref: "#/components/schemas/programShowChangeFile"
        showCountPanel:
          $ref: "#/components/schemas/programShowCountPanel"
        showAddResource:
          $ref: "#/components/schemas/programShowAddResource"
        showCreatorView:
          $ref: "#/components/schemas/programShowCreatorView"
        showUnderReview:
          $ref: "#/components/schemas/programShowUnderReview"
        showUpforReview:
          $ref: "#/components/schemas/programShowUpforReview"
        showContribution:
          $ref: "#/components/schemas/programShowContribution"
        showEditResource:
          $ref: "#/components/schemas/programShowEditResource"
        showMoveResource:
          $ref: "#/components/schemas/programShowMoveResource"
        showReviewerView:
          $ref: "#/components/schemas/programShowReviewerView"
        showCreateQuestion:
          $ref: "#/components/schemas/programShowCreateQuestion"
        showDeleteQuestion:
          $ref: "#/components/schemas/programShowDeleteQuestion"
        showDeleteResource:
          $ref: "#/components/schemas/programShowDeleteResource"
        showMyContribution:
          $ref: "#/components/schemas/programShowMyContribution"
        showRequestChanges:
          $ref: "#/components/schemas/programShowRequestChanges"
        showAawaitingReview:
          $ref: "#/components/schemas/programShowAawaitingReview"
        showPreviewResource:
          $ref: "#/components/schemas/programShowPreviewResource"
        showTotalUnderReview:
          $ref: "#/components/schemas/programShowTotalUnderReview"
        showTotalContribution:
          $ref: "#/components/schemas/programShowTotalContribution"
      example:
        showCert:
          roles:
            - 4
        showEdit:
          roles:
            - 1
        showSave:
          roles:
            - 1
        showSubmit:
          roles:
            - 1
        showFilters:
          roles:
            - 1
            - 2
            - 3
        showPublish:
          roles:
            - 2
        showRejected:
          roles:
            - 1
        showDashboard:
          roles:
            - 3
        showChangeFile:
          roles:
            - 1
        showCountPanel:
          roles:
            - 1
            - 2
        showAddResource:
          roles:
            - 1
        showCreatorView:
          roles:
            - 1
        showUnderReview:
          roles:
            - 1
        showUpforReview:
          roles:
            - 2
        showContribution:
          roles:
            - 1
        showEditResource:
          roles:
            - 1
        showMoveResource:
          roles:
            - 1
        showReviewerView:
          roles:
            - 2
        showCreateQuestion:
          roles:
            - 1
        showDeleteQuestion:
          roles:
            - 1
        showDeleteResource:
          roles:
            - 1
        showMyContribution:
          roles:
            - 1
        showRequestChanges:
          roles:
            - 2
        showAawaitingReview:
          roles:
            - 2
        showPreviewResource:
          roles:
            - 2
        showTotalUnderReview:
          roles:
            - 2
        showTotalContribution:
          roles:
            - 1
    programShowCert:
      title: ShowCert
      description: "Display/show Certificates"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supported for displaying certificates"
      example:
        roles:
          - 4
    programShowEdit:
      title: ShowEdit
      description: "Display/show Edit Option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show edit"
      example:
        roles:
          - 1
    programShowSave:
      title: ShowSave
      description: "Display/show Save option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show save option"
      example:
        roles:
          - 1
    programShowSubmit:
      title: ShowSubmit
      description: "Display/show to show option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show submit option"
      example:
        roles:
          - 1
    programShowFilters:
      title: ShowFilters
      description: "Display/show Filters option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Filters option"
      example:
        roles:
          - 1
          - 2
          - 3
    programShowPublish:
      title: ShowPublish
      description: "Display/show publish option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Publish option"
      example:
        roles:
          - 2
    programShowRejected:
      title: ShowRejected
      description: "display/show Rejected option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Rejected option"
      example:
        roles:
          - 1
    programShowDashboard:
      title: ShowDashboard
      description: "Display/show Dashboard option enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Dashboard option"
      example:
        roles:
          - 3
    programShowChangeFile:
      title: ShowChangeFile
      description: "Display/show to change file option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show change file option"
      example:
        roles:
          - 1
    programShowCountPanel:
      title: ShowCountPanel
      description: "Display/show Count panel enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show count panel option"
      example:
        roles:
          - 1
          - 2
    programShowAddResource:
      title: ShowAddResource
      description: "Display/show option to add resource"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show add resource option"
      example:
        roles:
          - 1
    programShowCreatorView:
      title: ShowCreatorView
      description: "Display/show CreatorView option enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show creator view option"
      example:
        roles:
          - 1
    programShowUnderReview:
      title: ShowUnderReview
      description: "Display/show Under Review Option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show under Review option"
      example:
        roles:
          - 1
    programShowUpforReview:
      title: ShowUpforReview
      description: "Display/show Up for review option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Up for Review option"
      example:
        roles:
          - 2
    programShowContribution:
      title: ShowContribution
      description: "Display/show contribution enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Contribution option"
      example:
        roles:
          - 1
    programShowEditResource:
      title: ShowEditResource
      description: "Display/show Edit Resource option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Edit resource option"
      example:
        roles:
          - 1
    programShowMoveResource:
      title: ShowMoveResource
      description: "Display/show Move Resource option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Move Resource option"
      example:
        roles:
          - 1
    programShowReviewerView:
      title: ShowReviewerView
      description: "Show/Display Reviewer View Option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Reviewer view option"
      example:
        roles:
          - 2
    programShowCreateQuestion:
      title: ShowCreateQuestion
      description: "Display/show Create question option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show create question option"
      example:
        roles:
          - 1
    programShowDeleteQuestion:
      title: ShowDeleteQuestion
      description: "Display/show Delete question enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show delete Question option"
      example:
        roles:
          - 1
    programShowDeleteResource:
      title: ShowDeleteResource
      description: "Display/show delete Resource option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Delete question option"
      example:
        roles:
          - 1
    programShowMyContribution:
      title: ShowMyContribution
      description: "Display/show MyContribution option enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show MyContribution option"
      example:
        roles:
          - 1
    programShowRequestChanges:
      title: ShowRequestChanges
      description: "Display/show the Request changes"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show request changes option"
      example:
        roles:
          - 2
    programShowAawaitingReview:
      title: Show awaiting Review
      description: "Display/show Awaiting review enabled"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Awaiting Review option"
      example:
        roles:
          - 2
    programShowPreviewResource:
      title: ShowPreviewResource
      description: "Display/show Preview Resource option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Preview Resource option"
      example:
        roles:
          - 2
    programShowTotalUnderReview:
      title: ShowTotalUnderReview
      description: "Display/show Total Under Review option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show Total Under review option"
      example:
        roles:
          - 2
    programShowTotalContribution:
      title: ShowTotalContribution
      description: "Display/show Total Contribution option"
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            type: integer
            format: int32
          description: "List of roles supports for show total contribution option"
      example:
        roles:
          - 1
    programConfig2:
      title: Config2
      description: "Configuration2, list status,collection list,contenttypes"
      type: object
      properties:
        status:
          type: array
          items:
            type: string
          description: "List of status key/value pair"
        filters:
          $ref: "#/components/schemas/programFilters"
        groupBy:
          $ref: "#/components/schemas/programGroupBy"
        collectionList:
          type: array
          items:
            type: string
          description: "List/options of collection list supported by the program"
        collectionType:
          type: string
          description: "Signifies collection type supported by the program"
        contentTypes:
          $ref: "#/components/schemas/programContentTypes"
        tenantName:
          type: string
          description: "name of the tenant"
        filesConfig:
          $ref: "#/components/schemas/programFilesConfig"
        formConfiguration:
          type: array
          items:
            $ref: "#/components/schemas/programFormConfiguration"
          description: "Form Configuration of the program"
        resourceTitleLength:
          type: string
          description: "Length of the Resource title"
        assetConfig:
          $ref: "#/components/schemas/programAssetConfig"
        solutionType:
          type: array
          items:
            type: string
          description: "Details/data for the solution type of the program"
        No of options:
          type: integer
          format: int32
          description: "Number of options"
        questionCategory:
          type: array
          items:
            type: string
          description: "List of question category supported in the program"
    programFilters:
      title: Filters
      description: "filters supported"
      required:
        - explicit
        - implicit
      type: object
      properties:
        explicit:
          type: array
          items:
            $ref: "#/components/schemas/programExplicit"
          description: "explicit list of filters"
        implicit:
          type: array
          items:
            $ref: "#/components/schemas/programImplicit"
          description: "implicit list of filters"
    programReadCollection:
      title: Collection
      description: 'Program Collection Read Request, required id, children and allowed content types'
      required:
        - id
        - children
        - allowed_content_types
      type: object
      properties:
        id:
          type: string
          description: 'Unique id specifying program id'
        children:
          type: array
          items:
            $ref: "#/components/schemas/programReadChild"
          description: "List of children of the program collection"
        allowed_content_types:
          type: array
          items:
            type: string
          description: "List of content types allowed in the program"
      example:
        id: do_113108644711645184186
        children:
          - id: do_113108645442945024187
            allowed_content_types: []
          - id: do_113108645443067904189
            allowed_content_types: []
        allowed_content_types: []
    programReadProgramTab:
      title: Tab
      description: 'Request Program Read Tab, required index,label, onclick'
      required:
        - index
        - label
        - onClick
      type: object
      properties:
        index:
          type: integer
          format: int32
          description: 'Unique index for Read Program tab'
        label:
          type: string
          description: 'Label name of the program tab'
        onClick:
          type: string
          description: 'action on program tab'
      example:
        index: 1
        label: Contribute
        onClick: collectionComponent
    programReadHeader:
      title: Header
      description: 'List of Program Header Config'
      required:
        - id
        - ver
        - data
        - author
        - compId
        - config
        - description
        - publishedDate
      type: object
      properties:
        id:
          type: string
          description: 'Unique Program id'
        ver:
          type: string
          description: 'version'
        data:
          type: object
          description: 'details/data for the program read header'
        author:
          type: string
          description: 'author name/id'
        compId:
          type: string
          description: 'Comparision id'
        config:
          $ref: "#/components/schemas/programConfig1"
        description:
          type: string
          description: 'Details of the program header'
        publishedDate:
          type: string
          description: 'Published Date of the program Header'
      example:
        id: ng.sunbird.header
        ver: 1.0
        data: {}
        author: Venkat
        compId: headerComp
        config:
          tabs:
            - index: 1
              label: Contribute
              onClick: collectionComponent
            - index: 2
              label: Review
              onClick: collectionComponent
            - index: 3
              label: Dashboard
              onClick: dashboardComponent
        description: ""
        publishedDate: ""
    programReadComponent:
      title: Component
      description: 'READ Program Component'
      required:
        - id
        - ver
        - data
        - author
        - compId
        - config
        - description
        - publishedDate
      type: object
      properties:
        id:
          type: string
          description: 'unique program id'
        ver:
          type: string
          description: 'version'
        data:
          type: object
          description: 'data/object of program read component'
        author:
          type: string
          description: 'author data/nama for program read component'
        compId:
          type: string
          description: 'Comparision Id'
        config:
          $ref: "#/components/schemas/programConfig2"
        description:
          type: string
          description: 'Details of the program component'
        publishedDate:
          type: string
          description: 'published date of program component'
    programReadChild:
      title: Child
      description: 'Child component of the program'
      required:
        - id
        - allowed_content_types
      type: object
      properties:
        id:
          type: string
          description: 'unique Program id'
        allowed_content_types:
          type: array
          items:
            type: string
          description: "list/options for allowed content types for program component"
      example:
        id: do_113108645442945024187
        allowed_content_types: []

    programUnlist-Publish400Success:
      title: Unlist-Publish400Success
      description: This represents the  Unlist-Publish bad request
      required:
        - id
        - ver
        - ts
        - params
        - responseCode
        - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: "#/components/schemas/programUnlist-PublisParams"
        responseCode:
          type: string
          description: Represents the api response code
      example:
        id: api.unlist.publish
        ver: 1.0
        ts: 2021-01-11T13:03:17.396Z
        params:
          resmsgid: 5f3b4541-540d-11eb-99da-e37131bdf7ab
          msgid:
          status: failed
          err: ERR_PUBLISH_PROGRAM_DATA
          errmsg: Required fields while publishing program data are missing
        responseCode: CLIENT_ERROR
        result: {}
    programUnlist-PublisParams:
      title: Unlist-Publish Params
      description: Unlist-Publish
      required:
        - resmsgid
        - msgid
        - status
        - err
        - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: "Unique response message id"
        msgid:
          type: string
          nullable: true
          description: "Unique message id"
        status:
          type: string
          description: "status of the response"
        err:
          type: string
          description: "data/details on error occurred"
        errmsg:
          type: string
          description: "error message"
      example:
        resmsgid: 5f3b4541-540d-11eb-99da-e37131bdf7ab
        msgid:
        status: failed
        err: ERR_PUBLISH_PROGRAM_DATA
        errmsg: Required fields while publishing program data are missing

    programresultProgram:
      title: This represents the publish program response
      description: This represents the publish program response
      required:
      - id
      - ts
      - params
      - responseCode
      - result
      type: object
      properties:
        id:
          description: Represents the api id
          type: string
        ver:
          description: Represents the api version
          type: string
        ts:
          description: Represents the EPOCH epoch time in milliseconds
          type: integer
          format: int64
        params:
          $ref: '#/components/schemas/programProgramParams'
        responseCode:
          type: string
          description: Represents the response code
        result:
          $ref: '#/components/schemas/programPublishResult'
      example:
        id: api.program.publish
        ts: 2021-01-12T10:57:24.721Z
        params:
          resmsgid: f3e64611-54c4-11eb-8795-e372ee0a4d37
          msgid: f3e64610-54c4-11eb-8795-e372ee0a4d37
          status: successful
          err:
          errmsg:
        responseCode: OK
        result:
          program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
          afterPublishResponse:
            nomination:
              error:
              result:
                program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
                user_id: c5bbabfc-7f2b-4d2e-bdc4-64b0db810817
                organisation_id: 32625405-bc59-4622-89bb-d06934d690ef
                status: Approved
                content_types:
                - Course Assessment
                collection_ids:
                - do_21319279857165107214382
            userMapping: {}
    programPublishResult:
      title: Result
      description: This represents publish response
      required:
      - program_id
      - afterPublishResponse
      type: object
      properties:
        program_id:
          type: string
          description: This represents the unique program id
        afterPublishResponse:
          $ref: '#/components/schemas/programAfterPublishResponse'
      example:
        program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
        afterPublishResponse:
          nomination:
            error:
            result:
              program_id: d2f35e20-54c4-11eb-8795-e372ee0a4d37
              user_id: c5bbabfc-7f2b-4d2e-bdc4-64b0db810817
              organisation_id: 32625405-bc59-4622-89bb-d06934d690ef
              status: Approved
              content_types:
              - Course Assessment
              collection_ids:
              - do_21319279857165107214382
          userMapping: {}
    Contributorsearch200Request:
      title: Contributorsearch200Request
      description: This represent the contributors search reqeust
      required:
      - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/ContributorSearchRequest'
      example:
        request:
          filters:
            user_org:
              orgId:
                eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
              roles:
              - sourcing_reviewer
              - sourcing_admin
          fields: []
          limit: 1
          offset: 0
    ContributorSearchRequest:
      title: ContributorSearchRequest
      description: Contributor Search Request
      required:
      - filters
      type: object
      properties:
        filters:
          $ref: '#/components/schemas/ContributorFilters'
        fields:
          type: array
          items:
            type: string
          description: The selected fields to fetch
        limit:
          type: integer
          format: int32
          description: 'Number of contributors to fetch'
        offset:
          type: integer
          format: int32
          description: 'A subset of contributors starting with the offset value'
      example:
        filters:
          user_org:
            orgId:
              eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
            roles:
            - sourcing_reviewer
            - sourcing_admin
        fields: []
        limit: 1
        offset: 0
    ContributorFilters:
      title: Filters
      description: Request filters
      required:
      - user_org
      type: object
      properties:
        user_org:
          $ref: '#/components/schemas/UserOrg'
      example:
        user_org:
          orgId:
            eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
          roles:
          - sourcing_reviewer
          - sourcing_admin
    UserOrg:
      title: UserOrg
      description: This object can have filters on open-saber user org entity
      required:
      - orgId
      - roles
      type: object
      properties:
        orgId:
          $ref: '#/components/schemas/OrgId'
        roles:
          description: User roles
          type: array
          items:
            type: string
      example:
        orgId:
          eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
        roles:
        - sourcing_reviewer
        - sourcing_admin
    OrgId:
      title: OrgId
      description: open-saber org id
      required:
      - eq
      type: object
      properties:
        eq:
          type: string
          description: Represents equal to
      example:
        eq: 18180aff-07ba-4f50-bf4a-04ace80f303b
    Contributorsearch200:
      title: Contributorsearch200
      description: Contributor search result
      required:
      - id
      - ts
      - params
      - responseCode
      - result
      type: object
      properties:
        id:
          type: string
          description: Represents the api id
        ts:
          type: string
          description: Represents the EPOCH epoch time in milliseconds
        params:
          $ref: '#/components/schemas/ContributorSearchParams'
        responseCode:
          type: string
          description: Represents the api response code
        result:
          $ref: '#/components/schemas/ContributorSearchResult'
      example:
        id: api.contributor.search
        ts: 2021-03-18T08:27:48.088Z
        params:
          resmsgid: d2428781-87c3-11eb-b183-812ff6fd6d0a
          msgid: d2428780-87c3-11eb-b183-812ff6fd6d0a
          status: successful
          err: ''
          errmsg: ''
        responseCode: OK
        result:
          description: This represents the Contributor search success Result
          contributor:
          - lastName: ''
            maskedPhone: ''
            roles:
            - PUBLIC
            channel: 15Aug123
            stateValidated: true
            maskedEmail: 15*************@yopmail.com
            id: ee44960b-a95a-4f23-80dc-7cdacf778081
            identifier: ee44960b-a95a-4f23-80dc-7cdacf778081
            userName: 15augreviewer48@yopmail.com
            rootOrgId: 013088773085405184115
            userId: ee44960b-a95a-4f23-80dc-7cdacf778081
            firstName: 15augreviewer48
            emailVerified: true
            status: 1
            name: '15augreviewer48 '
            User:
              lastName: ''
              osUpdatedAt: 2020-08-18T13:03:50.175Z
              firstName: 15augreviewer48
              osCreatedAt: 2020-08-18T13:03:50.175Z
              enrolledDate: 2020-08-18T13:03:48.576Z
              '@type': User
              channel: 013088773085405184115
              osid: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
              userId: ee44960b-a95a-4f23-80dc-7cdacf778081
            User_Org:
              osUpdatedAt: 2020-08-18T13:53:41.847Z
              osCreatedAt: 2020-08-18T13:53:41.847Z
              '@type': User_Org
              roles:
              - user
              - sourcing_reviewer
              osid: 61db4c43-d455-4cf9-91bd-b504d2fc74c0
              userId: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
              orgId: 18180aff-07ba-4f50-bf4a-04ace80f303b
            selectedRole: sourcing_reviewer
          count: 1
    ContributorSearchParams:
      title: Contributor search params
      required:
      - resmsgid
      - msgid
      - status
      - err
      - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: Represents the response message id
        msgid:
          type: string
          description: Represents the message id
        status:
          type: string
          description: Represents the status
        err:
          type: string
          description: Represents the error
          nullable: true
        errmsg:
          type: string
          description: Represents the error message
          nullable: true
      example:
        resmsgid: d2428781-87c3-11eb-b183-812ff6fd6d0a
        msgid: d2428780-87c3-11eb-b183-812ff6fd6d0a
        status: successful
        err: ''
        errmsg: ''
    ContributorSearchResult:
      title: Contributor search result
      required:
      - contributor
      - count
      type: object
      properties:
        contributor:
          type: array
          items:
            $ref: '#/components/schemas/ContributorSearchList'
          description: ''
        count:
          type: integer
          description: Represents the contributor count
          format: int32
      example:
        contributor:
        - lastName: ''
          maskedPhone: ''
          roles:
          - PUBLIC
          channel: 15Aug123
          stateValidated: true
          maskedEmail: 15*************@yopmail.com
          id: ee44960b-a95a-4f23-80dc-7cdacf778081
          identifier: ee44960b-a95a-4f23-80dc-7cdacf778081
          userName: 15augreviewer48@yopmail.com
          rootOrgId: 013088773085405184115
          userId: ee44960b-a95a-4f23-80dc-7cdacf778081
          firstName: 15augreviewer48
          status: 1
          name: '15augreviewer48 '
          User:
            lastName: ''
            osUpdatedAt: 2020-08-18T13:03:50.175Z
            firstName: 15augreviewer48
            osCreatedAt: 2020-08-18T13:03:50.175Z
            enrolledDate: 2020-08-18T13:03:48.576Z
            '@type': User
            channel: 013088773085405184115
            osid: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
            userId: ee44960b-a95a-4f23-80dc-7cdacf778081
          User_Org:
            osUpdatedAt: 2020-08-18T13:53:41.847Z
            osCreatedAt: 2020-08-18T13:53:41.847Z
            '@type': User_Org
            roles:
            - user
            - sourcing_reviewer
            osid: 61db4c43-d455-4cf9-91bd-b504d2fc74c0
            userId: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
            orgId: 18180aff-07ba-4f50-bf4a-04ace80f303b
          selectedRole: sourcing_reviewer
        count: 1
    ContributorSearchList:
      title: Contributor search list
      type: object
      properties:
        lastName:
          type: string
          description: Represents the last name
          nullable: true
        maskedPhone:
          type: string
          description: Represents the masked phone
          nullable: true
        roles:
          type: array
          items:
            type: string
          description: 'Contributor roles'
        channel:
          type: string
          description: Represents the channel id
        stateValidated:
          type: boolean
          description: Represents the account validation state
        maskedEmail:
          type: string
          description: 'Represents the masked email'
        id:
          type: string
          description: 'Represents the id'
        identifier:
          type: string
          description: 'Represents the identifier'
        userName:
          type: string
          description: 'Represents the user name'
        rootOrgId:
          type: string
          description: 'Represents the root org id'
        userId:
          type: string
          description: 'Represents the user id'
        firstName:
          type: string
          description: 'Represents the first name'
        emailVerified:
          type: boolean
          description: 'Represents the is email verified'
        status:
          type: integer
          description: 'Represents the contributor activation status'
          format: int32
        name:
          type: string
          description: 'Represents the full name'
        User:
          $ref: '#/components/schemas/ContributorUser'
        User_Org:
          $ref: '#/components/schemas/ContributorUserOrg'
        selectedRole:
          type: string
          description: 'Represents the roles'
      example:
        lastName: ''
        maskedPhone: ''
        roles:
        - PUBLIC
        channel: 15Aug123
        stateValidated: true
        maskedEmail: 15*************@yopmail.com
        id: ee44960b-a95a-4f23-80dc-7cdacf778081
        identifier: ee44960b-a95a-4f23-80dc-7cdacf778081
        userName: 15augreviewer48@yopmail.com
        rootOrgId: 013088773085405184115
        userId: ee44960b-a95a-4f23-80dc-7cdacf778081
        firstName: 15augreviewer48
        emailVerified: true
        phone: ''
        status: 1
        name: '15augreviewer48 '
        User:
          lastName: ''
          osUpdatedAt: 2020-08-18T13:03:50.175Z
          firstName: 15augreviewer48
          osCreatedAt: 2020-08-18T13:03:50.175Z
          enrolledDate: 2020-08-18T13:03:48.576Z
          '@type': User
          channel: 013088773085405184115
          osid: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
          userId: ee44960b-a95a-4f23-80dc-7cdacf778081
        User_Org:
          osUpdatedAt: 2020-08-18T13:53:41.847Z
          osCreatedAt: 2020-08-18T13:53:41.847Z
          '@type': User_Org
          roles:
          - user
          - sourcing_reviewer
          osid: 61db4c43-d455-4cf9-91bd-b504d2fc74c0
          userId: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
          orgId: 18180aff-07ba-4f50-bf4a-04ace80f303b
        selectedRole: sourcing_reviewer
    ContributorUser:
      title: User
      description: Contributor profile details
      required:
      - lastName
      - osUpdatedAt
      - firstName
      - osCreatedAt
      - enrolledDate
      - '@type'
      - channel
      - osid
      - userId
      type: object
      properties:
        lastName:
          type: string
          description: Represents the contributor last name
        osUpdatedAt:
          type: string
          description: Represents the contributor updated on
        firstName:
          type: string
          description: Represents the contributor first name
        osCreatedAt:
          type: string
          description: Represents the contributor created on
        enrolledDate:
          type: string
          description: Represents the enrolled date
        '@type':
          type: string
        channel:
          type: string
          description: Represents the channel
        osid:
          type: string
          description: Represents the id
        userId:
          type: string
          description: Represents the user id
      example:
        lastName: ''
        osUpdatedAt: 2020-08-18T13:03:50.175Z
        firstName: 15augreviewer48
        osCreatedAt: 2020-08-18T13:03:50.175Z
        enrolledDate: 2020-08-18T13:03:48.576Z
        '@type': User
        channel: 013088773085405184115
        osid: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
        userId: ee44960b-a95a-4f23-80dc-7cdacf778081
    ContributorUserOrg:
      title: Contributor user org
      description: Contributor User org
      required:
      - osUpdatedAt
      - osCreatedAt
      - '@type'
      - roles
      - osid
      - userId
      - orgId
      type: object
      properties:
        osUpdatedAt:
          type: string
          description: Represents the open-saber user organisation updated on
        osCreatedAt:
          type: string
          description: Represents the open-saber user organisation created on
        '@type':
          type: string
          description: Represents the type result
        roles:
          type: array
          items:
            type: string
          description: 'Represents the roles'
        osid:
          type: string
          description: Represents the open-saber user org id
        userId:
          type: string
          description: Represents the user id
        orgId:
          type: string
          description: Represents the organisation id
      example:
        osUpdatedAt: 2020-08-18T13:53:41.847Z
        osCreatedAt: 2020-08-18T13:53:41.847Z
        '@type': User_Org
        roles:
        - user
        - sourcing_reviewer
        osid: 61db4c43-d455-4cf9-91bd-b504d2fc74c0
        userId: 4a409368-e6c5-46a1-b8ab-b9fdad5fc8f3
        orgId: 18180aff-07ba-4f50-bf4a-04ace80f303b
    Params1:
      title: Params1
      required:
      - resmsgid
      - msgid
      - status
      - err
      - errmsg
      type: object
      properties:
        resmsgid:
          type: string
          description: Represents the response message id
        msgid:
          type: string
          description: Represents the message id
          nullable: true
        status:
          type: string
          description: Represents the status
        err:
          type: string
          description: Represents the error
        errmsg:
          type: string
          description: Represents the error message
      example:
        resmsgid: 99366230-87c4-11eb-b183-812ff6fd6d0a
        msgid: ''
        status: failed
        err: ERR_CONTRIBUTOR_SEARCH
        errmsg: Required fields to search contributor are missing
    Contributorsearch4001:
      title: Contributorsearch4001
      required:
      - id
      - ver
      - ts
      - params
      - responseCode
      - result
      type: object
      properties:
        id:
          type: string
          description: Represents the api id
        ver:
          type: string
          description: Represents the api version
        ts:
          type: string
          description: Represents the EPOCH epoch time in milliseconds
        params:
          $ref: '#/components/schemas/Params1'
        responseCode:
          type: string
          description: Represents the response code
        result:
          type: object
          description: Represents the result
      example:
        id: api.contributor.search
        ver: '1.0'
        ts: 2021-03-18T08:33:21.875Z
        params:
          resmsgid: 99366230-87c4-11eb-b183-812ff6fd6d0a
          msgid: ''
          status: failed
          err: ERR_CONTRIBUTOR_SEARCH
          errmsg: Required fields to search contributor are missing
        responseCode: CLIENT_ERROR
        result: {}

tags:
  - name: Program CRUD
  - name: Report
  - name: Preference
  - name: Nomination
  - name: Configuration
  - name: Feed Search
  - name: Tenant list
  - name: Contributor Search