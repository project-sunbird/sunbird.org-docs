openapi: 3.0.1
info:
  title: Framework API(s)
  description: "The Framework API resources is basically a supporting data structure\
    \ which serves as a template \n- It can be used in places where the structure\
    \ remains the same but only the usage changes are per requirement\n- These resources\
    \ are used to create, update, search, frameworks, channels, catergories, terms\n\
    \   - The Hierarchy is as: Framework-->Category-->Terms\n     - Category: An abstract\
    \ classification of the terms partitioned according to requirement\n     - Terms:\
    \ Refers to a keyword or a phrase to descibe a Concept"
  version: "1.0"
servers:
- url: https://staging.open-sunbird.org/api
paths:
  /channel/v1/create:
    post:
      tags:
      - Channel APIs
      summary: Create Channel
      description: "This API is used for creating a channel \n   - The endpoint for\
        \ **Create Channel** is `/channel/v1/create`\n   - The fields marked with\
        \ an asterisk (*) are mandatory. They cannot be null or empty."
      operationId: ChannelV1CreatePost
      parameters:
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require bearer authorization. Raise
          a request to the administrator for the use of the API. You will receive
          the authorization key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:'\n\
          \   \n   - JSON \n   - XML data\n \n The body is the representation of the\
          \ resource object for creating a channel"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelCreateRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Create channel" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCreate200Response'
        400:
          description: BAD REQUEST. The "Create channel" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCreate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /channel/v1/read/{ID}:
    get:
      tags:
      - Channel APIs
      summary: Get a Channel
      description: |-
        This API is associated with fetching a channel by a specific channel ID
           - The endpoint for **Get a Channel** is `/channel/v1/read/{ID}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: ChannelV1ReadGet
      parameters:
      - name: ID
        in: path
        description: Unique identifier of the channel to get
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK ! Successful operation.The "fetch channel by ID" operation
            was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelGet200Response'
        400:
          description: BAD REQUEST. The "fetch channel by ID" operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelGet400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
  /channel/v1/update/{ID}:
    patch:
      tags:
      - Channel APIs
      summary: Update Channel
      description: "This API is associated with updating a specific channel \n   -\
        \ The endpoint for **Update Channel** is `/channel/v1/update/{ID}`\n   - The\
        \ fields marked with an asterisk (*) are mandatory. They cannot be null or\
        \ empty."
      operationId: ChannelV1UpdatePatch
      parameters:
      - name: ID
        in: path
        description: Unique identifier of the channel to be updated
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n \n The body is the representation of the\
          \ resource object for updating a channel"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelUpdateRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Update channel by ID" operation
            was successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCreate200Response'
        400:
          description: BAD REQUEST. The "update channel by ID" operation failed !
            The possible reason for failure is that you may have missed providing
            input for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelCreate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /channel/v1/list:
    post:
      tags:
      - Channel APIs
      summary: List Channels
      description: "This API is associated with listing the existing channels \n \
        \  - The endpoint for **List Channels** is `/channel/v1/list`\n   - The fields\
        \ marked with an asterisk (*) are mandatory. They cannot be null or empty."
      operationId: ChannelV1ListPost
      parameters:
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.'
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:'\n\
          \   \n   - JSON \n   - XML data\n \n The body is the representation of the\
          \ resource object for listing channels"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChannelSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChannelSearchRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."list channels" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateResponse'
        400:
          description: BAD REQUEST. The "list channels" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentCreateErrorResponse'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/create:
    post:
      tags:
      - Framework - Core APIs
      summary: Create a Framework
      description: |-
        This API is associated with creating a new framework on the Sunbird Platform.
           - The endpoint for **Create a Framework** is `/framework/v1/create`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1CreatePost
      parameters:
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:'\n\
          \  \n   - JSON \n   - XML data\n  \n  The body is the representation of\
          \ the resource object for updating a channel"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFrameworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFrameworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFrameworkRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."create framework" operation was
            successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkCreate200Response'
        400:
          description: BAD REQUEST. The "create framework" operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkGet400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/read/{ID}:
    get:
      tags:
      - Framework - Core APIs
      summary: Get a Framework
      description: "This API is associated with fetching a specific framework \n \
        \  - The endpoint for **Get a Framework** is `/framework/v1/read/{ID}`\n \
        \  - The fields marked with an asterisk (*) are mandatory. They cannot be\
        \ null or empty."
      operationId: FrameworkV1ReadGet
      parameters:
      - name: ID
        in: path
        description: The identifier of the framework to be fetched
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: Its a unique ID for identifying the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK ! Successful operation."read framework" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkGet200Response'
        400:
          description: BAD REQUEST. The "read framework" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkGet400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
  /framework/v1/update/{ID}:
    patch:
      tags:
      - Framework - Core APIs
      summary: Update Framework
      description: "This API is associated with updating a framework \n   - The endpoint\
        \ for **Update Framework** is `/framework/v1/update/{ID}`\n   - The fields\
        \ marked with an asterisk (*) are mandatory. They cannot be null or empty."
      operationId: FrameworkV1UpdatePatch
      parameters:
      - name: ID
        in: path
        description: The identifier of the framework to be updated
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:'\n\
          \   \n   - JSON \n   - XML data\n \n The body is the representation of the\
          \ resource object for updating a channel"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."update framework" operation was
            successfully executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkUpdate200Response'
        400:
          description: BAD REQUEST. The "update framework" operation failed ! The
            possible reason for failure is that you may have missed providing input
            for a mandatory parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkUpdate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/list:
    post:
      tags:
      - Framework - Core APIs
      summary: List Existing Frameworks
      description: |-
        This API is associated with listing of all existing frameworks
           - The endpoint for **List Existing Frameworks** is `/framework/v1/list`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1ListPost
      parameters:
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "The body is the representation of the resource object \n  -\
          \ The body contains metadata for listing the existing frameworks"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkListRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkListRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkListRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."list framework" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkList200Response'
        400:
          description: BAD REQUEST. The "list framework" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkList400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/publish/{ID}:
    post:
      tags:
      - Framework - Core APIs
      summary: Publish Framework
      description: "This API is associated with publishing a framework \n   - The\
        \ endpoint for **Publish Framework** is `/framework/v1/publish/{ID}`\n   -\
        \ The fields marked with an asterisk (*) are mandatory. They cannot be null\
        \ or empty."
      operationId: publishFramework
      parameters:
      - name: ID
        in: path
        description: The identifier of the framework to be published
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \  Possible media types can be:- \n   - application/json"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n\n The body is the representation of the\
          \ resource object for publishing a framework"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishFrameworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublishFrameworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublishFrameworkRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Copy framework" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkPublish200Response'
        400:
          description: BAD REQUEST. The "Copy fFramework" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkCopy400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/copy/{ID}:
    post:
      tags:
      - Framework - Core APIs
      summary: Copy Framework
      description: "This API is associated with copying a framework \n   - The endpoint\
        \ for **Copy Framework** is `/framework/v1/copy/{ID}`\n   - The fields marked\
        \ with an asterisk (*) are mandatory. They cannot be null or empty."
      operationId: NCERTPost
      parameters:
      - name: ID
        in: path
        description: The identifier of the framework to be copied
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \  Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n   \n   The body is the representation\
          \ of the resource object for creating a framework"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyFrameworkRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CopyFrameworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CopyFrameworkRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Copy framework" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkCopy200Response'
        400:
          description: BAD REQUEST. The "Copy fFramework" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkCopy400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/category/create:
    post:
      tags:
      - Framework - Category APIs
      summary: Create Category
      description: |-
        This API is associated with creating a category under a framework
           - The endpoint for **Create Category** is `/framework/v1/category/create`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1CategoryCreatePost
      parameters:
      - name: framework
        in: query
        description: Its an abstract data structure which serves as a template for
          categories and terms
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique Id to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n   \n   The body is the representation\
          \ of the resource object for creating a category"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryInstanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCategoryInstanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCategoryInstanceRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."create category" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceCreate200Response'
        400:
          description: BAD REQUEST. The "create category" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceCreate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/category/read/{code}:
    get:
      tags:
      - Framework - Category APIs
      summary: Fetch Category
      description: |-
        This API is associated with fetching a category on Sunbird Platform
           - The endpoint for **Fetch Category** is `/framework/v1/category/read/{code}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1CategoryReadClassGet
      parameters:
      - name: code
        in: path
        description: The name/code of the category to be fetched
        required: true
        schema:
          type: string
      - name: framework
        in: query
        description: Its an abstract data structure which serves as a template for
          categories and terms
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique ID to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK ! Successful operation."fetch category" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceGet200Response'
        400:
          description: BAD REQUEST. The "fetch category" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceGet400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
  /framework/v1/category/update/{code}:
    patch:
      tags:
      - Framework - Category APIs
      summary: Update Category
      description: |-
        This API is associated with updating a category in an  existing framework
           - The endpoint for **Update Category** is `/framework/v1/category/read/{code}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1CategoryUpdatePatch
      parameters:
      - name: code
        in: path
        description: The name/code of the category to be updated
        required: true
        schema:
          type: string
      - name: framework
        in: query
        description: Represents the framework to which the category belongs
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Accept-Charset
        in: header
        description: 'The acceptable character set is: Unicode for all objects'
        required: true
        schema:
          type: string
      - name: Accept-Encoding
        in: header
        description: UTF-8 (Unicode Transformation Format, 8-bit form) charset is
          accepted for all media types
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: Unique ID for identifying the root organisation to which the
          user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n   \n   The body is the representation\
          \ of the resource object for updating a category in a framework"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryInstanceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCategoryInstanceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCategoryInstanceRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."update category" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceUpdate200Response'
        400:
          description: BAD REQUEST. The "update category" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceUpdate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      x-codegen-request-body-name: Body
  /framework/v1/category/search:
    post:
      tags:
      - Framework - Category APIs
      summary: Search Categories
      description: "This API is associated with searching a category \n   - The endpoint\
        \ for **Search Categories** is `/framework/v1/category/search`\n   - The fields\
        \ marked with an asterisk (*) are mandatory. They cannot be null or empty."
      operationId: FrameworkV1CategorySearchPost
      parameters:
      - name: framework
        in: query
        description: Represents the framework in which category can be searched
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It the Unique Id to identify the root organisation to which the
          user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n \n   The body is the representation of\
          \ the resource object for searching a category in a framework"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInstanceSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryInstanceSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryInstanceSearchRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."search category" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceSearch200Response'
        400:
          description: BAD REQUEST. The "search category" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryInstanceSearch400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/term/create:
    post:
      tags:
      - Framework - Term APIs
      summary: Create Term
      description: "This API is associated with creating a term under a framework\
        \ category \n   - The endpoint for **Create Term** is `/framework/v1/term/create`\n\
        \   - The fields marked with an asterisk (*) are mandatory. They cannot be\
        \ null or empty."
      operationId: FrameworkV1TermCreatePost
      parameters:
      - name: framework
        in: query
        description: Represents the framework in which the term is to be created
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: Represents the category in which the term is to be created
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: Unique ID for identifying the root organisation to which the
          user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n \n   The body is the representation of\
          \ the resource object for creating a term"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFrameworkTermRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFrameworkTermRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFrameworkTermRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."create term" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermCreate200Response'
        400:
          description: BAD REQUEST. The "create term" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermCreate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/term/read/{code}:
    get:
      tags:
      - Framework - Term APIs
      summary: Fetch Term
      description: |-
        This API is associated with fetching the available terms under a specific category and a framework on Sunbird Platform.
           - The endpoint for **Fetch Term** is `/framework/v1/term/read/{code}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1TermReadClass2Get
      parameters:
      - name: code
        in: path
        description: The name/code of the term to be fetched
        required: true
        schema:
          type: string
      - name: framework
        in: query
        description: Represents the framework in which the term can be fetched
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: Represents the category in which the term can be fetched
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: Unique ID for identifying the root organisation to which the
          user belongs
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK ! Successful operation."Fetch term" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermGet200Response'
        400:
          description: BAD REQUEST. The "Fetch term" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermGet400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
  /framework/v1/term/update{code}:
    patch:
      tags:
      - Framework - Term APIs
      summary: Update Term
      description: |-
        This API is associated with updating a term under a category in a framework on Sunbird Platform
           - The endpoint for **Update Term** is `/framework/v1/term/update{code}`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1TermUpdateClass2Patch
      parameters:
      - name: code
        in: path
        description: The name/code of the term to be update
        required: true
        schema:
          type: string
      - name: framework
        in: query
        description: Represents the framework in which the terms is to be updated
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: Represents the category in which the term is to be updated
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.'
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique ID to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n \n   The body is the representation of\
          \ the resource object for updating a term"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkTermRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkTermRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateFrameworkTermRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."update term" operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermUpdate200Response'
        400:
          description: BAD REQUEST. The "update term" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermUpdate400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
  /framework/v1/term/search:
    post:
      tags:
      - Framework - Term APIs
      summary: Search Term
      description: |-
        This API is associated with searching the existing terms under a category in a framework on Sunbird Platform
           - The endpoint for **Search Term** is `/framework/v1/term/search`
           - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.
      operationId: FrameworkV1TermSearchPost
      parameters:
      - name: framework
        in: query
        description: Represents the framework in which the term is to be searched
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: Represents the category in which the term is to be searched
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: To make use of the API, you require authorization. Raise a request
          to the administrator for the use of the API. You will receive the authorization
          key. Specify the key received, here.
        required: true
        schema:
          type: string
      - name: Content-Type
        in: header
        description: "The Content Type entity is the media type of the resource.\n\
          \ Possible media types can be:- \n   - application/json\n   - multipart/form-data\n\
          \   - application/x-www-form-urlencoded"
        required: true
        schema:
          type: string
      - name: X-Channel-Id
        in: header
        description: It is the Unique ID to identify the root organisation to which
          the user belongs
        required: true
        schema:
          type: string
      requestBody:
        description: "'The body parameter refers to the format of the request, the\
          \ request body (payload) takes the following media types to make the payload:\n\
          \   \n   - JSON \n   - XML data\n \n   The body is the representation of\
          \ the resource object for searching a term"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrameworkTermSearchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FrameworkTermSearchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FrameworkTermSearchRequest'
        required: true
      responses:
        200:
          description: OK ! Successful operation."Search term operation was successfully
            executed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermSearch200Response'
        400:
          description: BAD REQUEST. The "search term" operation failed ! The possible
            reason for failure is that you may have missed providing input for a mandatory
            parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworkTermSearch400Response'
        500:
          description: INTERNAL SERVER ERROR ! Looks like something went wrong! These
            errors are tracked automatically, but if the problem persists feel free
            to contact us. In the meantime, try refreshing.
          content: {}
      security:
      - bearer: []
      x-codegen-request-body-name: Body
components:
  schemas:
    CreateFrameworkRequest:
      description: This is the create framework request body
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkCreate'
    RequestFrameworkCreate:
      type: object
      properties:
        request:
          type: object
          properties:
            framework:
              type: object
              properties:
                name:
                  type: string
                  description: Represents the name of the framework
                code:
                  type: string
                  description: Represents the unique code of the framework
                description:
                  type: string
                  description: It is the description of the framework
                type:
                  type: string
                  description: Represents the type of framework
                channels:
                  type: array
                  description: Represents the channels associated with the framework
                  items:
                    type: object
                    properties: {}
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of framework name in different
                    language
      description: Request body for create framework
    UpdateFrameworkRequest:
      description: Request body for update Framework
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkUpdate'
    RequestFrameworkUpdate:
      type: object
      properties:
        request:
          type: object
          properties:
            framework:
              type: object
              properties:
                name:
                  type: string
                  description: Represents the name of the framework
                description:
                  type: string
                  description: It is the description of the framework
                type:
                  type: string
                  description: Represents the type of framework
                channels:
                  type: array
                  description: Represents the channels associated with the framework
                  items:
                    type: object
                    properties: {}
                categories:
                  type: array
                  description: Represents the categories associated with the framework
                  items:
                    type: object
                    properties: {}
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of framework name in different
                    language
      description: Request body of update framework
    ResultWithNodeId:
      title: Result Containing Node Id
      type: object
      properties:
        result:
          $ref: '#/components/schemas/NodeId'
    ContentCreateResponse:
      description: Create Content Response
      allOf:
      - $ref: '#/components/schemas/ResultWithNodeId'
      - $ref: '#/components/schemas/ResponseHeader'
    ResponseHeader:
      title: ResponseHeader
      type: object
      properties:
        id:
          type: string
          description: Represents the API identifier
        ver:
          type: string
          description: Represents the API version information
        ts:
          type: string
          description: Represents the API execution timespan
        params:
          $ref: '#/components/schemas/ResponseParams'
        responseCode:
          type: object
          properties: {}
          description: 'Represents the API response code '
    ResponseParams:
      title: Response Parameter
      type: object
      properties:
        resmsgid:
          type: string
          description: Represents the response message identifier
        msgid:
          type: string
          description: Represents the message uniquely
        err:
          type: string
          description: Represents the error code
        status:
          type: string
          description: Represents the response status
        errmsg:
          type: string
          description: Represents the error message
    EmptyResult:
      title: Empty Result
      type: object
      properties:
        result:
          type: object
          properties: {}
          description: Empty Result
    NodeId:
      title: Node Id
      type: object
      properties:
        node_id:
          type: string
          description: Node Identifier
        versionKey:
          type: string
          description: Represents the version key of the category instance
    ContentCreateErrorResponse:
      title: Create Content Error Response
      allOf:
      - $ref: '#/components/schemas/EmptyResult'
      - $ref: '#/components/schemas/ResponseHeader'
    RequestChannelCreate:
      type: object
      properties:
        request:
          type: object
          properties:
            channel:
              type: object
              properties:
                name:
                  type: string
                  description: Represents the name of the channel
                code:
                  type: string
                  description: Represents the unique code of the channel
                description:
                  type: string
                  description: It is the description of the channel
      description: Request body of create channel
    RequestChannelUpdate:
      type: object
      properties:
        request:
          type: object
          properties:
            channel:
              type: object
              properties:
                name:
                  type: string
                  description: Represents the name of the channel
                description:
                  type: string
                  description: It is the description of the channel
                framework:
                  type: array
                  description: Framework linked to the channel
                  items:
                    type: object
                    properties: {}
      description: Request body of update channel
    ChannelCreateRequest:
      description: Request body of the create channel
      allOf:
      - $ref: '#/components/schemas/RequestChannelCreate'
    ChannelUpdateRequest:
      description: Request body of the create channel
      allOf:
      - $ref: '#/components/schemas/RequestChannelUpdate'
    ResponseChannelCreate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Represents the identifier of the channel created
            versionKey:
              type: string
              description: Represents the version key of the current channel
      description: Response body of the create channel
    ResponseChannelCreate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Represents the Error code of the api response.
        result:
          type: object
          properties: {}
          description: Represents the empty response code.
      description: Response of the create channel on client error.
    ChannelCreate200Response:
      description: Request body of the  create response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseChannelCreate200'
    ChannelCreate400Response:
      description: Channel create response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseChannelCreate400'
    ChannelObj:
      type: object
      properties:
        identifier:
          type: string
          description: Represents the Unique ID of the channel across sunbird installations
        code:
          type: string
          description: The code is same as the unique ID of the channel
        description:
          type: string
          description: Description of the channel
        defaultFramework:
          type: string
          description: A framework identifier which can be used fetch categories for
            create/update/search other objects
        frameworks:
          type: object
          properties: {}
          description: List of frameworks subscribed by this channel
        suggested_frameworks:
          type: array
          description: List of frameworks available in platform to subscribe
          items:
            type: object
            properties: {}
    ResponseChannelGet200:
      type: object
      properties:
        result:
          type: object
          properties:
            channel:
              $ref: '#/components/schemas/ChannelObj'
      description: Response of the channel get
    ChannelGet200Response:
      description: Channel get response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseChannelGet200'
    ChannelGet400Response:
      description: Channel get response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseChannelCreate400'
    RequestChannelSearch:
      type: object
      properties:
        request:
          type: object
          properties:
            search:
              type: object
              properties:
                status:
                  type: string
      description: Request map of channel search api
    ChannelSearchRequest:
      description: Channel create request
      allOf:
      - $ref: '#/components/schemas/RequestChannelSearch'
    FrameworkGet400Response:
      description: Framework get response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkCreate400'
    ResponseFrameworkCreate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Represents the error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the framework create on client error
    FrameworkCreate200Response:
      description: Framework create response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkCreate200'
    ResponseFrameworkCreate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Unique identifier of the framework created
            versionKey:
              type: string
              description: Represents the version key of the current framework object
      description: Response body of create framework
    FrameworkObj:
      type: object
      properties:
        identifier:
          type: string
          description: Represents the unique ID of the framework across sunbird installations
        name:
          type: string
          description: Represents the name of the framework
        code:
          type: string
          description: This is same as identifier
        description:
          type: string
          description: Description of the framework
        consumerId:
          type: string
          description: Represents the consumerId
        channel:
          type: string
          description: Channel by which the framework was created
        type:
          type: string
          description: Type of the framework
        createdOn:
          type: string
          description: Creation date of the framework
        versionKey:
          type: string
          description: Version key of the framework
        channels:
          type: array
          description: Creation date of the framework
          items:
            type: object
            properties: {}
        appId:
          type: string
          description: Represents the AppId of the framework
        lastUpdatedOn:
          type: string
          description: Represents the last Updation date of the framework
        status:
          type: string
          description: Represents the status of the framework
        categories:
          type: array
          description: Represents the categories in a framework
          items:
            type: object
            properties: {}
        translations:
          type: object
          properties: {}
          description: Represents the translation of framework name in different language.
    ResponseFrameworkGet200:
      type: object
      properties:
        result:
          type: object
          properties:
            framework:
              $ref: '#/components/schemas/FrameworkObj'
      description: Response of the Framework get.
    FrameworkGet200Response:
      description: Framework get response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkGet200'
    FrameworkUpdate400Response:
      description: Framework Update response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkUpdate400'
    ResponseFrameworkUpdate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the framewrk update on client error.
    FrameworkUpdate200Response:
      description: Framework update response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkUpdate200'
    ResponseFrameworkUpdate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Identifier of the framework update.
            versionKey:
              type: string
              description: Version key of the current framework object. This is used
                for all update calls of the same object
      description: Response of the framework update.
    RequestFrameworkList:
      type: object
      properties:
        request:
          type: object
          properties:
            search:
              type: object
              properties: {}
      description: Request map of framework list api
    FrameworkListRequest:
      description: Framework List request.
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkList'
    FrameworkList400Response:
      description: Framework List response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkList400'
    ResponseFrameworkList400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the framewrk list on client error
    FrameworkList200Response:
      description: Framework list response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkList200'
    ResponseFrameworkList200:
      type: object
      properties:
        result:
          type: object
          properties:
            frameworks:
              type: array
              description: List of frameworks
              items:
                type: object
                properties: {}
            count:
              type: number
              description: Number of frameworks searched
      description: Response of the framework list.
    CopyFrameworkRequest:
      description: Framework copy request
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkCopy'
    RequestFrameworkCopy:
      type: object
      properties:
        request:
          type: object
          properties:
            framework:
              type: object
              properties:
                code:
                  type: string
                  description: Unique code of the framework
      description: Request map of framework copy api
    FrameworkCopy400Response:
      description: Framework Copy response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkCopy400'
    ResponseFrameworkCopy400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the framework copy on client error
    FrameworkCopy200Response:
      description: Framework copy response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkCopy200'
    ResponseFrameworkCopy200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Identifier of the Framework update.
      description: Response of the framework copy
    CreateCategoryInstanceRequest:
      description: Category Instance create Request
      allOf:
      - $ref: '#/components/schemas/RequestCategoryInstanceCreate'
    RequestCategoryInstanceCreate:
      type: object
      properties:
        request:
          type: object
          properties:
            category:
              type: object
              properties:
                code:
                  type: string
                  description: ""
                name:
                  type: string
                  description: ""
                description:
                  type: string
                  description: ""
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of category name in different
                    language.
                frameworks:
                  type: array
                  description: Frameworks with which category instance is associated
                  items:
                    type: object
                    properties: {}
      description: Request map of CategoryInstance Create api.
    CategoryInstanceCreate400Response:
      description: CategoryInstance Create response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceCreate400'
    ResponseCategoryInstanceCreate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the CategoryInstance Create on client error.
    CategoryInstanceCreate200Response:
      description: CategoryInstance Create response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceCreate200'
    ResponseCategoryInstanceCreate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Identifier of the category instance
            versionKey:
              type: string
              description: versionKey of the category instance
      description: Response of the CategoryInstance Create.
    CategoryInstanceObj:
      type: object
      properties:
        identifier:
          type: string
          description: Unique id of the category instance across sunbird installations
        name:
          type: string
          description: Name of the category instance
        code:
          type: string
          description: This is same as identifier
        description:
          type: string
          description: Description of the category instance
        consumerId:
          type: string
          description: consumerId.
        channel:
          type: string
          description: Channel who created this category instance
        createdOn:
          type: string
          description: Creation date of the category instance
        versionKey:
          type: string
          description: Version key of the category instance
        appId:
          type: string
          description: AppId of the category instance
        lastUpdatedOn:
          type: string
          description: Last Updation date of the category instance
        status:
          type: string
          description: Status of the category instance
        frameworks:
          type: array
          description: Frameworks with which category instance is associated
          items:
            type: object
            properties: {}
        channels:
          type: array
          description: Channels with which category instance is associated
          items:
            type: object
            properties: {}
        terms:
          type: array
          description: Terms associated with category.
          items:
            type: object
            properties: {}
        translations:
          type: object
          properties: {}
          description: Represents the translation of category name in different language
    ResponseCategoryInstanceGet200:
      type: object
      properties:
        result:
          type: object
          properties:
            category:
              $ref: '#/components/schemas/CategoryInstanceObj'
      description: Response of the CategoryInstance get
    CategoryInstanceGet200Response:
      description: CategoryInstance get response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceGet200'
    CategoryInstanceGet400Response:
      description: CategoryInstance Get response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceGet400'
    ResponseCategoryInstanceGet400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the CategoryInstance Get on client error
    UpdateCategoryInstanceRequest:
      description: CategoryInstance update request
      allOf:
      - $ref: '#/components/schemas/RequestCategoryInstanceUpdate'
    RequestCategoryInstanceUpdate:
      type: object
      properties:
        request:
          type: object
          properties:
            framework:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the Category Instance
                description:
                  type: string
                  description: Description of the Category Instance
                frameworks:
                  type: array
                  description: Frameworks with which Category Instance is associated
                  items:
                    type: object
                    properties: {}
                channels:
                  type: array
                  description: Channels with which Category Instance is associated
                  items:
                    type: object
                    properties: {}
                terms:
                  type: array
                  description: Terms associated with Category
                  items:
                    type: object
                    properties: {}
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of category name in different
                    language.
      description: Request map of CategoryInstance update API
    CategoryInstanceUpdate400Response:
      description: CategoryInstance Update response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceUpdate400'
    ResponseCategoryInstanceUpdate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the CategoryInstance Update on client error.
    CategoryInstanceUpdate200Response:
      description: CategoryInstance Update response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceUpdate200'
    ResponseCategoryInstanceUpdate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Identifier of the CategoryInstance.
            versionKey:
              type: string
              description: versionKey of the Category Instance
      description: Response of the CategoryInstance Update.
    RequestCategoryInstanceSearch:
      type: object
      properties:
        request:
          type: object
          properties:
            search:
              type: object
              properties: {}
      description: Request map of CategoryInstance search api.
    CategoryInstanceSearchRequest:
      description: CategoryInstance Search request.
      allOf:
      - $ref: '#/components/schemas/RequestCategoryInstanceSearch'
    CategoryInstanceSearch400Response:
      description: CategoryInstance Search response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceSearch400'
    ResponseCategoryInstanceSearch400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the CategoryInstance Search on client error.
    CategoryInstanceSearch200Response:
      description: CategoryInstance Search response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseCategoryInstanceSearch200'
    ResponseCategoryInstanceSearch200:
      type: object
      properties:
        result:
          type: object
          properties:
            categories:
              type: array
              description: List of CategoryInstance
              items:
                type: object
                properties: {}
            count:
              type: number
              description: Number of CategoryInstance searched
      description: Response of the CategoryInstance Search.
    CreateFrameworkTermRequest:
      description: Framework Term create Request
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkTermCreate'
    RequestFrameworkTermCreate:
      type: object
      properties:
        request:
          type: object
          properties:
            term:
              type: object
              properties:
                code:
                  type: string
                  description: ""
                name:
                  type: string
                  description: ""
                description:
                  type: string
                  description: ""
                index:
                  type: number
                  description: ""
                categories:
                  type: array
                  description: ""
                  items:
                    type: object
                    properties: {}
                parents:
                  type: array
                  description: ""
                  items:
                    type: object
                    properties: {}
                associationswith:
                  type: array
                  description: ""
                  items:
                    type: object
                    properties: {}
                children:
                  type: array
                  description: ""
                  items:
                    type: object
                    properties: {}
                associations:
                  type: array
                  description: ""
                  items:
                    type: object
                    properties: {}
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of term name in different
                    language
      description: Request map of FrameworkTerm Create API
    FrameworkTermCreate400Response:
      description: Framework Term Create response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermCreate400'
    ResponseFrameworkTermCreate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the FrameworkTerm Create on client error.
    FrameworkTermCreate200Response:
      description: Framework Term Create response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermCreate200'
    ResponseFrameworkTermCreate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Identifier of the Framework Term
            versionKey:
              type: string
              description: versionKey of the Framework Term
      description: Response of the FrameworkTerm Create.
    FrameworkTermObj:
      type: object
      properties:
        identifier:
          type: string
          description: Unique ID of the Framework Term
        name:
          type: string
          description: Represents the name of the Framework Term
        code:
          type: string
          description: Unique ID of the Framework Term
        description:
          type: string
          description: Description of the Framework Term
        consumerId:
          type: string
          description: Represents the consumerId
        channel:
          type: string
          description: Represents the channel that created the Framework Term
        createdOn:
          type: string
          description: Represents the creation date of the Framework Term
        versionKey:
          type: string
          description: Represents the version key of the Framework Term
        appId:
          type: string
          description: Represents the AppId of the Framework Term
        lastUpdatedOn:
          type: string
          description: Represents the last updated date of the Framework Term
        status:
          type: string
          description: Represents the status of the Framework Term
        categories:
          type: array
          description: Represents the category instances with which Framework Term
            is associated
          items:
            type: object
            properties: {}
        parents:
          type: array
          description: Parent terms
          items:
            type: object
            properties: {}
        associationswith:
          type: array
          description: Represents the Terms to which the current term is associated
          items:
            type: object
            properties: {}
        children:
          type: array
          description: Child terms of the current term
          items:
            type: object
            properties: {}
        associations:
          type: array
          description: Represents other terms associated with the current term
          items:
            type: object
            properties: {}
        translations:
          type: object
          properties: {}
          description: Represents the translation of term name in different language
    ResponseFrameworkTermGet200:
      type: object
      properties:
        result:
          type: object
          properties:
            category:
              $ref: '#/components/schemas/FrameworkTermObj'
      description: Response body of the get Framework Term
    FrameworkTermGet200Response:
      description: FrameworkTerm get response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermGet200'
    FrameworkTermGet400Response:
      description: FrameworkTerm Get response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermGet400'
    ResponseFrameworkTermGet400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the FrameworkTerm Get on client error.
    UpdateFrameworkTermRequest:
      description: Framework Term update request
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkTermUpdate'
    RequestFrameworkTermUpdate:
      type: object
      properties:
        request:
          type: object
          properties:
            term:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the framework term
                description:
                  type: string
                  description: Description of the framework term
                categories:
                  type: array
                  description: Category instances with which framework term is associated
                  items:
                    type: object
                    properties: {}
                parents:
                  type: array
                  description: Parent terms
                  items:
                    type: object
                    properties: {}
                associationswith:
                  type: array
                  description: Terms to which the current term is associated
                  items:
                    type: object
                    properties: {}
                children:
                  type: array
                  description: Represents the child terms associated to current term
                  items:
                    type: object
                    properties: {}
                associations:
                  type: array
                  description: Represents the terms associated with the current term
                  items:
                    type: object
                    properties: {}
                translations:
                  type: object
                  properties: {}
                  description: Represents the translation of term name in different
                    language
      description: Request map of framework term update api.
    FrameworkTermUpdate400Response:
      description: FrameworkTerm Update response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermUpdate400'
    ResponseFrameworkTermUpdate400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the Framework Term Update (error)
    FrameworkTermUpdate200Response:
      description: CategoryInstance Update response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermUpdate200'
    ResponseFrameworkTermUpdate200:
      type: object
      properties:
        result:
          type: object
          properties:
            node_id:
              type: string
              description: Represents the Identifier of the Framework Term
            versionKey:
              type: string
              description: Represents the versionKey of the Framework Term
      description: Response of the update Framework Term
    RequestFrameworkTermSearch:
      type: object
      properties:
        request:
          type: object
          properties:
            search:
              type: object
              properties: {}
      description: Request map of FrameworkTerm search api.
    FrameworkTermSearchRequest:
      description: FrameworkTerm Search request.
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkTermSearch'
    FrameworkTermSearch400Response:
      description: FrameworkTerm Search response for 400.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermSearch400'
    ResponseFrameworkTermSearch400:
      type: object
      properties:
        responseCode:
          type: string
          description: Error code of the api response.
        result:
          type: object
          properties: {}
          description: Empty response code.
      description: Response of the FrameworkTerm Search on client error.
    FrameworkTermSearch200Response:
      description: FrameworkTerm Search response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkTermSearch200'
    ResponseFrameworkTermSearch200:
      type: object
      properties:
        result:
          type: object
          properties:
            terms:
              type: array
              description: Represents the list of Framework Terms
              items:
                type: object
                properties: {}
            count:
              type: number
              description: Represents the number of Framework Term searched
      description: Response of the FrameworkTerm Search.
    PublishFrameworkRequest:
      description: Request body of Copy Framework
      allOf:
      - $ref: '#/components/schemas/RequestFrameworkPublish'
    RequestFrameworkPublish:
      type: object
      properties:
        request:
          type: object
          properties: {}
      description: Request body of publish framework
    FrameworkPublish200Response:
      description: Framework copy response on success.
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/ResponseFrameworkPublish200'
    ResponseFrameworkPublish200:
      type: object
      properties:
        result:
          type: object
          properties:
            publishStatus:
              type: string
              description: response status of the publish operation
              example: Publish Operation for Content Id 'test_300_framework' Started
                Successfully!
      description: Response body of copy framework
    ApiResponse:
      required:
      - ets
      - id
      - params
      - ver
      type: object
      properties:
        id:
          type: string
          description: Represents the ID of the request which was made
        ver:
          type: string
          description: Represents the version of the API which was used
        ets:
          type: integer
          description: Represents the EPOCH (UTC) timestamp in milliseconds since
            EPOCH
          format: int64
        params:
          required:
          - msgid
          - resmsgid
          - status
          type: object
          properties:
            msgid:
              type: string
              description: Represents the ID of the message sent
            resmsgid:
              type: string
              description: Represents the ID of the response message
            status:
              type: string
              enum:
              - success
              - error
        responseCode:
          type: string
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
    userToken:
      type: apiKey
      name: x-authenticated-user-token
      in: header
